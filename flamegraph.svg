<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="340222084929"><g><title>[libc.so.6] (1,538,861,852 samples, 0.45%)</title><rect x="0.2473%" y="309" width="0.4523%" height="15" fill="rgb(227,0,7)" fg:x="841412841" fg:w="1538861852"/><text x="0.4973%" y="319.50"></text></g><g><title>[libc.so.6] (2,040,308,170 samples, 0.60%)</title><rect x="0.1008%" y="325" width="0.5997%" height="15" fill="rgb(217,0,24)" fg:x="343020899" fg:w="2040308170"/><text x="0.3508%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,636,816,856 samples, 0.78%)</title><rect x="0.0436%" y="469" width="0.7750%" height="15" fill="rgb(221,193,54)" fg:x="148495456" fg:w="2636816856"/><text x="0.2936%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,636,816,856 samples, 0.78%)</title><rect x="0.0436%" y="453" width="0.7750%" height="15" fill="rgb(248,212,6)" fg:x="148495456" fg:w="2636816856"/><text x="0.2936%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,636,816,856 samples, 0.78%)</title><rect x="0.0436%" y="437" width="0.7750%" height="15" fill="rgb(208,68,35)" fg:x="148495456" fg:w="2636816856"/><text x="0.2936%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,636,816,856 samples, 0.78%)</title><rect x="0.0436%" y="421" width="0.7750%" height="15" fill="rgb(232,128,0)" fg:x="148495456" fg:w="2636816856"/><text x="0.2936%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,538,719,663 samples, 0.75%)</title><rect x="0.0725%" y="405" width="0.7462%" height="15" fill="rgb(207,160,47)" fg:x="246592649" fg:w="2538719663"/><text x="0.3225%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,538,719,663 samples, 0.75%)</title><rect x="0.0725%" y="389" width="0.7462%" height="15" fill="rgb(228,23,34)" fg:x="246592649" fg:w="2538719663"/><text x="0.3225%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2,538,719,663 samples, 0.75%)</title><rect x="0.0725%" y="373" width="0.7462%" height="15" fill="rgb(218,30,26)" fg:x="246592649" fg:w="2538719663"/><text x="0.3225%" y="383.50"></text></g><g><title>__rustc::__rdl_alloc (2,538,719,663 samples, 0.75%)</title><rect x="0.0725%" y="357" width="0.7462%" height="15" fill="rgb(220,122,19)" fg:x="246592649" fg:w="2538719663"/><text x="0.3225%" y="367.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,538,719,663 samples, 0.75%)</title><rect x="0.0725%" y="341" width="0.7462%" height="15" fill="rgb(250,228,42)" fg:x="246592649" fg:w="2538719663"/><text x="0.3225%" y="351.50"></text></g><g><title>malloc (401,983,243 samples, 0.12%)</title><rect x="0.7005%" y="325" width="0.1182%" height="15" fill="rgb(240,193,28)" fg:x="2383329069" fg:w="401983243"/><text x="0.9505%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,906,368,467 samples, 0.85%)</title><rect x="0.0071%" y="533" width="0.8543%" height="15" fill="rgb(216,20,37)" fg:x="24176972" fg:w="2906368467"/><text x="0.2571%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,821,796,403 samples, 0.83%)</title><rect x="0.0320%" y="517" width="0.8294%" height="15" fill="rgb(206,188,39)" fg:x="108749036" fg:w="2821796403"/><text x="0.2820%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,821,796,403 samples, 0.83%)</title><rect x="0.0320%" y="501" width="0.8294%" height="15" fill="rgb(217,207,13)" fg:x="108749036" fg:w="2821796403"/><text x="0.2820%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (2,821,796,403 samples, 0.83%)</title><rect x="0.0320%" y="485" width="0.8294%" height="15" fill="rgb(231,73,38)" fg:x="108749036" fg:w="2821796403"/><text x="0.2820%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (145,233,127 samples, 0.04%)</title><rect x="0.8187%" y="469" width="0.0427%" height="15" fill="rgb(225,20,46)" fg:x="2785312312" fg:w="145233127"/><text x="1.0687%" y="479.50"></text></g><g><title>core::ptr::copy_nonoverlapping (145,233,127 samples, 0.04%)</title><rect x="0.8187%" y="453" width="0.0427%" height="15" fill="rgb(210,31,41)" fg:x="2785312312" fg:w="145233127"/><text x="1.0687%" y="463.50"></text></g><g><title>[libc.so.6] (90,151,163 samples, 0.03%)</title><rect x="0.8349%" y="437" width="0.0265%" height="15" fill="rgb(221,200,47)" fg:x="2840394276" fg:w="90151163"/><text x="1.0849%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (76,562,525 samples, 0.02%)</title><rect x="0.8614%" y="533" width="0.0225%" height="15" fill="rgb(226,26,5)" fg:x="2930545439" fg:w="76562525"/><text x="1.1114%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (54,993,379 samples, 0.02%)</title><rect x="0.8677%" y="517" width="0.0162%" height="15" fill="rgb(249,33,26)" fg:x="2952114585" fg:w="54993379"/><text x="1.1177%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,031,120,361 samples, 0.89%)</title><rect x="0.0071%" y="581" width="0.8909%" height="15" fill="rgb(235,183,28)" fg:x="24176972" fg:w="3031120361"/><text x="0.2571%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,031,120,361 samples, 0.89%)</title><rect x="0.0071%" y="565" width="0.8909%" height="15" fill="rgb(221,5,38)" fg:x="24176972" fg:w="3031120361"/><text x="0.2571%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (3,031,120,361 samples, 0.89%)</title><rect x="0.0071%" y="549" width="0.8909%" height="15" fill="rgb(247,18,42)" fg:x="24176972" fg:w="3031120361"/><text x="0.2571%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (38,947,817 samples, 0.01%)</title><rect x="0.8866%" y="533" width="0.0114%" height="15" fill="rgb(241,131,45)" fg:x="3016349516" fg:w="38947817"/><text x="1.1366%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (159,356,402 samples, 0.05%)</title><rect x="0.8980%" y="581" width="0.0468%" height="15" fill="rgb(249,31,29)" fg:x="3055297333" fg:w="159356402"/><text x="1.1480%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (91,238,231 samples, 0.03%)</title><rect x="0.9181%" y="565" width="0.0268%" height="15" fill="rgb(225,111,53)" fg:x="3123415504" fg:w="91238231"/><text x="1.1681%" y="575.50"></text></g><g><title>core::ptr::read (91,238,231 samples, 0.03%)</title><rect x="0.9181%" y="549" width="0.0268%" height="15" fill="rgb(238,160,17)" fg:x="3123415504" fg:w="91238231"/><text x="1.1681%" y="559.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (37,772,778 samples, 0.01%)</title><rect x="0.9467%" y="485" width="0.0111%" height="15" fill="rgb(214,148,48)" fg:x="3220930854" fg:w="37772778"/><text x="1.1967%" y="495.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (37,772,778 samples, 0.01%)</title><rect x="0.9467%" y="469" width="0.0111%" height="15" fill="rgb(232,36,49)" fg:x="3220930854" fg:w="37772778"/><text x="1.1967%" y="479.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (34,836,332 samples, 0.01%)</title><rect x="0.9476%" y="453" width="0.0102%" height="15" fill="rgb(209,103,24)" fg:x="3223867300" fg:w="34836332"/><text x="1.1976%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (50,161,939 samples, 0.01%)</title><rect x="0.9449%" y="581" width="0.0147%" height="15" fill="rgb(229,88,8)" fg:x="3214653735" fg:w="50161939"/><text x="1.1949%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (50,161,939 samples, 0.01%)</title><rect x="0.9449%" y="565" width="0.0147%" height="15" fill="rgb(213,181,19)" fg:x="3214653735" fg:w="50161939"/><text x="1.1949%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (50,161,939 samples, 0.01%)</title><rect x="0.9449%" y="549" width="0.0147%" height="15" fill="rgb(254,191,54)" fg:x="3214653735" fg:w="50161939"/><text x="1.1949%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (50,161,939 samples, 0.01%)</title><rect x="0.9449%" y="533" width="0.0147%" height="15" fill="rgb(241,83,37)" fg:x="3214653735" fg:w="50161939"/><text x="1.1949%" y="543.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (43,884,820 samples, 0.01%)</title><rect x="0.9467%" y="517" width="0.0129%" height="15" fill="rgb(233,36,39)" fg:x="3220930854" fg:w="43884820"/><text x="1.1967%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (43,884,820 samples, 0.01%)</title><rect x="0.9467%" y="501" width="0.0129%" height="15" fill="rgb(226,3,54)" fg:x="3220930854" fg:w="43884820"/><text x="1.1967%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (69,431,649 samples, 0.02%)</title><rect x="1.0079%" y="549" width="0.0204%" height="15" fill="rgb(245,192,40)" fg:x="3429034153" fg:w="69431649"/><text x="1.2579%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (69,431,649 samples, 0.02%)</title><rect x="1.0079%" y="533" width="0.0204%" height="15" fill="rgb(238,167,29)" fg:x="3429034153" fg:w="69431649"/><text x="1.2579%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (69,431,649 samples, 0.02%)</title><rect x="1.0079%" y="517" width="0.0204%" height="15" fill="rgb(232,182,51)" fg:x="3429034153" fg:w="69431649"/><text x="1.2579%" y="527.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (69,431,649 samples, 0.02%)</title><rect x="1.0079%" y="501" width="0.0204%" height="15" fill="rgb(231,60,39)" fg:x="3429034153" fg:w="69431649"/><text x="1.2579%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt;&gt; (63,778,874 samples, 0.02%)</title><rect x="1.0283%" y="549" width="0.0187%" height="15" fill="rgb(208,69,12)" fg:x="3498465802" fg:w="63778874"/><text x="1.2783%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,543,619 samples, 0.01%)</title><rect x="1.0345%" y="533" width="0.0125%" height="15" fill="rgb(235,93,37)" fg:x="3519701057" fg:w="42543619"/><text x="1.2845%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42,543,619 samples, 0.01%)</title><rect x="1.0345%" y="517" width="0.0125%" height="15" fill="rgb(213,116,39)" fg:x="3519701057" fg:w="42543619"/><text x="1.2845%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (42,543,619 samples, 0.01%)</title><rect x="1.0345%" y="501" width="0.0125%" height="15" fill="rgb(222,207,29)" fg:x="3519701057" fg:w="42543619"/><text x="1.2845%" y="511.50"></text></g><g><title>__rustc::__rdl_dealloc (42,543,619 samples, 0.01%)</title><rect x="1.0345%" y="485" width="0.0125%" height="15" fill="rgb(206,96,30)" fg:x="3519701057" fg:w="42543619"/><text x="1.2845%" y="495.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (42,543,619 samples, 0.01%)</title><rect x="1.0345%" y="469" width="0.0125%" height="15" fill="rgb(218,138,4)" fg:x="3519701057" fg:w="42543619"/><text x="1.2845%" y="479.50"></text></g><g><title>&lt;liblevenshtein::transducer::query::QueryIterator&lt;N&gt; as core::iter::traits::iterator::Iterator&gt;::next (277,822,413 samples, 0.08%)</title><rect x="0.9672%" y="581" width="0.0817%" height="15" fill="rgb(250,191,14)" fg:x="3290757496" fg:w="277822413"/><text x="1.2172%" y="591.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::advance (230,152,622 samples, 0.07%)</title><rect x="0.9812%" y="565" width="0.0676%" height="15" fill="rgb(239,60,40)" fg:x="3338427287" fg:w="230152622"/><text x="1.2312%" y="575.50"></text></g><g><title>&lt;rayon_core::latch::SpinLatch as rayon_core::latch::Latch&gt;::set (38,306,059 samples, 0.01%)</title><rect x="1.0489%" y="565" width="0.0113%" height="15" fill="rgb(206,27,48)" fg:x="3568579909" fg:w="38306059"/><text x="1.2989%" y="575.50"></text></g><g><title>rayon_core::latch::CoreLatch::set (35,663,557 samples, 0.01%)</title><rect x="1.0497%" y="549" width="0.0105%" height="15" fill="rgb(225,35,8)" fg:x="3571222411" fg:w="35663557"/><text x="1.2997%" y="559.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (5,405,582,919 samples, 1.59%)</title><rect x="1.0771%" y="213" width="1.5888%" height="15" fill="rgb(250,213,24)" fg:x="3664449473" fg:w="5405582919"/><text x="1.3271%" y="223.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (5,405,582,919 samples, 1.59%)</title><rect x="1.0771%" y="197" width="1.5888%" height="15" fill="rgb(247,123,22)" fg:x="3664449473" fg:w="5405582919"/><text x="1.3271%" y="207.50"></text></g><g><title>exp (5,163,119,461 samples, 1.52%)</title><rect x="1.1483%" y="181" width="1.5176%" height="15" fill="rgb(231,138,38)" fg:x="3906912931" fg:w="5163119461"/><text x="1.3983%" y="191.50"></text></g><g><title>[libm.so.6] (3,697,531,857 samples, 1.09%)</title><rect x="1.5791%" y="165" width="1.0868%" height="15" fill="rgb(231,145,46)" fg:x="5372500535" fg:w="3697531857"/><text x="1.8291%" y="175.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (523,456,542 samples, 0.15%)</title><rect x="2.6659%" y="213" width="0.1539%" height="15" fill="rgb(251,118,11)" fg:x="9070032392" fg:w="523456542"/><text x="2.9159%" y="223.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (523,456,542 samples, 0.15%)</title><rect x="2.6659%" y="197" width="0.1539%" height="15" fill="rgb(217,147,25)" fg:x="9070032392" fg:w="523456542"/><text x="2.9159%" y="207.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (6,167,507,521 samples, 1.81%)</title><rect x="1.0678%" y="229" width="1.8128%" height="15" fill="rgb(247,81,37)" fg:x="3632920585" fg:w="6167507521"/><text x="1.3178%" y="239.50">&lt;..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (206,939,172 samples, 0.06%)</title><rect x="2.8198%" y="213" width="0.0608%" height="15" fill="rgb(209,12,38)" fg:x="9593488934" fg:w="206939172"/><text x="3.0698%" y="223.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (206,939,172 samples, 0.06%)</title><rect x="2.8198%" y="197" width="0.0608%" height="15" fill="rgb(227,1,9)" fg:x="9593488934" fg:w="206939172"/><text x="3.0698%" y="207.50"></text></g><g><title>core::f64::math::sqrt (206,939,172 samples, 0.06%)</title><rect x="2.8198%" y="181" width="0.0608%" height="15" fill="rgb(248,47,43)" fg:x="9593488934" fg:w="206939172"/><text x="3.0698%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (483,276,203 samples, 0.14%)</title><rect x="2.8806%" y="229" width="0.1420%" height="15" fill="rgb(221,10,30)" fg:x="9800428106" fg:w="483276203"/><text x="3.1306%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (43,909,375 samples, 0.01%)</title><rect x="3.0226%" y="229" width="0.0129%" height="15" fill="rgb(210,229,1)" fg:x="10283704309" fg:w="43909375"/><text x="3.2726%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6,705,721,643 samples, 1.97%)</title><rect x="1.0654%" y="421" width="1.9710%" height="15" fill="rgb(222,148,37)" fg:x="3624711888" fg:w="6705721643"/><text x="1.3154%" y="431.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6,700,341,094 samples, 1.97%)</title><rect x="1.0670%" y="405" width="1.9694%" height="15" fill="rgb(234,67,33)" fg:x="3630092437" fg:w="6700341094"/><text x="1.3170%" y="415.50">r..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6,700,341,094 samples, 1.97%)</title><rect x="1.0670%" y="389" width="1.9694%" height="15" fill="rgb(247,98,35)" fg:x="3630092437" fg:w="6700341094"/><text x="1.3170%" y="399.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (6,700,341,094 samples, 1.97%)</title><rect x="1.0670%" y="373" width="1.9694%" height="15" fill="rgb(247,138,52)" fg:x="3630092437" fg:w="6700341094"/><text x="1.3170%" y="383.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,700,341,094 samples, 1.97%)</title><rect x="1.0670%" y="357" width="1.9694%" height="15" fill="rgb(213,79,30)" fg:x="3630092437" fg:w="6700341094"/><text x="1.3170%" y="367.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (6,700,341,094 samples, 1.97%)</title><rect x="1.0670%" y="341" width="1.9694%" height="15" fill="rgb(246,177,23)" fg:x="3630092437" fg:w="6700341094"/><text x="1.3170%" y="351.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6,700,341,094 samples, 1.97%)</title><rect x="1.0670%" y="325" width="1.9694%" height="15" fill="rgb(230,62,27)" fg:x="3630092437" fg:w="6700341094"/><text x="1.3170%" y="335.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6,700,341,094 samples, 1.97%)</title><rect x="1.0670%" y="309" width="1.9694%" height="15" fill="rgb(216,154,8)" fg:x="3630092437" fg:w="6700341094"/><text x="1.3170%" y="319.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (6,700,341,094 samples, 1.97%)</title><rect x="1.0670%" y="293" width="1.9694%" height="15" fill="rgb(244,35,45)" fg:x="3630092437" fg:w="6700341094"/><text x="1.3170%" y="303.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (6,700,341,094 samples, 1.97%)</title><rect x="1.0670%" y="277" width="1.9694%" height="15" fill="rgb(251,115,12)" fg:x="3630092437" fg:w="6700341094"/><text x="1.3170%" y="287.50">c..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,700,341,094 samples, 1.97%)</title><rect x="1.0670%" y="261" width="1.9694%" height="15" fill="rgb(240,54,50)" fg:x="3630092437" fg:w="6700341094"/><text x="1.3170%" y="271.50">&lt;..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (6,697,512,946 samples, 1.97%)</title><rect x="1.0678%" y="245" width="1.9686%" height="15" fill="rgb(233,84,52)" fg:x="3632920585" fg:w="6697512946"/><text x="1.3178%" y="255.50">c..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6,757,969,294 samples, 1.99%)</title><rect x="1.0629%" y="437" width="1.9863%" height="15" fill="rgb(207,117,47)" fg:x="3616213684" fg:w="6757969294"/><text x="1.3129%" y="447.50">r..</text></g><g><title>rayon_core::join::join_context::{{closure}} (43,247,943 samples, 0.01%)</title><rect x="3.0365%" y="421" width="0.0127%" height="15" fill="rgb(249,43,39)" fg:x="10330935035" fg:w="43247943"/><text x="3.2865%" y="431.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6,816,302,975 samples, 2.00%)</title><rect x="1.0489%" y="581" width="2.0035%" height="15" fill="rgb(209,38,44)" fg:x="3568579909" fg:w="6816302975"/><text x="1.2989%" y="591.50">&lt;..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6,768,669,200 samples, 1.99%)</title><rect x="1.0629%" y="565" width="1.9895%" height="15" fill="rgb(236,212,23)" fg:x="3616213684" fg:w="6768669200"/><text x="1.3129%" y="575.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (6,768,669,200 samples, 1.99%)</title><rect x="1.0629%" y="549" width="1.9895%" height="15" fill="rgb(242,79,21)" fg:x="3616213684" fg:w="6768669200"/><text x="1.3129%" y="559.50">r..</text></g><g><title>std::panic::catch_unwind (6,768,669,200 samples, 1.99%)</title><rect x="1.0629%" y="533" width="1.9895%" height="15" fill="rgb(211,96,35)" fg:x="3616213684" fg:w="6768669200"/><text x="1.3129%" y="543.50">s..</text></g><g><title>std::panicking::catch_unwind (6,768,669,200 samples, 1.99%)</title><rect x="1.0629%" y="517" width="1.9895%" height="15" fill="rgb(253,215,40)" fg:x="3616213684" fg:w="6768669200"/><text x="1.3129%" y="527.50">s..</text></g><g><title>std::panicking::catch_unwind::do_call (6,768,669,200 samples, 1.99%)</title><rect x="1.0629%" y="501" width="1.9895%" height="15" fill="rgb(211,81,21)" fg:x="3616213684" fg:w="6768669200"/><text x="1.3129%" y="511.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,768,669,200 samples, 1.99%)</title><rect x="1.0629%" y="485" width="1.9895%" height="15" fill="rgb(208,190,38)" fg:x="3616213684" fg:w="6768669200"/><text x="1.3129%" y="495.50">&lt;..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6,768,669,200 samples, 1.99%)</title><rect x="1.0629%" y="469" width="1.9895%" height="15" fill="rgb(235,213,38)" fg:x="3616213684" fg:w="6768669200"/><text x="1.3129%" y="479.50">r..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6,768,669,200 samples, 1.99%)</title><rect x="1.0629%" y="453" width="1.9895%" height="15" fill="rgb(237,122,38)" fg:x="3616213684" fg:w="6768669200"/><text x="1.3129%" y="463.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47,337,140 samples, 0.01%)</title><rect x="3.0620%" y="565" width="0.0139%" height="15" fill="rgb(244,218,35)" fg:x="10417445291" fg:w="47337140"/><text x="3.3120%" y="575.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="549" width="0.0130%" height="15" fill="rgb(240,68,47)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="559.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="533" width="0.0130%" height="15" fill="rgb(210,16,53)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="517" width="0.0130%" height="15" fill="rgb(235,124,12)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="501" width="0.0130%" height="15" fill="rgb(224,169,11)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="485" width="0.0130%" height="15" fill="rgb(250,166,2)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="469" width="0.0130%" height="15" fill="rgb(242,216,29)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="453" width="0.0130%" height="15" fill="rgb(230,116,27)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="463.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="437" width="0.0130%" height="15" fill="rgb(228,99,48)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="447.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="421" width="0.0130%" height="15" fill="rgb(253,11,6)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="405" width="0.0130%" height="15" fill="rgb(247,143,39)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="415.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="389" width="0.0130%" height="15" fill="rgb(236,97,10)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="399.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="373" width="0.0130%" height="15" fill="rgb(233,208,19)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="383.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="357" width="0.0130%" height="15" fill="rgb(216,164,2)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="367.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="341" width="0.0130%" height="15" fill="rgb(220,129,5)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="351.50"></text></g><g><title>core::f64::math::sqrt (44,279,866 samples, 0.01%)</title><rect x="3.0629%" y="325" width="0.0130%" height="15" fill="rgb(242,17,10)" fg:x="10420502565" fg:w="44279866"/><text x="3.3129%" y="335.50"></text></g><g><title>[backend_comparison-99338687d45c462c] (99,114,350 samples, 0.03%)</title><rect x="3.0549%" y="581" width="0.0291%" height="15" fill="rgb(242,107,0)" fg:x="10393446180" fg:w="99114350"/><text x="3.3049%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (123,405,619 samples, 0.04%)</title><rect x="3.3905%" y="565" width="0.0363%" height="15" fill="rgb(251,28,31)" fg:x="11535284146" fg:w="123405619"/><text x="3.6405%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (49,696,357 samples, 0.01%)</title><rect x="3.4122%" y="549" width="0.0146%" height="15" fill="rgb(233,223,10)" fg:x="11608993408" fg:w="49696357"/><text x="3.6622%" y="559.50"></text></g><g><title>core::ptr::read (49,696,357 samples, 0.01%)</title><rect x="3.4122%" y="533" width="0.0146%" height="15" fill="rgb(215,21,27)" fg:x="11608993408" fg:w="49696357"/><text x="3.6622%" y="543.50"></text></g><g><title>[libc.so.6] (162,733,252 samples, 0.05%)</title><rect x="3.4300%" y="565" width="0.0478%" height="15" fill="rgb(232,23,21)" fg:x="11669731068" fg:w="162733252"/><text x="3.6800%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (107,338,192 samples, 0.03%)</title><rect x="3.4856%" y="565" width="0.0315%" height="15" fill="rgb(244,5,23)" fg:x="11858936399" fg:w="107338192"/><text x="3.7356%" y="575.50"></text></g><g><title>malloc (77,336,616 samples, 0.02%)</title><rect x="3.4945%" y="549" width="0.0227%" height="15" fill="rgb(226,81,46)" fg:x="11888937975" fg:w="77336616"/><text x="3.7445%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup_by (135,781,301 samples, 0.04%)</title><rect x="3.5172%" y="565" width="0.0399%" height="15" fill="rgb(247,70,30)" fg:x="11966274591" fg:w="135781301"/><text x="3.7672%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (135,781,301 samples, 0.04%)</title><rect x="3.5172%" y="549" width="0.0399%" height="15" fill="rgb(212,68,19)" fg:x="11966274591" fg:w="135781301"/><text x="3.7672%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (114,908,333 samples, 0.03%)</title><rect x="3.5898%" y="469" width="0.0338%" height="15" fill="rgb(240,187,13)" fg:x="12213410658" fg:w="114908333"/><text x="3.8398%" y="479.50"></text></g><g><title>cfree (118,587,309 samples, 0.03%)</title><rect x="3.6236%" y="469" width="0.0349%" height="15" fill="rgb(223,113,26)" fg:x="12328318991" fg:w="118587309"/><text x="3.8736%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (318,890,985 samples, 0.09%)</title><rect x="3.6635%" y="453" width="0.0937%" height="15" fill="rgb(206,192,2)" fg:x="12464102328" fg:w="318890985"/><text x="3.9135%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (318,890,985 samples, 0.09%)</title><rect x="3.6635%" y="437" width="0.0937%" height="15" fill="rgb(241,108,4)" fg:x="12464102328" fg:w="318890985"/><text x="3.9135%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (318,890,985 samples, 0.09%)</title><rect x="3.6635%" y="421" width="0.0937%" height="15" fill="rgb(247,173,49)" fg:x="12464102328" fg:w="318890985"/><text x="3.9135%" y="431.50"></text></g><g><title>__rustc::__rdl_dealloc (318,890,985 samples, 0.09%)</title><rect x="3.6635%" y="405" width="0.0937%" height="15" fill="rgb(224,114,35)" fg:x="12464102328" fg:w="318890985"/><text x="3.9135%" y="415.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (318,890,985 samples, 0.09%)</title><rect x="3.6635%" y="389" width="0.0937%" height="15" fill="rgb(245,159,27)" fg:x="12464102328" fg:w="318890985"/><text x="3.9135%" y="399.50"></text></g><g><title>cfree (290,061,626 samples, 0.09%)</title><rect x="3.6720%" y="373" width="0.0853%" height="15" fill="rgb(245,172,44)" fg:x="12492931687" fg:w="290061626"/><text x="3.9220%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt; (36,969,354 samples, 0.01%)</title><rect x="3.7572%" y="437" width="0.0109%" height="15" fill="rgb(236,23,11)" fg:x="12782993313" fg:w="36969354"/><text x="4.0072%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;i32&gt;&gt;&gt; (36,969,354 samples, 0.01%)</title><rect x="3.7572%" y="421" width="0.0109%" height="15" fill="rgb(205,117,38)" fg:x="12782993313" fg:w="36969354"/><text x="4.0072%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36,969,354 samples, 0.01%)</title><rect x="3.7572%" y="405" width="0.0109%" height="15" fill="rgb(237,72,25)" fg:x="12782993313" fg:w="36969354"/><text x="4.0072%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (36,969,354 samples, 0.01%)</title><rect x="3.7572%" y="389" width="0.0109%" height="15" fill="rgb(244,70,9)" fg:x="12782993313" fg:w="36969354"/><text x="4.0072%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (36,969,354 samples, 0.01%)</title><rect x="3.7572%" y="373" width="0.0109%" height="15" fill="rgb(217,125,39)" fg:x="12782993313" fg:w="36969354"/><text x="4.0072%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt;&gt; (387,360,136 samples, 0.11%)</title><rect x="3.6585%" y="469" width="0.1139%" height="15" fill="rgb(235,36,10)" fg:x="12446906300" fg:w="387360136"/><text x="3.9085%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt; (51,273,123 samples, 0.02%)</title><rect x="3.7572%" y="453" width="0.0151%" height="15" fill="rgb(251,123,47)" fg:x="12782993313" fg:w="51273123"/><text x="4.0072%" y="463.50"></text></g><g><title>liblevenshtein::transducer::intersection::Intersection&lt;N&gt;::is_final (39,992,545 samples, 0.01%)</title><rect x="3.7723%" y="469" width="0.0118%" height="15" fill="rgb(221,13,13)" fg:x="12834266436" fg:w="39992545"/><text x="4.0223%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (789,490,595 samples, 0.23%)</title><rect x="3.5571%" y="565" width="0.2321%" height="15" fill="rgb(238,131,9)" fg:x="12102055892" fg:w="789490595"/><text x="3.8071%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (789,490,595 samples, 0.23%)</title><rect x="3.5571%" y="549" width="0.2321%" height="15" fill="rgb(211,50,8)" fg:x="12102055892" fg:w="789490595"/><text x="3.8071%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (789,490,595 samples, 0.23%)</title><rect x="3.5571%" y="533" width="0.2321%" height="15" fill="rgb(245,182,24)" fg:x="12102055892" fg:w="789490595"/><text x="3.8071%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (789,490,595 samples, 0.23%)</title><rect x="3.5571%" y="517" width="0.2321%" height="15" fill="rgb(242,14,37)" fg:x="12102055892" fg:w="789490595"/><text x="3.8071%" y="527.50"></text></g><g><title>&lt;liblevenshtein::transducer::query::QueryIterator&lt;N&gt; as core::iter::traits::iterator::Iterator&gt;::next (789,490,595 samples, 0.23%)</title><rect x="3.5571%" y="501" width="0.2321%" height="15" fill="rgb(246,228,12)" fg:x="12102055892" fg:w="789490595"/><text x="3.8071%" y="511.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::advance (758,222,454 samples, 0.22%)</title><rect x="3.5663%" y="485" width="0.2229%" height="15" fill="rgb(213,55,15)" fg:x="12133324033" fg:w="758222454"/><text x="3.8163%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt;&gt;&gt; (74,076,580 samples, 0.02%)</title><rect x="3.7892%" y="565" width="0.0218%" height="15" fill="rgb(209,9,3)" fg:x="12891546487" fg:w="74076580"/><text x="4.0392%" y="575.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (87,326,649 samples, 0.03%)</title><rect x="3.8197%" y="533" width="0.0257%" height="15" fill="rgb(230,59,30)" fg:x="12995332009" fg:w="87326649"/><text x="4.0697%" y="543.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (87,326,649 samples, 0.03%)</title><rect x="3.8197%" y="517" width="0.0257%" height="15" fill="rgb(209,121,21)" fg:x="12995332009" fg:w="87326649"/><text x="4.0697%" y="527.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (51,450,595 samples, 0.02%)</title><rect x="3.8302%" y="501" width="0.0151%" height="15" fill="rgb(220,109,13)" fg:x="13031208063" fg:w="51450595"/><text x="4.0802%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (51,450,595 samples, 0.02%)</title><rect x="3.8302%" y="485" width="0.0151%" height="15" fill="rgb(232,18,1)" fg:x="13031208063" fg:w="51450595"/><text x="4.0802%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::offset_from_unsigned (51,450,595 samples, 0.02%)</title><rect x="3.8302%" y="469" width="0.0151%" height="15" fill="rgb(215,41,42)" fg:x="13031208063" fg:w="51450595"/><text x="4.0802%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset_from_unsigned (51,450,595 samples, 0.02%)</title><rect x="3.8302%" y="453" width="0.0151%" height="15" fill="rgb(224,123,36)" fg:x="13031208063" fg:w="51450595"/><text x="4.0802%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from_unsigned (51,450,595 samples, 0.02%)</title><rect x="3.8302%" y="437" width="0.0151%" height="15" fill="rgb(240,125,3)" fg:x="13031208063" fg:w="51450595"/><text x="4.0802%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(u8,liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode),alloc::alloc::Global&gt;&gt; (71,885,312 samples, 0.02%)</title><rect x="3.8453%" y="533" width="0.0211%" height="15" fill="rgb(205,98,50)" fg:x="13082658658" fg:w="71885312"/><text x="4.0953%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71,885,312 samples, 0.02%)</title><rect x="3.8453%" y="517" width="0.0211%" height="15" fill="rgb(205,185,37)" fg:x="13082658658" fg:w="71885312"/><text x="4.0953%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(u8,liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode)&gt;&gt; (191,789,259 samples, 0.06%)</title><rect x="3.8109%" y="565" width="0.0564%" height="15" fill="rgb(238,207,15)" fg:x="12965623067" fg:w="191789259"/><text x="4.0609%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162,080,317 samples, 0.05%)</title><rect x="3.8197%" y="549" width="0.0476%" height="15" fill="rgb(213,199,42)" fg:x="12995332009" fg:w="162080317"/><text x="4.0697%" y="559.50"></text></g><g><title>criterion::kde::sweep_and_estimate (51,958,661 samples, 0.02%)</title><rect x="3.8753%" y="565" width="0.0153%" height="15" fill="rgb(235,201,11)" fg:x="13184472609" fg:w="51958661"/><text x="4.1253%" y="575.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (60,919,023 samples, 0.02%)</title><rect x="3.8905%" y="565" width="0.0179%" height="15" fill="rgb(207,46,11)" fg:x="13236431270" fg:w="60919023"/><text x="4.1405%" y="575.50"></text></g><g><title>&lt;&amp;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (69,406,182 samples, 0.02%)</title><rect x="3.9717%" y="549" width="0.0204%" height="15" fill="rgb(241,35,35)" fg:x="13512471552" fg:w="69406182"/><text x="4.2217%" y="559.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (57,622,658 samples, 0.02%)</title><rect x="3.9751%" y="533" width="0.0169%" height="15" fill="rgb(243,32,47)" fg:x="13524255076" fg:w="57622658"/><text x="4.2251%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (57,622,658 samples, 0.02%)</title><rect x="3.9751%" y="517" width="0.0169%" height="15" fill="rgb(247,202,23)" fg:x="13524255076" fg:w="57622658"/><text x="4.2251%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (51,145,280 samples, 0.02%)</title><rect x="3.9770%" y="501" width="0.0150%" height="15" fill="rgb(219,102,11)" fg:x="13530732454" fg:w="51145280"/><text x="4.2270%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (57,092,169 samples, 0.02%)</title><rect x="3.9921%" y="549" width="0.0168%" height="15" fill="rgb(243,110,44)" fg:x="13581877734" fg:w="57092169"/><text x="4.2421%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (65,888,298 samples, 0.02%)</title><rect x="4.0106%" y="549" width="0.0194%" height="15" fill="rgb(222,74,54)" fg:x="13644849980" fg:w="65888298"/><text x="4.2606%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (65,888,298 samples, 0.02%)</title><rect x="4.0106%" y="533" width="0.0194%" height="15" fill="rgb(216,99,12)" fg:x="13644849980" fg:w="65888298"/><text x="4.2606%" y="543.50"></text></g><g><title>core::ptr::write (78,171,100 samples, 0.02%)</title><rect x="4.0458%" y="533" width="0.0230%" height="15" fill="rgb(226,22,26)" fg:x="13764562167" fg:w="78171100"/><text x="4.2958%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::insert (182,141,132 samples, 0.05%)</title><rect x="4.0354%" y="549" width="0.0535%" height="15" fill="rgb(217,163,10)" fg:x="13729321270" fg:w="182141132"/><text x="4.2854%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (68,729,135 samples, 0.02%)</title><rect x="4.0687%" y="533" width="0.0202%" height="15" fill="rgb(213,25,53)" fg:x="13842733267" fg:w="68729135"/><text x="4.3187%" y="543.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (36,508,446 samples, 0.01%)</title><rect x="4.0915%" y="533" width="0.0107%" height="15" fill="rgb(252,105,26)" fg:x="13920312155" fg:w="36508446"/><text x="4.3415%" y="543.50"></text></g><g><title>liblevenshtein::transducer::state::State::insert (782,258,462 samples, 0.23%)</title><rect x="3.9109%" y="565" width="0.2299%" height="15" fill="rgb(220,39,43)" fg:x="13305903050" fg:w="782258462"/><text x="4.1609%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::retain (176,699,110 samples, 0.05%)</title><rect x="4.0889%" y="549" width="0.0519%" height="15" fill="rgb(229,68,48)" fg:x="13911462402" fg:w="176699110"/><text x="4.3389%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::truncate (107,121,682 samples, 0.03%)</title><rect x="4.1094%" y="533" width="0.0315%" height="15" fill="rgb(252,8,32)" fg:x="13981039830" fg:w="107121682"/><text x="4.3594%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (89,560,359 samples, 0.03%)</title><rect x="4.1145%" y="517" width="0.0263%" height="15" fill="rgb(223,20,43)" fg:x="13998601153" fg:w="89560359"/><text x="4.3645%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (36,898,032 samples, 0.01%)</title><rect x="4.1300%" y="501" width="0.0108%" height="15" fill="rgb(229,81,49)" fg:x="14051263480" fg:w="36898032"/><text x="4.3800%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67,385,365 samples, 0.02%)</title><rect x="4.2555%" y="549" width="0.0198%" height="15" fill="rgb(236,28,36)" fg:x="14478294684" fg:w="67385365"/><text x="4.5055%" y="559.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (67,385,365 samples, 0.02%)</title><rect x="4.2555%" y="533" width="0.0198%" height="15" fill="rgb(249,185,26)" fg:x="14478294684" fg:w="67385365"/><text x="4.5055%" y="543.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (50,315,344 samples, 0.01%)</title><rect x="4.2753%" y="549" width="0.0148%" height="15" fill="rgb(249,174,33)" fg:x="14545680049" fg:w="50315344"/><text x="4.5253%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::set_len (47,337,697 samples, 0.01%)</title><rect x="4.2762%" y="533" width="0.0139%" height="15" fill="rgb(233,201,37)" fg:x="14548657696" fg:w="47337697"/><text x="4.5262%" y="543.50"></text></g><g><title>liblevenshtein::transducer::pool::StatePool::acquire (62,117,418 samples, 0.02%)</title><rect x="4.2929%" y="549" width="0.0183%" height="15" fill="rgb(221,78,26)" fg:x="14605294895" fg:w="62117418"/><text x="4.5429%" y="559.50"></text></g><g><title>liblevenshtein::transducer::pool::StatePool::release (453,644,298 samples, 0.13%)</title><rect x="4.3111%" y="549" width="0.1333%" height="15" fill="rgb(250,127,30)" fg:x="14667412313" fg:w="453644298"/><text x="4.5611%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (406,192,190 samples, 0.12%)</title><rect x="4.3251%" y="533" width="0.1194%" height="15" fill="rgb(230,49,44)" fg:x="14714864421" fg:w="406192190"/><text x="4.5751%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (406,192,190 samples, 0.12%)</title><rect x="4.3251%" y="517" width="0.1194%" height="15" fill="rgb(229,67,23)" fg:x="14714864421" fg:w="406192190"/><text x="4.5751%" y="527.50"></text></g><g><title>core::ptr::write (350,643,929 samples, 0.10%)</title><rect x="4.3414%" y="501" width="0.1031%" height="15" fill="rgb(249,83,47)" fg:x="14770412682" fg:w="350643929"/><text x="4.5914%" y="511.50"></text></g><g><title>liblevenshtein::transducer::transition::characteristic_vector (73,896,434 samples, 0.02%)</title><rect x="4.4506%" y="549" width="0.0217%" height="15" fill="rgb(215,43,3)" fg:x="15142011550" fg:w="73896434"/><text x="4.7006%" y="559.50"></text></g><g><title>liblevenshtein::transducer::transition::epsilon_closure_into (49,497,599 samples, 0.01%)</title><rect x="4.4723%" y="549" width="0.0145%" height="15" fill="rgb(238,154,13)" fg:x="15215907984" fg:w="49497599"/><text x="4.7223%" y="559.50"></text></g><g><title>liblevenshtein::transducer::transition::epsilon_closure_mut (49,497,599 samples, 0.01%)</title><rect x="4.4723%" y="533" width="0.0145%" height="15" fill="rgb(219,56,2)" fg:x="15215907984" fg:w="49497599"/><text x="4.7223%" y="543.50"></text></g><g><title>liblevenshtein::transducer::transition::transition_state_pooled (1,288,952,044 samples, 0.38%)</title><rect x="4.1409%" y="565" width="0.3789%" height="15" fill="rgb(233,0,4)" fg:x="14088161512" fg:w="1288952044"/><text x="4.3909%" y="575.50"></text></g><g><title>liblevenshtein::transducer::transition::transition_position (111,707,973 samples, 0.03%)</title><rect x="4.4869%" y="549" width="0.0328%" height="15" fill="rgb(235,30,7)" fg:x="15265405583" fg:w="111707973"/><text x="4.7369%" y="559.50"></text></g><g><title>core::ptr::copy (42,566,354 samples, 0.01%)</title><rect x="4.5709%" y="501" width="0.0125%" height="15" fill="rgb(250,79,13)" fg:x="15551167185" fg:w="42566354"/><text x="4.8209%" y="511.50"></text></g><g><title>core::ptr::swap (63,614,350 samples, 0.02%)</title><rect x="4.5709%" y="517" width="0.0187%" height="15" fill="rgb(211,146,34)" fg:x="15551167185" fg:w="63614350"/><text x="4.8209%" y="527.50"></text></g><g><title>rayon::slice::sort::recurse (248,298,997 samples, 0.07%)</title><rect x="4.5237%" y="565" width="0.0730%" height="15" fill="rgb(228,22,38)" fg:x="15390612119" fg:w="248298997"/><text x="4.7737%" y="575.50"></text></g><g><title>rayon::slice::sort::partition (191,404,045 samples, 0.06%)</title><rect x="4.5404%" y="549" width="0.0563%" height="15" fill="rgb(235,168,5)" fg:x="15447507071" fg:w="191404045"/><text x="4.7904%" y="559.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks (171,336,391 samples, 0.05%)</title><rect x="4.5463%" y="533" width="0.0504%" height="15" fill="rgb(221,155,16)" fg:x="15467574725" fg:w="171336391"/><text x="4.7963%" y="543.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (98,493,820 samples, 0.03%)</title><rect x="4.5983%" y="293" width="0.0289%" height="15" fill="rgb(215,215,53)" fg:x="15644395634" fg:w="98493820"/><text x="4.8483%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (98,493,820 samples, 0.03%)</title><rect x="4.5983%" y="277" width="0.0289%" height="15" fill="rgb(223,4,10)" fg:x="15644395634" fg:w="98493820"/><text x="4.8483%" y="287.50"></text></g><g><title>exp (98,493,820 samples, 0.03%)</title><rect x="4.5983%" y="261" width="0.0289%" height="15" fill="rgb(234,103,6)" fg:x="15644395634" fg:w="98493820"/><text x="4.8483%" y="271.50"></text></g><g><title>[libm.so.6] (79,435,853 samples, 0.02%)</title><rect x="4.6039%" y="245" width="0.0233%" height="15" fill="rgb(227,97,0)" fg:x="15663453601" fg:w="79435853"/><text x="4.8539%" y="255.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (106,403,948 samples, 0.03%)</title><rect x="4.5975%" y="309" width="0.0313%" height="15" fill="rgb(234,150,53)" fg:x="15641619727" fg:w="106403948"/><text x="4.8475%" y="319.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (111,316,279 samples, 0.03%)</title><rect x="4.5967%" y="549" width="0.0327%" height="15" fill="rgb(228,201,54)" fg:x="15638911116" fg:w="111316279"/><text x="4.8467%" y="559.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (111,316,279 samples, 0.03%)</title><rect x="4.5967%" y="533" width="0.0327%" height="15" fill="rgb(222,22,37)" fg:x="15638911116" fg:w="111316279"/><text x="4.8467%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (111,316,279 samples, 0.03%)</title><rect x="4.5967%" y="517" width="0.0327%" height="15" fill="rgb(237,53,32)" fg:x="15638911116" fg:w="111316279"/><text x="4.8467%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="501" width="0.0319%" height="15" fill="rgb(233,25,53)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="485" width="0.0319%" height="15" fill="rgb(210,40,34)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="495.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="469" width="0.0319%" height="15" fill="rgb(241,220,44)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="479.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="453" width="0.0319%" height="15" fill="rgb(235,28,35)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="437" width="0.0319%" height="15" fill="rgb(210,56,17)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="421" width="0.0319%" height="15" fill="rgb(224,130,29)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="405" width="0.0319%" height="15" fill="rgb(235,212,8)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="389" width="0.0319%" height="15" fill="rgb(223,33,50)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="399.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="373" width="0.0319%" height="15" fill="rgb(219,149,13)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="383.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="357" width="0.0319%" height="15" fill="rgb(250,156,29)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="341" width="0.0319%" height="15" fill="rgb(216,193,19)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="351.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (108,607,668 samples, 0.03%)</title><rect x="4.5975%" y="325" width="0.0319%" height="15" fill="rgb(216,135,14)" fg:x="15641619727" fg:w="108607668"/><text x="4.8475%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (148,887,983 samples, 0.04%)</title><rect x="4.6341%" y="229" width="0.0438%" height="15" fill="rgb(241,47,5)" fg:x="15766168367" fg:w="148887983"/><text x="4.8841%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (148,887,983 samples, 0.04%)</title><rect x="4.6341%" y="213" width="0.0438%" height="15" fill="rgb(233,42,35)" fg:x="15766168367" fg:w="148887983"/><text x="4.8841%" y="223.50"></text></g><g><title>exp (142,617,597 samples, 0.04%)</title><rect x="4.6359%" y="197" width="0.0419%" height="15" fill="rgb(231,13,6)" fg:x="15772438753" fg:w="142617597"/><text x="4.8859%" y="207.50"></text></g><g><title>[libm.so.6] (95,000,763 samples, 0.03%)</title><rect x="4.6499%" y="181" width="0.0279%" height="15" fill="rgb(207,181,40)" fg:x="15820055587" fg:w="95000763"/><text x="4.8999%" y="191.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (159,937,375 samples, 0.05%)</title><rect x="4.6341%" y="245" width="0.0470%" height="15" fill="rgb(254,173,49)" fg:x="15766168367" fg:w="159937375"/><text x="4.8841%" y="255.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (299,279,802 samples, 0.09%)</title><rect x="4.5967%" y="565" width="0.0880%" height="15" fill="rgb(221,1,38)" fg:x="15638911116" fg:w="299279802"/><text x="4.8467%" y="575.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (187,963,523 samples, 0.06%)</title><rect x="4.6294%" y="549" width="0.0552%" height="15" fill="rgb(206,124,46)" fg:x="15750227395" fg:w="187963523"/><text x="4.8794%" y="559.50"></text></g><g><title>std::panic::catch_unwind (187,963,523 samples, 0.06%)</title><rect x="4.6294%" y="533" width="0.0552%" height="15" fill="rgb(249,21,11)" fg:x="15750227395" fg:w="187963523"/><text x="4.8794%" y="543.50"></text></g><g><title>std::panicking::catch_unwind (187,963,523 samples, 0.06%)</title><rect x="4.6294%" y="517" width="0.0552%" height="15" fill="rgb(222,201,40)" fg:x="15750227395" fg:w="187963523"/><text x="4.8794%" y="527.50"></text></g><g><title>std::panicking::catch_unwind::do_call (187,963,523 samples, 0.06%)</title><rect x="4.6294%" y="501" width="0.0552%" height="15" fill="rgb(235,61,29)" fg:x="15750227395" fg:w="187963523"/><text x="4.8794%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (187,963,523 samples, 0.06%)</title><rect x="4.6294%" y="485" width="0.0552%" height="15" fill="rgb(219,207,3)" fg:x="15750227395" fg:w="187963523"/><text x="4.8794%" y="495.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (187,963,523 samples, 0.06%)</title><rect x="4.6294%" y="469" width="0.0552%" height="15" fill="rgb(222,56,46)" fg:x="15750227395" fg:w="187963523"/><text x="4.8794%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (187,963,523 samples, 0.06%)</title><rect x="4.6294%" y="453" width="0.0552%" height="15" fill="rgb(239,76,54)" fg:x="15750227395" fg:w="187963523"/><text x="4.8794%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="437" width="0.0506%" height="15" fill="rgb(231,124,27)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="421" width="0.0506%" height="15" fill="rgb(249,195,6)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="431.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="405" width="0.0506%" height="15" fill="rgb(237,174,47)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="415.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="389" width="0.0506%" height="15" fill="rgb(206,201,31)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="373" width="0.0506%" height="15" fill="rgb(231,57,52)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="357" width="0.0506%" height="15" fill="rgb(248,177,22)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="341" width="0.0506%" height="15" fill="rgb(215,211,37)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="325" width="0.0506%" height="15" fill="rgb(241,128,51)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="335.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="309" width="0.0506%" height="15" fill="rgb(227,165,31)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="293" width="0.0506%" height="15" fill="rgb(228,167,24)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="277" width="0.0506%" height="15" fill="rgb(228,143,12)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="287.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (172,022,551 samples, 0.05%)</title><rect x="4.6341%" y="261" width="0.0506%" height="15" fill="rgb(249,149,8)" fg:x="15766168367" fg:w="172022551"/><text x="4.8841%" y="271.50"></text></g><g><title>[libc.so.6] (5,463,587,049 samples, 1.61%)</title><rect x="3.0878%" y="581" width="1.6059%" height="15" fill="rgb(243,35,44)" fg:x="10505527126" fg:w="5463587049"/><text x="3.3378%" y="591.50"></text></g><g><title>[libm.so.6] (904,942,018 samples, 0.27%)</title><rect x="4.6937%" y="581" width="0.2660%" height="15" fill="rgb(246,89,9)" fg:x="15969114175" fg:w="904942018"/><text x="4.9437%" y="591.50"></text></g><g><title>[libc.so.6] (943,990,458 samples, 0.28%)</title><rect x="5.0060%" y="309" width="0.2775%" height="15" fill="rgb(233,213,13)" fg:x="17031493167" fg:w="943990458"/><text x="5.2560%" y="319.50"></text></g><g><title>[libc.so.6] (786,251,898 samples, 0.23%)</title><rect x="5.0524%" y="293" width="0.2311%" height="15" fill="rgb(233,141,41)" fg:x="17189231727" fg:w="786251898"/><text x="5.3024%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,256,617,145 samples, 0.37%)</title><rect x="4.9743%" y="453" width="0.3694%" height="15" fill="rgb(239,167,4)" fg:x="16923732227" fg:w="1256617145"/><text x="5.2243%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,256,617,145 samples, 0.37%)</title><rect x="4.9743%" y="437" width="0.3694%" height="15" fill="rgb(209,217,16)" fg:x="16923732227" fg:w="1256617145"/><text x="5.2243%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,256,617,145 samples, 0.37%)</title><rect x="4.9743%" y="421" width="0.3694%" height="15" fill="rgb(219,88,35)" fg:x="16923732227" fg:w="1256617145"/><text x="5.2243%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,256,617,145 samples, 0.37%)</title><rect x="4.9743%" y="405" width="0.3694%" height="15" fill="rgb(220,193,23)" fg:x="16923732227" fg:w="1256617145"/><text x="5.2243%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,189,201,564 samples, 0.35%)</title><rect x="4.9941%" y="389" width="0.3495%" height="15" fill="rgb(230,90,52)" fg:x="16991147808" fg:w="1189201564"/><text x="5.2441%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,189,201,564 samples, 0.35%)</title><rect x="4.9941%" y="373" width="0.3495%" height="15" fill="rgb(252,106,19)" fg:x="16991147808" fg:w="1189201564"/><text x="5.2441%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1,189,201,564 samples, 0.35%)</title><rect x="4.9941%" y="357" width="0.3495%" height="15" fill="rgb(206,74,20)" fg:x="16991147808" fg:w="1189201564"/><text x="5.2441%" y="367.50"></text></g><g><title>__rustc::__rdl_alloc (1,189,201,564 samples, 0.35%)</title><rect x="4.9941%" y="341" width="0.3495%" height="15" fill="rgb(230,138,44)" fg:x="16991147808" fg:w="1189201564"/><text x="5.2441%" y="351.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,189,201,564 samples, 0.35%)</title><rect x="4.9941%" y="325" width="0.3495%" height="15" fill="rgb(235,182,43)" fg:x="16991147808" fg:w="1189201564"/><text x="5.2441%" y="335.50"></text></g><g><title>malloc (204,865,747 samples, 0.06%)</title><rect x="5.2835%" y="309" width="0.0602%" height="15" fill="rgb(242,16,51)" fg:x="17975483625" fg:w="204865747"/><text x="5.5335%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,370,757,607 samples, 0.40%)</title><rect x="4.9597%" y="517" width="0.4029%" height="15" fill="rgb(248,9,4)" fg:x="16874056193" fg:w="1370757607"/><text x="5.2097%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,330,396,319 samples, 0.39%)</title><rect x="4.9716%" y="501" width="0.3910%" height="15" fill="rgb(210,31,22)" fg:x="16914417481" fg:w="1330396319"/><text x="5.2216%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,330,396,319 samples, 0.39%)</title><rect x="4.9716%" y="485" width="0.3910%" height="15" fill="rgb(239,54,39)" fg:x="16914417481" fg:w="1330396319"/><text x="5.2216%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,330,396,319 samples, 0.39%)</title><rect x="4.9716%" y="469" width="0.3910%" height="15" fill="rgb(230,99,41)" fg:x="16914417481" fg:w="1330396319"/><text x="5.2216%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (64,464,428 samples, 0.02%)</title><rect x="5.3437%" y="453" width="0.0189%" height="15" fill="rgb(253,106,12)" fg:x="18180349372" fg:w="64464428"/><text x="5.5937%" y="463.50"></text></g><g><title>core::ptr::copy_nonoverlapping (64,464,428 samples, 0.02%)</title><rect x="5.3437%" y="437" width="0.0189%" height="15" fill="rgb(213,46,41)" fg:x="18180349372" fg:w="64464428"/><text x="5.5937%" y="447.50"></text></g><g><title>[libc.so.6] (55,261,959 samples, 0.02%)</title><rect x="5.3464%" y="421" width="0.0162%" height="15" fill="rgb(215,133,35)" fg:x="18189551841" fg:w="55261959"/><text x="5.5964%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (39,933,009 samples, 0.01%)</title><rect x="5.3626%" y="517" width="0.0117%" height="15" fill="rgb(213,28,5)" fg:x="18244813800" fg:w="39933009"/><text x="5.6126%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34,060,478 samples, 0.01%)</title><rect x="5.3643%" y="501" width="0.0100%" height="15" fill="rgb(215,77,49)" fg:x="18250686331" fg:w="34060478"/><text x="5.6143%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,468,589,211 samples, 0.43%)</title><rect x="4.9597%" y="565" width="0.4317%" height="15" fill="rgb(248,100,22)" fg:x="16874056193" fg:w="1468589211"/><text x="5.2097%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,468,589,211 samples, 0.43%)</title><rect x="4.9597%" y="549" width="0.4317%" height="15" fill="rgb(208,67,9)" fg:x="16874056193" fg:w="1468589211"/><text x="5.2097%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,468,589,211 samples, 0.43%)</title><rect x="4.9597%" y="533" width="0.4317%" height="15" fill="rgb(219,133,21)" fg:x="16874056193" fg:w="1468589211"/><text x="5.2097%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (54,974,361 samples, 0.02%)</title><rect x="5.3752%" y="517" width="0.0162%" height="15" fill="rgb(246,46,29)" fg:x="18287671043" fg:w="54974361"/><text x="5.6252%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (237,341,997 samples, 0.07%)</title><rect x="5.3914%" y="565" width="0.0698%" height="15" fill="rgb(246,185,52)" fg:x="18342645404" fg:w="237341997"/><text x="5.6414%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (87,134,251 samples, 0.03%)</title><rect x="5.4355%" y="549" width="0.0256%" height="15" fill="rgb(252,136,11)" fg:x="18492853150" fg:w="87134251"/><text x="5.6855%" y="559.50"></text></g><g><title>core::ptr::read (87,134,251 samples, 0.03%)</title><rect x="5.4355%" y="533" width="0.0256%" height="15" fill="rgb(219,138,53)" fg:x="18492853150" fg:w="87134251"/><text x="5.6855%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38,461,702 samples, 0.01%)</title><rect x="5.4730%" y="181" width="0.0113%" height="15" fill="rgb(211,51,23)" fg:x="18620428029" fg:w="38461702"/><text x="5.7230%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (38,461,702 samples, 0.01%)</title><rect x="5.4730%" y="165" width="0.0113%" height="15" fill="rgb(247,221,28)" fg:x="18620428029" fg:w="38461702"/><text x="5.7230%" y="175.50"></text></g><g><title>__rustc::__rdl_dealloc (38,461,702 samples, 0.01%)</title><rect x="5.4730%" y="149" width="0.0113%" height="15" fill="rgb(251,222,45)" fg:x="18620428029" fg:w="38461702"/><text x="5.7230%" y="159.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (38,461,702 samples, 0.01%)</title><rect x="5.4730%" y="133" width="0.0113%" height="15" fill="rgb(217,162,53)" fg:x="18620428029" fg:w="38461702"/><text x="5.7230%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47,220,663 samples, 0.01%)</title><rect x="5.4730%" y="293" width="0.0139%" height="15" fill="rgb(229,93,14)" fg:x="18620428029" fg:w="47220663"/><text x="5.7230%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (47,220,663 samples, 0.01%)</title><rect x="5.4730%" y="277" width="0.0139%" height="15" fill="rgb(209,67,49)" fg:x="18620428029" fg:w="47220663"/><text x="5.7230%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (47,220,663 samples, 0.01%)</title><rect x="5.4730%" y="261" width="0.0139%" height="15" fill="rgb(213,87,29)" fg:x="18620428029" fg:w="47220663"/><text x="5.7230%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (47,220,663 samples, 0.01%)</title><rect x="5.4730%" y="245" width="0.0139%" height="15" fill="rgb(205,151,52)" fg:x="18620428029" fg:w="47220663"/><text x="5.7230%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (47,220,663 samples, 0.01%)</title><rect x="5.4730%" y="229" width="0.0139%" height="15" fill="rgb(253,215,39)" fg:x="18620428029" fg:w="47220663"/><text x="5.7230%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47,220,663 samples, 0.01%)</title><rect x="5.4730%" y="213" width="0.0139%" height="15" fill="rgb(221,220,41)" fg:x="18620428029" fg:w="47220663"/><text x="5.7230%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (47,220,663 samples, 0.01%)</title><rect x="5.4730%" y="197" width="0.0139%" height="15" fill="rgb(218,133,21)" fg:x="18620428029" fg:w="47220663"/><text x="5.7230%" y="207.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::{{closure}} (58,960,931 samples, 0.02%)</title><rect x="5.4730%" y="389" width="0.0173%" height="15" fill="rgb(221,193,43)" fg:x="18620428029" fg:w="58960931"/><text x="5.7230%" y="399.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}} (58,960,931 samples, 0.02%)</title><rect x="5.4730%" y="373" width="0.0173%" height="15" fill="rgb(240,128,52)" fg:x="18620428029" fg:w="58960931"/><text x="5.7230%" y="383.50"></text></g><g><title>backend_comparison::bench_distance_2_matching::{{closure}} (58,960,931 samples, 0.02%)</title><rect x="5.4730%" y="357" width="0.0173%" height="15" fill="rgb(253,114,12)" fg:x="18620428029" fg:w="58960931"/><text x="5.7230%" y="367.50"></text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (58,960,931 samples, 0.02%)</title><rect x="5.4730%" y="341" width="0.0173%" height="15" fill="rgb(215,223,47)" fg:x="18620428029" fg:w="58960931"/><text x="5.7230%" y="351.50"></text></g><g><title>backend_comparison::bench_distance_2_matching::{{closure}}::{{closure}} (58,960,931 samples, 0.02%)</title><rect x="5.4730%" y="325" width="0.0173%" height="15" fill="rgb(248,225,23)" fg:x="18620428029" fg:w="58960931"/><text x="5.7230%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (58,960,931 samples, 0.02%)</title><rect x="5.4730%" y="309" width="0.0173%" height="15" fill="rgb(250,108,0)" fg:x="18620428029" fg:w="58960931"/><text x="5.7230%" y="319.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="565" width="0.0182%" height="15" fill="rgb(228,208,7)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="549" width="0.0182%" height="15" fill="rgb(244,45,10)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="533" width="0.0182%" height="15" fill="rgb(207,125,25)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="517" width="0.0182%" height="15" fill="rgb(210,195,18)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="501" width="0.0182%" height="15" fill="rgb(249,80,12)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="485" width="0.0182%" height="15" fill="rgb(221,65,9)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="469" width="0.0182%" height="15" fill="rgb(235,49,36)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="453" width="0.0182%" height="15" fill="rgb(225,32,20)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="437" width="0.0182%" height="15" fill="rgb(215,141,46)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="421" width="0.0182%" height="15" fill="rgb(250,160,47)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (61,959,500 samples, 0.02%)</title><rect x="5.4730%" y="405" width="0.0182%" height="15" fill="rgb(216,222,40)" fg:x="18620428029" fg:w="61959500"/><text x="5.7230%" y="415.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (167,575,834 samples, 0.05%)</title><rect x="5.5889%" y="533" width="0.0493%" height="15" fill="rgb(234,217,39)" fg:x="19014831278" fg:w="167575834"/><text x="5.8389%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (167,575,834 samples, 0.05%)</title><rect x="5.5889%" y="517" width="0.0493%" height="15" fill="rgb(207,178,40)" fg:x="19014831278" fg:w="167575834"/><text x="5.8389%" y="527.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (167,575,834 samples, 0.05%)</title><rect x="5.5889%" y="501" width="0.0493%" height="15" fill="rgb(221,136,13)" fg:x="19014831278" fg:w="167575834"/><text x="5.8389%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (167,575,834 samples, 0.05%)</title><rect x="5.5889%" y="485" width="0.0493%" height="15" fill="rgb(249,199,10)" fg:x="19014831278" fg:w="167575834"/><text x="5.8389%" y="495.50"></text></g><g><title>&lt;liblevenshtein::transducer::query::QueryIterator&lt;N&gt; as core::iter::traits::iterator::Iterator&gt;::next (481,741,249 samples, 0.14%)</title><rect x="5.5000%" y="565" width="0.1416%" height="15" fill="rgb(249,222,13)" fg:x="18712202026" fg:w="481741249"/><text x="5.7500%" y="575.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::advance (182,456,966 samples, 0.05%)</title><rect x="5.5880%" y="549" width="0.0536%" height="15" fill="rgb(244,185,38)" fg:x="19011486309" fg:w="182456966"/><text x="5.8380%" y="559.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (198,815,688 samples, 0.06%)</title><rect x="5.6568%" y="197" width="0.0584%" height="15" fill="rgb(236,202,9)" fg:x="19245679960" fg:w="198815688"/><text x="5.9068%" y="207.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (198,815,688 samples, 0.06%)</title><rect x="5.6568%" y="181" width="0.0584%" height="15" fill="rgb(250,229,37)" fg:x="19245679960" fg:w="198815688"/><text x="5.9068%" y="191.50"></text></g><g><title>exp (182,566,465 samples, 0.05%)</title><rect x="5.6616%" y="165" width="0.0537%" height="15" fill="rgb(206,174,23)" fg:x="19261929183" fg:w="182566465"/><text x="5.9116%" y="175.50"></text></g><g><title>[libm.so.6] (133,238,293 samples, 0.04%)</title><rect x="5.6761%" y="149" width="0.0392%" height="15" fill="rgb(211,33,43)" fg:x="19311257355" fg:w="133238293"/><text x="5.9261%" y="159.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (229,359,376 samples, 0.07%)</title><rect x="5.6568%" y="213" width="0.0674%" height="15" fill="rgb(245,58,50)" fg:x="19245679960" fg:w="229359376"/><text x="5.9068%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="405" width="0.0786%" height="15" fill="rgb(244,68,36)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="415.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="389" width="0.0786%" height="15" fill="rgb(232,229,15)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="399.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="373" width="0.0786%" height="15" fill="rgb(254,30,23)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="383.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="357" width="0.0786%" height="15" fill="rgb(235,160,14)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="341" width="0.0786%" height="15" fill="rgb(212,155,44)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="325" width="0.0786%" height="15" fill="rgb(226,2,50)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="309" width="0.0786%" height="15" fill="rgb(234,177,6)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="293" width="0.0786%" height="15" fill="rgb(217,24,9)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="303.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="277" width="0.0786%" height="15" fill="rgb(220,13,46)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="287.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="261" width="0.0786%" height="15" fill="rgb(239,221,27)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="245" width="0.0786%" height="15" fill="rgb(222,198,25)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="255.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (267,569,680 samples, 0.08%)</title><rect x="5.6568%" y="229" width="0.0786%" height="15" fill="rgb(211,99,13)" fg:x="19245679960" fg:w="267569680"/><text x="5.9068%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (38,210,304 samples, 0.01%)</title><rect x="5.7242%" y="213" width="0.0112%" height="15" fill="rgb(232,111,31)" fg:x="19475039336" fg:w="38210304"/><text x="5.9742%" y="223.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (274,681,926 samples, 0.08%)</title><rect x="5.6555%" y="549" width="0.0807%" height="15" fill="rgb(245,82,37)" fg:x="19241363486" fg:w="274681926"/><text x="5.9055%" y="559.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (274,681,926 samples, 0.08%)</title><rect x="5.6555%" y="533" width="0.0807%" height="15" fill="rgb(227,149,46)" fg:x="19241363486" fg:w="274681926"/><text x="5.9055%" y="543.50"></text></g><g><title>std::panic::catch_unwind (274,681,926 samples, 0.08%)</title><rect x="5.6555%" y="517" width="0.0807%" height="15" fill="rgb(218,36,50)" fg:x="19241363486" fg:w="274681926"/><text x="5.9055%" y="527.50"></text></g><g><title>std::panicking::catch_unwind (274,681,926 samples, 0.08%)</title><rect x="5.6555%" y="501" width="0.0807%" height="15" fill="rgb(226,80,48)" fg:x="19241363486" fg:w="274681926"/><text x="5.9055%" y="511.50"></text></g><g><title>std::panicking::catch_unwind::do_call (274,681,926 samples, 0.08%)</title><rect x="5.6555%" y="485" width="0.0807%" height="15" fill="rgb(238,224,15)" fg:x="19241363486" fg:w="274681926"/><text x="5.9055%" y="495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (274,681,926 samples, 0.08%)</title><rect x="5.6555%" y="469" width="0.0807%" height="15" fill="rgb(241,136,10)" fg:x="19241363486" fg:w="274681926"/><text x="5.9055%" y="479.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (274,681,926 samples, 0.08%)</title><rect x="5.6555%" y="453" width="0.0807%" height="15" fill="rgb(208,32,45)" fg:x="19241363486" fg:w="274681926"/><text x="5.9055%" y="463.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (274,681,926 samples, 0.08%)</title><rect x="5.6555%" y="437" width="0.0807%" height="15" fill="rgb(207,135,9)" fg:x="19241363486" fg:w="274681926"/><text x="5.9055%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (274,681,926 samples, 0.08%)</title><rect x="5.6555%" y="421" width="0.0807%" height="15" fill="rgb(206,86,44)" fg:x="19241363486" fg:w="274681926"/><text x="5.9055%" y="431.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (318,775,888 samples, 0.09%)</title><rect x="5.6434%" y="565" width="0.0937%" height="15" fill="rgb(245,177,15)" fg:x="19200030951" fg:w="318775888"/><text x="5.8934%" y="575.50"></text></g><g><title>core::slice::sort::stable::drift::create_run (76,540,544 samples, 0.02%)</title><rect x="5.7458%" y="533" width="0.0225%" height="15" fill="rgb(206,64,50)" fg:x="19548630668" fg:w="76540544"/><text x="5.9958%" y="543.50"></text></g><g><title>core::slice::sort::shared::find_existing_run (76,540,544 samples, 0.02%)</title><rect x="5.7458%" y="517" width="0.0225%" height="15" fill="rgb(234,36,40)" fg:x="19548630668" fg:w="76540544"/><text x="5.9958%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (76,540,544 samples, 0.02%)</title><rect x="5.7458%" y="501" width="0.0225%" height="15" fill="rgb(213,64,8)" fg:x="19548630668" fg:w="76540544"/><text x="5.9958%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::lt (76,540,544 samples, 0.02%)</title><rect x="5.7458%" y="485" width="0.0225%" height="15" fill="rgb(210,75,36)" fg:x="19548630668" fg:w="76540544"/><text x="5.9958%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (76,540,544 samples, 0.02%)</title><rect x="5.7458%" y="469" width="0.0225%" height="15" fill="rgb(229,88,21)" fg:x="19548630668" fg:w="76540544"/><text x="5.9958%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (76,540,544 samples, 0.02%)</title><rect x="5.7458%" y="453" width="0.0225%" height="15" fill="rgb(252,204,47)" fg:x="19548630668" fg:w="76540544"/><text x="5.9958%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (76,540,544 samples, 0.02%)</title><rect x="5.7458%" y="437" width="0.0225%" height="15" fill="rgb(208,77,27)" fg:x="19548630668" fg:w="76540544"/><text x="5.9958%" y="447.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (76,540,544 samples, 0.02%)</title><rect x="5.7458%" y="421" width="0.0225%" height="15" fill="rgb(221,76,26)" fg:x="19548630668" fg:w="76540544"/><text x="5.9958%" y="431.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (76,540,544 samples, 0.02%)</title><rect x="5.7458%" y="405" width="0.0225%" height="15" fill="rgb(225,139,18)" fg:x="19548630668" fg:w="76540544"/><text x="5.9958%" y="415.50"></text></g><g><title>[libc.so.6] (76,540,544 samples, 0.02%)</title><rect x="5.7458%" y="389" width="0.0225%" height="15" fill="rgb(230,137,11)" fg:x="19548630668" fg:w="76540544"/><text x="5.9958%" y="399.50"></text></g><g><title>core::slice::sort::stable::drift::sort (107,725,306 samples, 0.03%)</title><rect x="5.7458%" y="549" width="0.0317%" height="15" fill="rgb(212,28,1)" fg:x="19548630668" fg:w="107725306"/><text x="5.9958%" y="559.50"></text></g><g><title>[backend_comparison-99338687d45c462c] (135,744,306 samples, 0.04%)</title><rect x="5.7431%" y="565" width="0.0399%" height="15" fill="rgb(248,164,17)" fg:x="19539218003" fg:w="135744306"/><text x="5.9931%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (155,417,140 samples, 0.05%)</title><rect x="5.8423%" y="469" width="0.0457%" height="15" fill="rgb(222,171,42)" fg:x="19876834739" fg:w="155417140"/><text x="6.0923%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (155,417,140 samples, 0.05%)</title><rect x="5.8423%" y="453" width="0.0457%" height="15" fill="rgb(243,84,45)" fg:x="19876834739" fg:w="155417140"/><text x="6.0923%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (155,417,140 samples, 0.05%)</title><rect x="5.8423%" y="437" width="0.0457%" height="15" fill="rgb(252,49,23)" fg:x="19876834739" fg:w="155417140"/><text x="6.0923%" y="447.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (155,417,140 samples, 0.05%)</title><rect x="5.8423%" y="421" width="0.0457%" height="15" fill="rgb(215,19,7)" fg:x="19876834739" fg:w="155417140"/><text x="6.0923%" y="431.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (155,417,140 samples, 0.05%)</title><rect x="5.8423%" y="405" width="0.0457%" height="15" fill="rgb(238,81,41)" fg:x="19876834739" fg:w="155417140"/><text x="6.0923%" y="415.50"></text></g><g><title>[libc.so.6] (87,022,907 samples, 0.03%)</title><rect x="5.8624%" y="389" width="0.0256%" height="15" fill="rgb(210,199,37)" fg:x="19945228972" fg:w="87022907"/><text x="6.1124%" y="399.50"></text></g><g><title>core::slice::sort::stable::drift::create_run (182,050,205 samples, 0.05%)</title><rect x="5.8353%" y="533" width="0.0535%" height="15" fill="rgb(244,192,49)" fg:x="19853137581" fg:w="182050205"/><text x="6.0853%" y="543.50"></text></g><g><title>core::slice::sort::shared::find_existing_run (178,905,683 samples, 0.05%)</title><rect x="5.8363%" y="517" width="0.0526%" height="15" fill="rgb(226,211,11)" fg:x="19856282103" fg:w="178905683"/><text x="6.0863%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (158,353,047 samples, 0.05%)</title><rect x="5.8423%" y="501" width="0.0465%" height="15" fill="rgb(236,162,54)" fg:x="19876834739" fg:w="158353047"/><text x="6.0923%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::lt (158,353,047 samples, 0.05%)</title><rect x="5.8423%" y="485" width="0.0465%" height="15" fill="rgb(220,229,9)" fg:x="19876834739" fg:w="158353047"/><text x="6.0923%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (57,379,058 samples, 0.02%)</title><rect x="5.8906%" y="501" width="0.0169%" height="15" fill="rgb(250,87,22)" fg:x="20040998456" fg:w="57379058"/><text x="6.1406%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::lt (57,379,058 samples, 0.02%)</title><rect x="5.8906%" y="485" width="0.0169%" height="15" fill="rgb(239,43,17)" fg:x="20040998456" fg:w="57379058"/><text x="6.1406%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (57,379,058 samples, 0.02%)</title><rect x="5.8906%" y="469" width="0.0169%" height="15" fill="rgb(231,177,25)" fg:x="20040998456" fg:w="57379058"/><text x="6.1406%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (57,379,058 samples, 0.02%)</title><rect x="5.8906%" y="453" width="0.0169%" height="15" fill="rgb(219,179,1)" fg:x="20040998456" fg:w="57379058"/><text x="6.1406%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (57,379,058 samples, 0.02%)</title><rect x="5.8906%" y="437" width="0.0169%" height="15" fill="rgb(238,219,53)" fg:x="20040998456" fg:w="57379058"/><text x="6.1406%" y="447.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (57,379,058 samples, 0.02%)</title><rect x="5.8906%" y="421" width="0.0169%" height="15" fill="rgb(232,167,36)" fg:x="20040998456" fg:w="57379058"/><text x="6.1406%" y="431.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (57,379,058 samples, 0.02%)</title><rect x="5.8906%" y="405" width="0.0169%" height="15" fill="rgb(244,19,51)" fg:x="20040998456" fg:w="57379058"/><text x="6.1406%" y="415.50"></text></g><g><title>[libc.so.6] (42,139,337 samples, 0.01%)</title><rect x="5.8950%" y="389" width="0.0124%" height="15" fill="rgb(224,6,22)" fg:x="20056238177" fg:w="42139337"/><text x="6.1450%" y="399.50"></text></g><g><title>core::slice::sort::stable::drift::sort (251,118,984 samples, 0.07%)</title><rect x="5.8345%" y="549" width="0.0738%" height="15" fill="rgb(224,145,5)" fg:x="19850262381" fg:w="251118984"/><text x="6.0845%" y="559.50"></text></g><g><title>core::slice::sort::stable::drift::stable_quicksort (63,331,098 samples, 0.02%)</title><rect x="5.8897%" y="533" width="0.0186%" height="15" fill="rgb(234,130,49)" fg:x="20038050267" fg:w="63331098"/><text x="6.1397%" y="543.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (63,331,098 samples, 0.02%)</title><rect x="5.8897%" y="517" width="0.0186%" height="15" fill="rgb(254,6,2)" fg:x="20038050267" fg:w="63331098"/><text x="6.1397%" y="527.50"></text></g><g><title>[libc.so.6] (466,955,346 samples, 0.14%)</title><rect x="5.7830%" y="565" width="0.1373%" height="15" fill="rgb(208,96,46)" fg:x="19674962309" fg:w="466955346"/><text x="6.0330%" y="575.50"></text></g><g><title>[libm.so.6] (1,087,263,706 samples, 0.32%)</title><rect x="5.9202%" y="565" width="0.3196%" height="15" fill="rgb(239,3,39)" fg:x="20141917655" fg:w="1087263706"/><text x="6.1702%" y="575.50"></text></g><g><title>exp (1,087,263,706 samples, 0.32%)</title><rect x="5.9202%" y="549" width="0.3196%" height="15" fill="rgb(233,210,1)" fg:x="20141917655" fg:w="1087263706"/><text x="6.1702%" y="559.50"></text></g><g><title>[libc.so.6] (887,108,941 samples, 0.26%)</title><rect x="6.2799%" y="293" width="0.2607%" height="15" fill="rgb(244,137,37)" fg:x="21365524318" fg:w="887108941"/><text x="6.5299%" y="303.50"></text></g><g><title>[libc.so.6] (749,113,653 samples, 0.22%)</title><rect x="6.3204%" y="277" width="0.2202%" height="15" fill="rgb(240,136,2)" fg:x="21503519606" fg:w="749113653"/><text x="6.5704%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,149,132,210 samples, 0.34%)</title><rect x="6.2567%" y="437" width="0.3378%" height="15" fill="rgb(239,18,37)" fg:x="21286731078" fg:w="1149132210"/><text x="6.5067%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,149,132,210 samples, 0.34%)</title><rect x="6.2567%" y="421" width="0.3378%" height="15" fill="rgb(218,185,22)" fg:x="21286731078" fg:w="1149132210"/><text x="6.5067%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,149,132,210 samples, 0.34%)</title><rect x="6.2567%" y="405" width="0.3378%" height="15" fill="rgb(225,218,4)" fg:x="21286731078" fg:w="1149132210"/><text x="6.5067%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,149,132,210 samples, 0.34%)</title><rect x="6.2567%" y="389" width="0.3378%" height="15" fill="rgb(230,182,32)" fg:x="21286731078" fg:w="1149132210"/><text x="6.5067%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,097,259,619 samples, 0.32%)</title><rect x="6.2720%" y="373" width="0.3225%" height="15" fill="rgb(242,56,43)" fg:x="21338603669" fg:w="1097259619"/><text x="6.5220%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,097,259,619 samples, 0.32%)</title><rect x="6.2720%" y="357" width="0.3225%" height="15" fill="rgb(233,99,24)" fg:x="21338603669" fg:w="1097259619"/><text x="6.5220%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1,097,259,619 samples, 0.32%)</title><rect x="6.2720%" y="341" width="0.3225%" height="15" fill="rgb(234,209,42)" fg:x="21338603669" fg:w="1097259619"/><text x="6.5220%" y="351.50"></text></g><g><title>__rustc::__rdl_alloc (1,097,259,619 samples, 0.32%)</title><rect x="6.2720%" y="325" width="0.3225%" height="15" fill="rgb(227,7,12)" fg:x="21338603669" fg:w="1097259619"/><text x="6.5220%" y="335.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,097,259,619 samples, 0.32%)</title><rect x="6.2720%" y="309" width="0.3225%" height="15" fill="rgb(245,203,43)" fg:x="21338603669" fg:w="1097259619"/><text x="6.5220%" y="319.50"></text></g><g><title>malloc (183,230,029 samples, 0.05%)</title><rect x="6.5406%" y="293" width="0.0539%" height="15" fill="rgb(238,205,33)" fg:x="22252633259" fg:w="183230029"/><text x="6.7906%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,266,752,404 samples, 0.37%)</title><rect x="6.2398%" y="501" width="0.3723%" height="15" fill="rgb(231,56,7)" fg:x="21229181361" fg:w="1266752404"/><text x="6.4898%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,233,287,134 samples, 0.36%)</title><rect x="6.2496%" y="485" width="0.3625%" height="15" fill="rgb(244,186,29)" fg:x="21262646631" fg:w="1233287134"/><text x="6.4996%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,233,287,134 samples, 0.36%)</title><rect x="6.2496%" y="469" width="0.3625%" height="15" fill="rgb(234,111,31)" fg:x="21262646631" fg:w="1233287134"/><text x="6.4996%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,233,287,134 samples, 0.36%)</title><rect x="6.2496%" y="453" width="0.3625%" height="15" fill="rgb(241,149,10)" fg:x="21262646631" fg:w="1233287134"/><text x="6.4996%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (60,070,477 samples, 0.02%)</title><rect x="6.5945%" y="437" width="0.0177%" height="15" fill="rgb(249,206,44)" fg:x="22435863288" fg:w="60070477"/><text x="6.8445%" y="447.50"></text></g><g><title>core::ptr::copy_nonoverlapping (60,070,477 samples, 0.02%)</title><rect x="6.5945%" y="421" width="0.0177%" height="15" fill="rgb(251,153,30)" fg:x="22435863288" fg:w="60070477"/><text x="6.8445%" y="431.50"></text></g><g><title>[libc.so.6] (60,070,477 samples, 0.02%)</title><rect x="6.5945%" y="405" width="0.0177%" height="15" fill="rgb(239,152,38)" fg:x="22435863288" fg:w="60070477"/><text x="6.8445%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45,877,412 samples, 0.01%)</title><rect x="6.6121%" y="501" width="0.0135%" height="15" fill="rgb(249,139,47)" fg:x="22495933765" fg:w="45877412"/><text x="6.8621%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (36,683,906 samples, 0.01%)</title><rect x="6.6148%" y="485" width="0.0108%" height="15" fill="rgb(244,64,35)" fg:x="22505127271" fg:w="36683906"/><text x="6.8648%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,348,531,196 samples, 0.40%)</title><rect x="6.2398%" y="549" width="0.3964%" height="15" fill="rgb(216,46,15)" fg:x="21229181361" fg:w="1348531196"/><text x="6.4898%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,348,531,196 samples, 0.40%)</title><rect x="6.2398%" y="533" width="0.3964%" height="15" fill="rgb(250,74,19)" fg:x="21229181361" fg:w="1348531196"/><text x="6.4898%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,348,531,196 samples, 0.40%)</title><rect x="6.2398%" y="517" width="0.3964%" height="15" fill="rgb(249,42,33)" fg:x="21229181361" fg:w="1348531196"/><text x="6.4898%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (35,901,380 samples, 0.01%)</title><rect x="6.6256%" y="501" width="0.0106%" height="15" fill="rgb(242,149,17)" fg:x="22541811177" fg:w="35901380"/><text x="6.8756%" y="511.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (36,054,238 samples, 0.01%)</title><rect x="6.6365%" y="549" width="0.0106%" height="15" fill="rgb(244,29,21)" fg:x="22578733758" fg:w="36054238"/><text x="6.8865%" y="559.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}} (36,054,238 samples, 0.01%)</title><rect x="6.6365%" y="533" width="0.0106%" height="15" fill="rgb(220,130,37)" fg:x="22578733758" fg:w="36054238"/><text x="6.8865%" y="543.50"></text></g><g><title>backend_comparison::bench_distance_2_matching::{{closure}} (36,054,238 samples, 0.01%)</title><rect x="6.6365%" y="517" width="0.0106%" height="15" fill="rgb(211,67,2)" fg:x="22578733758" fg:w="36054238"/><text x="6.8865%" y="527.50"></text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (36,054,238 samples, 0.01%)</title><rect x="6.6365%" y="501" width="0.0106%" height="15" fill="rgb(235,68,52)" fg:x="22578733758" fg:w="36054238"/><text x="6.8865%" y="511.50"></text></g><g><title>backend_comparison::bench_distance_2_matching::{{closure}}::{{closure}} (36,054,238 samples, 0.01%)</title><rect x="6.6365%" y="485" width="0.0106%" height="15" fill="rgb(246,142,3)" fg:x="22578733758" fg:w="36054238"/><text x="6.8865%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (36,054,238 samples, 0.01%)</title><rect x="6.6365%" y="469" width="0.0106%" height="15" fill="rgb(241,25,7)" fg:x="22578733758" fg:w="36054238"/><text x="6.8865%" y="479.50"></text></g><g><title>[backend_comparison-99338687d45c462c] (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="549" width="0.0351%" height="15" fill="rgb(242,119,39)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="533" width="0.0351%" height="15" fill="rgb(241,98,45)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="517" width="0.0351%" height="15" fill="rgb(254,28,30)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="527.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="501" width="0.0351%" height="15" fill="rgb(241,142,54)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="485" width="0.0351%" height="15" fill="rgb(222,85,15)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="469" width="0.0351%" height="15" fill="rgb(210,85,47)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="453" width="0.0351%" height="15" fill="rgb(224,206,25)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="437" width="0.0351%" height="15" fill="rgb(243,201,19)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="421" width="0.0351%" height="15" fill="rgb(236,59,4)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="405" width="0.0351%" height="15" fill="rgb(254,179,45)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="415.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="389" width="0.0351%" height="15" fill="rgb(226,14,10)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="373" width="0.0351%" height="15" fill="rgb(244,27,41)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="383.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="357" width="0.0351%" height="15" fill="rgb(235,35,32)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="367.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="341" width="0.0351%" height="15" fill="rgb(218,68,31)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="325" width="0.0351%" height="15" fill="rgb(207,120,37)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="309" width="0.0351%" height="15" fill="rgb(227,98,0)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="319.50"></text></g><g><title>core::f64::math::sqrt (119,409,399 samples, 0.04%)</title><rect x="6.6471%" y="293" width="0.0351%" height="15" fill="rgb(207,7,3)" fg:x="22614787996" fg:w="119409399"/><text x="6.8971%" y="303.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (35,442,182 samples, 0.01%)</title><rect x="6.7644%" y="421" width="0.0104%" height="15" fill="rgb(206,98,19)" fg:x="23013940821" fg:w="35442182"/><text x="7.0144%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::ptr (35,442,182 samples, 0.01%)</title><rect x="6.7644%" y="405" width="0.0104%" height="15" fill="rgb(217,5,26)" fg:x="23013940821" fg:w="35442182"/><text x="7.0144%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (35,442,182 samples, 0.01%)</title><rect x="6.7644%" y="389" width="0.0104%" height="15" fill="rgb(235,190,38)" fg:x="23013940821" fg:w="35442182"/><text x="7.0144%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (35,442,182 samples, 0.01%)</title><rect x="6.7644%" y="373" width="0.0104%" height="15" fill="rgb(247,86,24)" fg:x="23013940821" fg:w="35442182"/><text x="7.0144%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (35,442,182 samples, 0.01%)</title><rect x="6.7644%" y="357" width="0.0104%" height="15" fill="rgb(205,101,16)" fg:x="23013940821" fg:w="35442182"/><text x="7.0144%" y="367.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (176,758,031 samples, 0.05%)</title><rect x="6.7265%" y="437" width="0.0520%" height="15" fill="rgb(246,168,33)" fg:x="22885090433" fg:w="176758031"/><text x="6.9765%" y="447.50"></text></g><g><title>cfree (139,725,166 samples, 0.04%)</title><rect x="6.7785%" y="437" width="0.0411%" height="15" fill="rgb(231,114,1)" fg:x="23061848464" fg:w="139725166"/><text x="7.0285%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (502,671,840 samples, 0.15%)</title><rect x="6.8222%" y="421" width="0.1477%" height="15" fill="rgb(207,184,53)" fg:x="23210479666" fg:w="502671840"/><text x="7.0722%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (502,671,840 samples, 0.15%)</title><rect x="6.8222%" y="405" width="0.1477%" height="15" fill="rgb(224,95,51)" fg:x="23210479666" fg:w="502671840"/><text x="7.0722%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (502,671,840 samples, 0.15%)</title><rect x="6.8222%" y="389" width="0.1477%" height="15" fill="rgb(212,188,45)" fg:x="23210479666" fg:w="502671840"/><text x="7.0722%" y="399.50"></text></g><g><title>__rustc::__rdl_dealloc (502,671,840 samples, 0.15%)</title><rect x="6.8222%" y="373" width="0.1477%" height="15" fill="rgb(223,154,38)" fg:x="23210479666" fg:w="502671840"/><text x="7.0722%" y="383.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (502,671,840 samples, 0.15%)</title><rect x="6.8222%" y="357" width="0.1477%" height="15" fill="rgb(251,22,52)" fg:x="23210479666" fg:w="502671840"/><text x="7.0722%" y="367.50"></text></g><g><title>cfree (463,737,946 samples, 0.14%)</title><rect x="6.8336%" y="341" width="0.1363%" height="15" fill="rgb(229,209,22)" fg:x="23249413560" fg:w="463737946"/><text x="7.0836%" y="351.50"></text></g><g><title>cfree (91,443,676 samples, 0.03%)</title><rect x="6.9717%" y="421" width="0.0269%" height="15" fill="rgb(234,138,34)" fg:x="23719141008" fg:w="91443676"/><text x="7.2217%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt; (73,628,321 samples, 0.02%)</title><rect x="7.0021%" y="405" width="0.0216%" height="15" fill="rgb(212,95,11)" fg:x="23822604139" fg:w="73628321"/><text x="7.2521%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;i32&gt;&gt;&gt; (73,628,321 samples, 0.02%)</title><rect x="7.0021%" y="389" width="0.0216%" height="15" fill="rgb(240,179,47)" fg:x="23822604139" fg:w="73628321"/><text x="7.2521%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73,628,321 samples, 0.02%)</title><rect x="7.0021%" y="373" width="0.0216%" height="15" fill="rgb(240,163,11)" fg:x="23822604139" fg:w="73628321"/><text x="7.2521%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (61,808,615 samples, 0.02%)</title><rect x="7.0055%" y="357" width="0.0182%" height="15" fill="rgb(236,37,12)" fg:x="23834423845" fg:w="61808615"/><text x="7.2555%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (61,808,615 samples, 0.02%)</title><rect x="7.0055%" y="341" width="0.0182%" height="15" fill="rgb(232,164,16)" fg:x="23834423845" fg:w="61808615"/><text x="7.2555%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt;&gt; (709,587,308 samples, 0.21%)</title><rect x="6.8195%" y="437" width="0.2086%" height="15" fill="rgb(244,205,15)" fg:x="23201573630" fg:w="709587308"/><text x="7.0695%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt; (100,576,254 samples, 0.03%)</title><rect x="6.9985%" y="421" width="0.0296%" height="15" fill="rgb(223,117,47)" fg:x="23810584684" fg:w="100576254"/><text x="7.2485%" y="431.50"></text></g><g><title>liblevenshtein::transducer::intersection::Intersection&lt;N&gt;::is_final (68,529,036 samples, 0.02%)</title><rect x="7.0281%" y="437" width="0.0201%" height="15" fill="rgb(244,107,35)" fg:x="23911160938" fg:w="68529036"/><text x="7.2781%" y="447.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="421" width="0.0148%" height="15" fill="rgb(205,140,8)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="405" width="0.0148%" height="15" fill="rgb(228,84,46)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="389" width="0.0148%" height="15" fill="rgb(254,188,9)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="373" width="0.0148%" height="15" fill="rgb(206,112,54)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="357" width="0.0148%" height="15" fill="rgb(216,84,49)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="341" width="0.0148%" height="15" fill="rgb(214,194,35)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="325" width="0.0148%" height="15" fill="rgb(249,28,3)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="309" width="0.0148%" height="15" fill="rgb(222,56,52)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="293" width="0.0148%" height="15" fill="rgb(245,217,50)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="277" width="0.0148%" height="15" fill="rgb(213,201,24)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="261" width="0.0148%" height="15" fill="rgb(248,116,28)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="245" width="0.0148%" height="15" fill="rgb(219,72,43)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="255.50"></text></g><g><title>alloc::alloc::alloc (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="229" width="0.0148%" height="15" fill="rgb(209,138,14)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="239.50"></text></g><g><title>[libc.so.6] (50,444,090 samples, 0.01%)</title><rect x="7.0518%" y="213" width="0.0148%" height="15" fill="rgb(222,18,33)" fg:x="23991648517" fg:w="50444090"/><text x="7.3018%" y="223.50"></text></g><g><title>[libc.so.6] (44,328,182 samples, 0.01%)</title><rect x="7.0536%" y="197" width="0.0130%" height="15" fill="rgb(213,199,7)" fg:x="23997764425" fg:w="44328182"/><text x="7.3036%" y="207.50"></text></g><g><title>liblevenshtein::transducer::intersection::Intersection&lt;N&gt;::term (85,838,482 samples, 0.03%)</title><rect x="7.0482%" y="437" width="0.0252%" height="15" fill="rgb(250,110,10)" fg:x="23979689974" fg:w="85838482"/><text x="7.2982%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47,045,232 samples, 0.01%)</title><rect x="7.0839%" y="373" width="0.0138%" height="15" fill="rgb(248,123,6)" fg:x="24101012865" fg:w="47045232"/><text x="7.3339%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47,045,232 samples, 0.01%)</title><rect x="7.0839%" y="357" width="0.0138%" height="15" fill="rgb(206,91,31)" fg:x="24101012865" fg:w="47045232"/><text x="7.3339%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (58,520,039 samples, 0.02%)</title><rect x="7.0839%" y="421" width="0.0172%" height="15" fill="rgb(211,154,13)" fg:x="24101012865" fg:w="58520039"/><text x="7.3339%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (58,520,039 samples, 0.02%)</title><rect x="7.0839%" y="405" width="0.0172%" height="15" fill="rgb(225,148,7)" fg:x="24101012865" fg:w="58520039"/><text x="7.3339%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (58,520,039 samples, 0.02%)</title><rect x="7.0839%" y="389" width="0.0172%" height="15" fill="rgb(220,160,43)" fg:x="24101012865" fg:w="58520039"/><text x="7.3339%" y="399.50"></text></g><g><title>&lt;liblevenshtein::transducer::query::QueryIterator&lt;N&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,434,240,638 samples, 0.42%)</title><rect x="6.6839%" y="469" width="0.4216%" height="15" fill="rgb(213,52,39)" fg:x="22739953213" fg:w="1434240638"/><text x="6.9339%" y="479.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::advance (1,422,250,160 samples, 0.42%)</title><rect x="6.6874%" y="453" width="0.4180%" height="15" fill="rgb(243,137,7)" fg:x="22751943691" fg:w="1422250160"/><text x="6.9374%" y="463.50"></text></g><g><title>liblevenshtein::transducer::state::State::infer_distance (85,017,234 samples, 0.02%)</title><rect x="7.0804%" y="437" width="0.0250%" height="15" fill="rgb(230,79,13)" fg:x="24089176617" fg:w="85017234"/><text x="7.3304%" y="447.50"></text></g><g><title>[unknown] (1,440,127,439 samples, 0.42%)</title><rect x="6.6830%" y="549" width="0.4233%" height="15" fill="rgb(247,105,23)" fg:x="22736954960" fg:w="1440127439"/><text x="6.9330%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,437,129,186 samples, 0.42%)</title><rect x="6.6839%" y="533" width="0.4224%" height="15" fill="rgb(223,179,41)" fg:x="22739953213" fg:w="1437129186"/><text x="6.9339%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,437,129,186 samples, 0.42%)</title><rect x="6.6839%" y="517" width="0.4224%" height="15" fill="rgb(218,9,34)" fg:x="22739953213" fg:w="1437129186"/><text x="6.9339%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,437,129,186 samples, 0.42%)</title><rect x="6.6839%" y="501" width="0.4224%" height="15" fill="rgb(222,106,8)" fg:x="22739953213" fg:w="1437129186"/><text x="6.9339%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,437,129,186 samples, 0.42%)</title><rect x="6.6839%" y="485" width="0.4224%" height="15" fill="rgb(211,220,0)" fg:x="22739953213" fg:w="1437129186"/><text x="6.9339%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (38,240,682 samples, 0.01%)</title><rect x="7.1427%" y="453" width="0.0112%" height="15" fill="rgb(229,52,16)" fg:x="24300995377" fg:w="38240682"/><text x="7.3927%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89,462,572 samples, 0.03%)</title><rect x="7.1617%" y="437" width="0.0263%" height="15" fill="rgb(212,155,18)" fg:x="24365792372" fg:w="89462572"/><text x="7.4117%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (89,462,572 samples, 0.03%)</title><rect x="7.1617%" y="421" width="0.0263%" height="15" fill="rgb(242,21,14)" fg:x="24365792372" fg:w="89462572"/><text x="7.4117%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (89,462,572 samples, 0.03%)</title><rect x="7.1617%" y="405" width="0.0263%" height="15" fill="rgb(222,19,48)" fg:x="24365792372" fg:w="89462572"/><text x="7.4117%" y="415.50"></text></g><g><title>__rustc::__rdl_dealloc (89,462,572 samples, 0.03%)</title><rect x="7.1617%" y="389" width="0.0263%" height="15" fill="rgb(232,45,27)" fg:x="24365792372" fg:w="89462572"/><text x="7.4117%" y="399.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (89,462,572 samples, 0.03%)</title><rect x="7.1617%" y="373" width="0.0263%" height="15" fill="rgb(249,103,42)" fg:x="24365792372" fg:w="89462572"/><text x="7.4117%" y="383.50"></text></g><g><title>cfree (83,529,171 samples, 0.02%)</title><rect x="7.1635%" y="357" width="0.0246%" height="15" fill="rgb(246,81,33)" fg:x="24371725773" fg:w="83529171"/><text x="7.4135%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt;&gt; (122,440,505 samples, 0.04%)</title><rect x="7.1599%" y="453" width="0.0360%" height="15" fill="rgb(252,33,42)" fg:x="24359728341" fg:w="122440505"/><text x="7.4099%" y="463.50"></text></g><g><title>liblevenshtein::transducer::intersection::Intersection&lt;N&gt;::term (61,974,542 samples, 0.02%)</title><rect x="7.1995%" y="453" width="0.0182%" height="15" fill="rgb(209,212,41)" fg:x="24494292897" fg:w="61974542"/><text x="7.4495%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (389,948,654 samples, 0.11%)</title><rect x="7.1116%" y="549" width="0.1146%" height="15" fill="rgb(207,154,6)" fg:x="24195109894" fg:w="389948654"/><text x="7.3616%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (365,976,829 samples, 0.11%)</title><rect x="7.1186%" y="533" width="0.1076%" height="15" fill="rgb(223,64,47)" fg:x="24219081719" fg:w="365976829"/><text x="7.3686%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (365,976,829 samples, 0.11%)</title><rect x="7.1186%" y="517" width="0.1076%" height="15" fill="rgb(211,161,38)" fg:x="24219081719" fg:w="365976829"/><text x="7.3686%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (365,976,829 samples, 0.11%)</title><rect x="7.1186%" y="501" width="0.1076%" height="15" fill="rgb(219,138,40)" fg:x="24219081719" fg:w="365976829"/><text x="7.3686%" y="511.50"></text></g><g><title>&lt;liblevenshtein::transducer::query::QueryIterator&lt;N&gt; as core::iter::traits::iterator::Iterator&gt;::next (314,704,226 samples, 0.09%)</title><rect x="7.1337%" y="485" width="0.0925%" height="15" fill="rgb(241,228,46)" fg:x="24270354322" fg:w="314704226"/><text x="7.3837%" y="495.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::advance (311,758,674 samples, 0.09%)</title><rect x="7.1345%" y="469" width="0.0916%" height="15" fill="rgb(223,209,38)" fg:x="24273299874" fg:w="311758674"/><text x="7.3845%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (44,562,033 samples, 0.01%)</title><rect x="7.2312%" y="405" width="0.0131%" height="15" fill="rgb(236,164,45)" fg:x="24602036941" fg:w="44562033"/><text x="7.4812%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (44,562,033 samples, 0.01%)</title><rect x="7.2312%" y="389" width="0.0131%" height="15" fill="rgb(231,15,5)" fg:x="24602036941" fg:w="44562033"/><text x="7.4812%" y="399.50"></text></g><g><title>__rustc::__rdl_dealloc (44,562,033 samples, 0.01%)</title><rect x="7.2312%" y="373" width="0.0131%" height="15" fill="rgb(252,35,15)" fg:x="24602036941" fg:w="44562033"/><text x="7.4812%" y="383.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (44,562,033 samples, 0.01%)</title><rect x="7.2312%" y="357" width="0.0131%" height="15" fill="rgb(248,181,18)" fg:x="24602036941" fg:w="44562033"/><text x="7.4812%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74,427,156 samples, 0.02%)</title><rect x="7.2312%" y="517" width="0.0219%" height="15" fill="rgb(233,39,42)" fg:x="24602036941" fg:w="74427156"/><text x="7.4812%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[liblevenshtein::dictionary::suffix_automaton::SuffixNode]&gt; (74,427,156 samples, 0.02%)</title><rect x="7.2312%" y="501" width="0.0219%" height="15" fill="rgb(238,110,33)" fg:x="24602036941" fg:w="74427156"/><text x="7.4812%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::dictionary::suffix_automaton::SuffixNode&gt; (74,427,156 samples, 0.02%)</title><rect x="7.2312%" y="485" width="0.0219%" height="15" fill="rgb(233,195,10)" fg:x="24602036941" fg:w="74427156"/><text x="7.4812%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u8,usize)&gt;&gt; (74,427,156 samples, 0.02%)</title><rect x="7.2312%" y="469" width="0.0219%" height="15" fill="rgb(254,105,3)" fg:x="24602036941" fg:w="74427156"/><text x="7.4812%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u8,usize)&gt;&gt; (74,427,156 samples, 0.02%)</title><rect x="7.2312%" y="453" width="0.0219%" height="15" fill="rgb(221,225,9)" fg:x="24602036941" fg:w="74427156"/><text x="7.4812%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74,427,156 samples, 0.02%)</title><rect x="7.2312%" y="437" width="0.0219%" height="15" fill="rgb(224,227,45)" fg:x="24602036941" fg:w="74427156"/><text x="7.4812%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (74,427,156 samples, 0.02%)</title><rect x="7.2312%" y="421" width="0.0219%" height="15" fill="rgb(229,198,43)" fg:x="24602036941" fg:w="74427156"/><text x="7.4812%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;liblevenshtein::dictionary::suffix_automaton::SuffixNode&gt;&gt; (85,526,205 samples, 0.03%)</title><rect x="7.2312%" y="533" width="0.0251%" height="15" fill="rgb(206,209,35)" fg:x="24602036941" fg:w="85526205"/><text x="7.4812%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::dictionary::suffix_automaton::SuffixAutomatonInner&gt; (110,985,080 samples, 0.03%)</title><rect x="7.2262%" y="549" width="0.0326%" height="15" fill="rgb(245,195,53)" fg:x="24585058548" fg:w="110985080"/><text x="7.4762%" y="559.50"></text></g><g><title>criterion::analysis::estimates::stats (40,735,706 samples, 0.01%)</title><rect x="7.2655%" y="549" width="0.0120%" height="15" fill="rgb(240,92,26)" fg:x="24718746221" fg:w="40735706"/><text x="7.5155%" y="559.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (38,102,909 samples, 0.01%)</title><rect x="7.2662%" y="533" width="0.0112%" height="15" fill="rgb(207,40,23)" fg:x="24721379018" fg:w="38102909"/><text x="7.5162%" y="543.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (38,102,909 samples, 0.01%)</title><rect x="7.2662%" y="517" width="0.0112%" height="15" fill="rgb(223,111,35)" fg:x="24721379018" fg:w="38102909"/><text x="7.5162%" y="527.50"></text></g><g><title>criterion::stats::sum (38,102,909 samples, 0.01%)</title><rect x="7.2662%" y="501" width="0.0112%" height="15" fill="rgb(229,147,28)" fg:x="24721379018" fg:w="38102909"/><text x="7.5162%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38,102,909 samples, 0.01%)</title><rect x="7.2662%" y="485" width="0.0112%" height="15" fill="rgb(211,29,28)" fg:x="24721379018" fg:w="38102909"/><text x="7.5162%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38,102,909 samples, 0.01%)</title><rect x="7.2662%" y="469" width="0.0112%" height="15" fill="rgb(228,72,33)" fg:x="24721379018" fg:w="38102909"/><text x="7.5162%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38,102,909 samples, 0.01%)</title><rect x="7.2662%" y="453" width="0.0112%" height="15" fill="rgb(205,214,31)" fg:x="24721379018" fg:w="38102909"/><text x="7.5162%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (38,102,909 samples, 0.01%)</title><rect x="7.2662%" y="437" width="0.0112%" height="15" fill="rgb(224,111,15)" fg:x="24721379018" fg:w="38102909"/><text x="7.5162%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (38,102,909 samples, 0.01%)</title><rect x="7.2662%" y="421" width="0.0112%" height="15" fill="rgb(253,21,26)" fg:x="24721379018" fg:w="38102909"/><text x="7.5162%" y="431.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (38,102,909 samples, 0.01%)</title><rect x="7.2662%" y="405" width="0.0112%" height="15" fill="rgb(245,139,43)" fg:x="24721379018" fg:w="38102909"/><text x="7.5162%" y="415.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (88,015,661 samples, 0.03%)</title><rect x="7.2783%" y="469" width="0.0259%" height="15" fill="rgb(252,170,7)" fg:x="24762436669" fg:w="88015661"/><text x="7.5283%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (88,015,661 samples, 0.03%)</title><rect x="7.2783%" y="453" width="0.0259%" height="15" fill="rgb(231,118,14)" fg:x="24762436669" fg:w="88015661"/><text x="7.5283%" y="463.50"></text></g><g><title>exp (88,015,661 samples, 0.03%)</title><rect x="7.2783%" y="437" width="0.0259%" height="15" fill="rgb(238,83,0)" fg:x="24762436669" fg:w="88015661"/><text x="7.5283%" y="447.50"></text></g><g><title>[libm.so.6] (50,472,045 samples, 0.01%)</title><rect x="7.2894%" y="421" width="0.0148%" height="15" fill="rgb(221,39,39)" fg:x="24799980285" fg:w="50472045"/><text x="7.5394%" y="431.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (90,530,518 samples, 0.03%)</title><rect x="7.2783%" y="485" width="0.0266%" height="15" fill="rgb(222,119,46)" fg:x="24762436669" fg:w="90530518"/><text x="7.5283%" y="495.50"></text></g><g><title>criterion::kde::sweep_and_estimate (100,668,022 samples, 0.03%)</title><rect x="7.2783%" y="549" width="0.0296%" height="15" fill="rgb(222,165,49)" fg:x="24762436669" fg:w="100668022"/><text x="7.5283%" y="559.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (100,668,022 samples, 0.03%)</title><rect x="7.2783%" y="533" width="0.0296%" height="15" fill="rgb(219,113,52)" fg:x="24762436669" fg:w="100668022"/><text x="7.5283%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100,668,022 samples, 0.03%)</title><rect x="7.2783%" y="517" width="0.0296%" height="15" fill="rgb(214,7,15)" fg:x="24762436669" fg:w="100668022"/><text x="7.5283%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (100,668,022 samples, 0.03%)</title><rect x="7.2783%" y="501" width="0.0296%" height="15" fill="rgb(235,32,4)" fg:x="24762436669" fg:w="100668022"/><text x="7.5283%" y="511.50"></text></g><g><title>liblevenshtein::dictionary::suffix_automaton::SuffixAutomaton::from_texts (53,157,194 samples, 0.02%)</title><rect x="7.3097%" y="549" width="0.0156%" height="15" fill="rgb(238,90,54)" fg:x="24869072092" fg:w="53157194"/><text x="7.5597%" y="559.50"></text></g><g><title>liblevenshtein::dictionary::suffix_automaton::SuffixAutomaton::insert (50,077,725 samples, 0.01%)</title><rect x="7.3106%" y="533" width="0.0147%" height="15" fill="rgb(213,208,19)" fg:x="24872151561" fg:w="50077725"/><text x="7.5606%" y="543.50"></text></g><g><title>liblevenshtein::dictionary::suffix_automaton::SuffixAutomatonInner::extend (50,077,725 samples, 0.01%)</title><rect x="7.3106%" y="517" width="0.0147%" height="15" fill="rgb(233,156,4)" fg:x="24872151561" fg:w="50077725"/><text x="7.5606%" y="527.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (86,272,935 samples, 0.03%)</title><rect x="7.3296%" y="341" width="0.0254%" height="15" fill="rgb(207,194,5)" fg:x="24937038930" fg:w="86272935"/><text x="7.5796%" y="351.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="533" width="0.2267%" height="15" fill="rgb(206,111,30)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="543.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="517" width="0.2267%" height="15" fill="rgb(243,70,54)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="527.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="501" width="0.2267%" height="15" fill="rgb(242,28,8)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="485" width="0.2267%" height="15" fill="rgb(219,106,18)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="469" width="0.2267%" height="15" fill="rgb(244,222,10)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="453" width="0.2267%" height="15" fill="rgb(236,179,52)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="437" width="0.2267%" height="15" fill="rgb(213,23,39)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="447.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="421" width="0.2267%" height="15" fill="rgb(238,48,10)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="405" width="0.2267%" height="15" fill="rgb(251,196,23)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="389" width="0.2267%" height="15" fill="rgb(250,152,24)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="399.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="373" width="0.2267%" height="15" fill="rgb(209,150,17)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="383.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (771,359,972 samples, 0.23%)</title><rect x="7.3296%" y="357" width="0.2267%" height="15" fill="rgb(234,202,34)" fg:x="24937038930" fg:w="771359972"/><text x="7.5796%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (685,087,037 samples, 0.20%)</title><rect x="7.3550%" y="341" width="0.2014%" height="15" fill="rgb(253,148,53)" fg:x="25023311865" fg:w="685087037"/><text x="7.6050%" y="351.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (685,087,037 samples, 0.20%)</title><rect x="7.3550%" y="325" width="0.2014%" height="15" fill="rgb(218,129,16)" fg:x="25023311865" fg:w="685087037"/><text x="7.6050%" y="335.50"></text></g><g><title>core::f64::math::sqrt (685,087,037 samples, 0.20%)</title><rect x="7.3550%" y="309" width="0.2014%" height="15" fill="rgb(216,85,19)" fg:x="25023311865" fg:w="685087037"/><text x="7.6050%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (778,731,959 samples, 0.23%)</title><rect x="7.3289%" y="549" width="0.2289%" height="15" fill="rgb(235,228,7)" fg:x="24934548778" fg:w="778731959"/><text x="7.5789%" y="559.50"></text></g><g><title>rayon::slice::sort::choose_pivot (86,684,849 samples, 0.03%)</title><rect x="7.5621%" y="533" width="0.0255%" height="15" fill="rgb(245,175,0)" fg:x="25727954765" fg:w="86684849"/><text x="7.8121%" y="543.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (80,403,246 samples, 0.02%)</title><rect x="7.5640%" y="517" width="0.0236%" height="15" fill="rgb(208,168,36)" fg:x="25734236368" fg:w="80403246"/><text x="7.8140%" y="527.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (73,591,562 samples, 0.02%)</title><rect x="7.5660%" y="501" width="0.0216%" height="15" fill="rgb(246,171,24)" fg:x="25741048052" fg:w="73591562"/><text x="7.8160%" y="511.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (61,896,813 samples, 0.02%)</title><rect x="7.5694%" y="485" width="0.0182%" height="15" fill="rgb(215,142,24)" fg:x="25752742801" fg:w="61896813"/><text x="7.8194%" y="495.50"></text></g><g><title>rayon::slice::sort::recurse (106,485,385 samples, 0.03%)</title><rect x="7.5578%" y="549" width="0.0313%" height="15" fill="rgb(250,187,7)" fg:x="25713280737" fg:w="106485385"/><text x="7.8078%" y="559.50"></text></g><g><title>[unknown] (4,607,392,825 samples, 1.35%)</title><rect x="6.2398%" y="565" width="1.3542%" height="15" fill="rgb(228,66,33)" fg:x="21229181361" fg:w="4607392825"/><text x="6.4898%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (119,186,918 samples, 0.04%)</title><rect x="7.5959%" y="565" width="0.0350%" height="15" fill="rgb(234,215,21)" fg:x="25842773043" fg:w="119186918"/><text x="7.8459%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (119,186,918 samples, 0.04%)</title><rect x="7.5959%" y="549" width="0.0350%" height="15" fill="rgb(222,191,20)" fg:x="25842773043" fg:w="119186918"/><text x="7.8459%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (95,127,405 samples, 0.03%)</title><rect x="7.6029%" y="533" width="0.0280%" height="15" fill="rgb(245,79,54)" fg:x="25866832556" fg:w="95127405"/><text x="7.8529%" y="543.50"></text></g><g><title>__rustc::__rdl_realloc (287,610,686 samples, 0.08%)</title><rect x="7.6787%" y="501" width="0.0845%" height="15" fill="rgb(240,10,37)" fg:x="26124747478" fg:w="287610686"/><text x="7.9287%" y="511.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (287,610,686 samples, 0.08%)</title><rect x="7.6787%" y="485" width="0.0845%" height="15" fill="rgb(214,192,32)" fg:x="26124747478" fg:w="287610686"/><text x="7.9287%" y="495.50"></text></g><g><title>realloc (282,691,065 samples, 0.08%)</title><rect x="7.6802%" y="469" width="0.0831%" height="15" fill="rgb(209,36,54)" fg:x="26129667099" fg:w="282691065"/><text x="7.9302%" y="479.50"></text></g><g><title>[libc.so.6] (257,334,458 samples, 0.08%)</title><rect x="7.6876%" y="453" width="0.0756%" height="15" fill="rgb(220,10,11)" fg:x="26155023706" fg:w="257334458"/><text x="7.9376%" y="463.50"></text></g><g><title>[libc.so.6] (240,235,538 samples, 0.07%)</title><rect x="7.6927%" y="437" width="0.0706%" height="15" fill="rgb(221,106,17)" fg:x="26172122626" fg:w="240235538"/><text x="7.9427%" y="447.50"></text></g><g><title>[libc.so.6] (85,445,332 samples, 0.03%)</title><rect x="7.7382%" y="421" width="0.0251%" height="15" fill="rgb(251,142,44)" fg:x="26326912832" fg:w="85445332"/><text x="7.9882%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (288,805,469 samples, 0.08%)</title><rect x="7.6787%" y="549" width="0.0849%" height="15" fill="rgb(238,13,15)" fg:x="26124747478" fg:w="288805469"/><text x="7.9287%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (288,805,469 samples, 0.08%)</title><rect x="7.6787%" y="533" width="0.0849%" height="15" fill="rgb(208,107,27)" fg:x="26124747478" fg:w="288805469"/><text x="7.9287%" y="543.50"></text></g><g><title>alloc::alloc::realloc (288,805,469 samples, 0.08%)</title><rect x="7.6787%" y="517" width="0.0849%" height="15" fill="rgb(205,136,37)" fg:x="26124747478" fg:w="288805469"/><text x="7.9287%" y="527.50"></text></g><g><title>[libc.so.6] (67,797,790 samples, 0.02%)</title><rect x="7.7636%" y="549" width="0.0199%" height="15" fill="rgb(250,205,27)" fg:x="26413552947" fg:w="67797790"/><text x="8.0136%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (769,919,474 samples, 0.23%)</title><rect x="7.6365%" y="565" width="0.2263%" height="15" fill="rgb(210,80,43)" fg:x="25981173322" fg:w="769919474"/><text x="7.8865%" y="575.50"></text></g><g><title>malloc (255,219,782 samples, 0.08%)</title><rect x="7.7878%" y="549" width="0.0750%" height="15" fill="rgb(247,160,36)" fg:x="26495873014" fg:w="255219782"/><text x="8.0378%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (45,304,253 samples, 0.01%)</title><rect x="8.0020%" y="453" width="0.0133%" height="15" fill="rgb(234,13,49)" fg:x="27224628896" fg:w="45304253"/><text x="8.2520%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::ptr (45,304,253 samples, 0.01%)</title><rect x="8.0020%" y="437" width="0.0133%" height="15" fill="rgb(234,122,0)" fg:x="27224628896" fg:w="45304253"/><text x="8.2520%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (45,304,253 samples, 0.01%)</title><rect x="8.0020%" y="421" width="0.0133%" height="15" fill="rgb(207,146,38)" fg:x="27224628896" fg:w="45304253"/><text x="8.2520%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (45,304,253 samples, 0.01%)</title><rect x="8.0020%" y="405" width="0.0133%" height="15" fill="rgb(207,177,25)" fg:x="27224628896" fg:w="45304253"/><text x="8.2520%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (45,304,253 samples, 0.01%)</title><rect x="8.0020%" y="389" width="0.0133%" height="15" fill="rgb(211,178,42)" fg:x="27224628896" fg:w="45304253"/><text x="8.2520%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (276,109,586 samples, 0.08%)</title><rect x="7.9361%" y="469" width="0.0812%" height="15" fill="rgb(230,69,54)" fg:x="27000403085" fg:w="276109586"/><text x="8.1861%" y="479.50"></text></g><g><title>cfree (167,664,269 samples, 0.05%)</title><rect x="8.0173%" y="469" width="0.0493%" height="15" fill="rgb(214,135,41)" fg:x="27276512671" fg:w="167664269"/><text x="8.2673%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (786,335,034 samples, 0.23%)</title><rect x="8.0801%" y="453" width="0.2311%" height="15" fill="rgb(237,67,25)" fg:x="27490435554" fg:w="786335034"/><text x="8.3301%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (786,335,034 samples, 0.23%)</title><rect x="8.0801%" y="437" width="0.2311%" height="15" fill="rgb(222,189,50)" fg:x="27490435554" fg:w="786335034"/><text x="8.3301%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (786,335,034 samples, 0.23%)</title><rect x="8.0801%" y="421" width="0.2311%" height="15" fill="rgb(245,148,34)" fg:x="27490435554" fg:w="786335034"/><text x="8.3301%" y="431.50"></text></g><g><title>__rustc::__rdl_dealloc (786,335,034 samples, 0.23%)</title><rect x="8.0801%" y="405" width="0.2311%" height="15" fill="rgb(222,29,6)" fg:x="27490435554" fg:w="786335034"/><text x="8.3301%" y="415.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (786,335,034 samples, 0.23%)</title><rect x="8.0801%" y="389" width="0.2311%" height="15" fill="rgb(221,189,43)" fg:x="27490435554" fg:w="786335034"/><text x="8.3301%" y="399.50"></text></g><g><title>cfree (696,046,713 samples, 0.20%)</title><rect x="8.1067%" y="373" width="0.2046%" height="15" fill="rgb(207,36,27)" fg:x="27580723875" fg:w="696046713"/><text x="8.3567%" y="383.50"></text></g><g><title>cfree (124,801,814 samples, 0.04%)</title><rect x="8.3131%" y="453" width="0.0367%" height="15" fill="rgb(217,90,24)" fg:x="28283122927" fg:w="124801814"/><text x="8.5631%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt; (105,043,963 samples, 0.03%)</title><rect x="8.3572%" y="437" width="0.0309%" height="15" fill="rgb(224,66,35)" fg:x="28433115211" fg:w="105043963"/><text x="8.6072%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;i32&gt;&gt;&gt; (105,043,963 samples, 0.03%)</title><rect x="8.3572%" y="421" width="0.0309%" height="15" fill="rgb(221,13,50)" fg:x="28433115211" fg:w="105043963"/><text x="8.6072%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (105,043,963 samples, 0.03%)</title><rect x="8.3572%" y="405" width="0.0309%" height="15" fill="rgb(236,68,49)" fg:x="28433115211" fg:w="105043963"/><text x="8.6072%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (84,552,730 samples, 0.02%)</title><rect x="8.3632%" y="389" width="0.0249%" height="15" fill="rgb(229,146,28)" fg:x="28453606444" fg:w="84552730"/><text x="8.6132%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (84,552,730 samples, 0.02%)</title><rect x="8.3632%" y="373" width="0.0249%" height="15" fill="rgb(225,31,38)" fg:x="28453606444" fg:w="84552730"/><text x="8.6132%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt;&gt; (1,139,078,408 samples, 0.33%)</title><rect x="8.0665%" y="469" width="0.3348%" height="15" fill="rgb(250,208,3)" fg:x="27444176940" fg:w="1139078408"/><text x="8.3165%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt; (175,330,607 samples, 0.05%)</title><rect x="8.3498%" y="453" width="0.0515%" height="15" fill="rgb(246,54,23)" fg:x="28407924741" fg:w="175330607"/><text x="8.5998%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::state::State&gt; (45,096,174 samples, 0.01%)</title><rect x="8.3881%" y="437" width="0.0133%" height="15" fill="rgb(243,76,11)" fg:x="28538159174" fg:w="45096174"/><text x="8.6381%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[liblevenshtein::transducer::position::Position: 8]&gt;&gt; (45,096,174 samples, 0.01%)</title><rect x="8.3881%" y="421" width="0.0133%" height="15" fill="rgb(245,21,50)" fg:x="28538159174" fg:w="45096174"/><text x="8.6381%" y="431.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (45,096,174 samples, 0.01%)</title><rect x="8.3881%" y="405" width="0.0133%" height="15" fill="rgb(228,9,43)" fg:x="28538159174" fg:w="45096174"/><text x="8.6381%" y="415.50"></text></g><g><title>liblevenshtein::transducer::intersection::Intersection&lt;N&gt;::is_final (80,520,521 samples, 0.02%)</title><rect x="8.4014%" y="469" width="0.0237%" height="15" fill="rgb(208,100,47)" fg:x="28583255348" fg:w="80520521"/><text x="8.6514%" y="479.50"></text></g><g><title>[libc.so.6] (56,369,377 samples, 0.02%)</title><rect x="8.4356%" y="245" width="0.0166%" height="15" fill="rgb(232,26,8)" fg:x="28699846149" fg:w="56369377"/><text x="8.6856%" y="255.50"></text></g><g><title>[libc.so.6] (47,665,964 samples, 0.01%)</title><rect x="8.4382%" y="229" width="0.0140%" height="15" fill="rgb(216,166,38)" fg:x="28708549562" fg:w="47665964"/><text x="8.6882%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (62,085,809 samples, 0.02%)</title><rect x="8.4348%" y="357" width="0.0182%" height="15" fill="rgb(251,202,51)" fg:x="28696908864" fg:w="62085809"/><text x="8.6848%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62,085,809 samples, 0.02%)</title><rect x="8.4348%" y="341" width="0.0182%" height="15" fill="rgb(254,216,34)" fg:x="28696908864" fg:w="62085809"/><text x="8.6848%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (62,085,809 samples, 0.02%)</title><rect x="8.4348%" y="325" width="0.0182%" height="15" fill="rgb(251,32,27)" fg:x="28696908864" fg:w="62085809"/><text x="8.6848%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (62,085,809 samples, 0.02%)</title><rect x="8.4348%" y="309" width="0.0182%" height="15" fill="rgb(208,127,28)" fg:x="28696908864" fg:w="62085809"/><text x="8.6848%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (59,148,524 samples, 0.02%)</title><rect x="8.4356%" y="293" width="0.0174%" height="15" fill="rgb(224,137,22)" fg:x="28699846149" fg:w="59148524"/><text x="8.6856%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (59,148,524 samples, 0.02%)</title><rect x="8.4356%" y="277" width="0.0174%" height="15" fill="rgb(254,70,32)" fg:x="28699846149" fg:w="59148524"/><text x="8.6856%" y="287.50"></text></g><g><title>alloc::alloc::alloc (59,148,524 samples, 0.02%)</title><rect x="8.4356%" y="261" width="0.0174%" height="15" fill="rgb(229,75,37)" fg:x="28699846149" fg:w="59148524"/><text x="8.6856%" y="271.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (64,833,323 samples, 0.02%)</title><rect x="8.4348%" y="453" width="0.0191%" height="15" fill="rgb(252,64,23)" fg:x="28696908864" fg:w="64833323"/><text x="8.6848%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (64,833,323 samples, 0.02%)</title><rect x="8.4348%" y="437" width="0.0191%" height="15" fill="rgb(232,162,48)" fg:x="28696908864" fg:w="64833323"/><text x="8.6848%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (64,833,323 samples, 0.02%)</title><rect x="8.4348%" y="421" width="0.0191%" height="15" fill="rgb(246,160,12)" fg:x="28696908864" fg:w="64833323"/><text x="8.6848%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (64,833,323 samples, 0.02%)</title><rect x="8.4348%" y="405" width="0.0191%" height="15" fill="rgb(247,166,0)" fg:x="28696908864" fg:w="64833323"/><text x="8.6848%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (64,833,323 samples, 0.02%)</title><rect x="8.4348%" y="389" width="0.0191%" height="15" fill="rgb(249,219,21)" fg:x="28696908864" fg:w="64833323"/><text x="8.6848%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (64,833,323 samples, 0.02%)</title><rect x="8.4348%" y="373" width="0.0191%" height="15" fill="rgb(205,209,3)" fg:x="28696908864" fg:w="64833323"/><text x="8.6848%" y="383.50"></text></g><g><title>liblevenshtein::transducer::intersection::Intersection&lt;N&gt;::term (151,500,078 samples, 0.04%)</title><rect x="8.4250%" y="469" width="0.0445%" height="15" fill="rgb(243,44,1)" fg:x="28663775869" fg:w="151500078"/><text x="8.6750%" y="479.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::queue_children (38,557,754 samples, 0.01%)</title><rect x="8.4695%" y="469" width="0.0113%" height="15" fill="rgb(206,159,16)" fg:x="28815275947" fg:w="38557754"/><text x="8.7195%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56,623,507 samples, 0.02%)</title><rect x="8.4874%" y="405" width="0.0166%" height="15" fill="rgb(244,77,30)" fg:x="28875936705" fg:w="56623507"/><text x="8.7374%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56,623,507 samples, 0.02%)</title><rect x="8.4874%" y="389" width="0.0166%" height="15" fill="rgb(218,69,12)" fg:x="28875936705" fg:w="56623507"/><text x="8.7374%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (62,419,591 samples, 0.02%)</title><rect x="8.4874%" y="453" width="0.0183%" height="15" fill="rgb(212,87,7)" fg:x="28875936705" fg:w="62419591"/><text x="8.7374%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (62,419,591 samples, 0.02%)</title><rect x="8.4874%" y="437" width="0.0183%" height="15" fill="rgb(245,114,25)" fg:x="28875936705" fg:w="62419591"/><text x="8.7374%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (62,419,591 samples, 0.02%)</title><rect x="8.4874%" y="421" width="0.0183%" height="15" fill="rgb(210,61,42)" fg:x="28875936705" fg:w="62419591"/><text x="8.7374%" y="431.50"></text></g><g><title>&lt;liblevenshtein::transducer::query::QueryIterator&lt;N&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,139,776,942 samples, 0.63%)</title><rect x="7.8840%" y="501" width="0.6289%" height="15" fill="rgb(211,52,33)" fg:x="26823141613" fg:w="2139776942"/><text x="8.1340%" y="511.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::advance (2,112,179,587 samples, 0.62%)</title><rect x="7.8921%" y="485" width="0.6208%" height="15" fill="rgb(234,58,33)" fg:x="26850738968" fg:w="2112179587"/><text x="8.1421%" y="495.50"></text></g><g><title>liblevenshtein::transducer::state::State::infer_distance (109,084,854 samples, 0.03%)</title><rect x="8.4809%" y="469" width="0.0321%" height="15" fill="rgb(220,115,36)" fg:x="28853833701" fg:w="109084854"/><text x="8.7309%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,202,846,432 samples, 0.65%)</title><rect x="7.8680%" y="565" width="0.6475%" height="15" fill="rgb(243,153,54)" fg:x="26768780551" fg:w="2202846432"/><text x="8.1180%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,160,575,380 samples, 0.64%)</title><rect x="7.8805%" y="549" width="0.6350%" height="15" fill="rgb(251,47,18)" fg:x="26811051603" fg:w="2160575380"/><text x="8.1305%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,160,575,380 samples, 0.64%)</title><rect x="7.8805%" y="533" width="0.6350%" height="15" fill="rgb(242,102,42)" fg:x="26811051603" fg:w="2160575380"/><text x="8.1305%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,160,575,380 samples, 0.64%)</title><rect x="7.8805%" y="517" width="0.6350%" height="15" fill="rgb(234,31,38)" fg:x="26811051603" fg:w="2160575380"/><text x="8.1305%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (59,798,833 samples, 0.02%)</title><rect x="8.5229%" y="501" width="0.0176%" height="15" fill="rgb(221,117,51)" fg:x="28996700048" fg:w="59798833"/><text x="8.7729%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (59,798,833 samples, 0.02%)</title><rect x="8.5229%" y="485" width="0.0176%" height="15" fill="rgb(212,20,18)" fg:x="28996700048" fg:w="59798833"/><text x="8.7729%" y="495.50"></text></g><g><title>__rustc::__rdl_dealloc (59,798,833 samples, 0.02%)</title><rect x="8.5229%" y="469" width="0.0176%" height="15" fill="rgb(245,133,36)" fg:x="28996700048" fg:w="59798833"/><text x="8.7729%" y="479.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (59,798,833 samples, 0.02%)</title><rect x="8.5229%" y="453" width="0.0176%" height="15" fill="rgb(212,6,19)" fg:x="28996700048" fg:w="59798833"/><text x="8.7729%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt;&gt;&gt; (109,962,241 samples, 0.03%)</title><rect x="8.5158%" y="565" width="0.0323%" height="15" fill="rgb(218,1,36)" fg:x="28972759341" fg:w="109962241"/><text x="8.7658%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt;&gt;&gt; (86,021,534 samples, 0.03%)</title><rect x="8.5229%" y="549" width="0.0253%" height="15" fill="rgb(246,84,54)" fg:x="28996700048" fg:w="86021534"/><text x="8.7729%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86,021,534 samples, 0.03%)</title><rect x="8.5229%" y="533" width="0.0253%" height="15" fill="rgb(242,110,6)" fg:x="28996700048" fg:w="86021534"/><text x="8.7729%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (86,021,534 samples, 0.03%)</title><rect x="8.5229%" y="517" width="0.0253%" height="15" fill="rgb(214,47,5)" fg:x="28996700048" fg:w="86021534"/><text x="8.7729%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(u8,liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode)&gt;&gt; (163,913,787 samples, 0.05%)</title><rect x="8.5482%" y="565" width="0.0482%" height="15" fill="rgb(218,159,25)" fg:x="29082721582" fg:w="163913787"/><text x="8.7982%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57,674,787 samples, 0.02%)</title><rect x="8.5794%" y="549" width="0.0170%" height="15" fill="rgb(215,211,28)" fg:x="29188960582" fg:w="57674787"/><text x="8.8294%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(u8,liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode),alloc::alloc::Global&gt;&gt; (57,674,787 samples, 0.02%)</title><rect x="8.5794%" y="533" width="0.0170%" height="15" fill="rgb(238,59,32)" fg:x="29188960582" fg:w="57674787"/><text x="8.8294%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57,674,787 samples, 0.02%)</title><rect x="8.5794%" y="517" width="0.0170%" height="15" fill="rgb(226,82,3)" fg:x="29188960582" fg:w="57674787"/><text x="8.8294%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u8,liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode)&gt;&gt; (57,674,787 samples, 0.02%)</title><rect x="8.5794%" y="501" width="0.0170%" height="15" fill="rgb(240,164,32)" fg:x="29188960582" fg:w="57674787"/><text x="8.8294%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57,674,787 samples, 0.02%)</title><rect x="8.5794%" y="485" width="0.0170%" height="15" fill="rgb(232,46,7)" fg:x="29188960582" fg:w="57674787"/><text x="8.8294%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (57,674,787 samples, 0.02%)</title><rect x="8.5794%" y="469" width="0.0170%" height="15" fill="rgb(229,129,53)" fg:x="29188960582" fg:w="57674787"/><text x="8.8294%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57,674,787 samples, 0.02%)</title><rect x="8.5794%" y="453" width="0.0170%" height="15" fill="rgb(234,188,29)" fg:x="29188960582" fg:w="57674787"/><text x="8.8294%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (57,674,787 samples, 0.02%)</title><rect x="8.5794%" y="437" width="0.0170%" height="15" fill="rgb(246,141,4)" fg:x="29188960582" fg:w="57674787"/><text x="8.8294%" y="447.50"></text></g><g><title>__rustc::__rdl_dealloc (57,674,787 samples, 0.02%)</title><rect x="8.5794%" y="421" width="0.0170%" height="15" fill="rgb(229,23,39)" fg:x="29188960582" fg:w="57674787"/><text x="8.8294%" y="431.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (57,674,787 samples, 0.02%)</title><rect x="8.5794%" y="405" width="0.0170%" height="15" fill="rgb(206,12,3)" fg:x="29188960582" fg:w="57674787"/><text x="8.8294%" y="415.50"></text></g><g><title>[libc.so.6] (54,510,506 samples, 0.02%)</title><rect x="8.6202%" y="549" width="0.0160%" height="15" fill="rgb(252,226,20)" fg:x="29327740511" fg:w="54510506"/><text x="8.8702%" y="559.50"></text></g><g><title>cfree (372,223,432 samples, 0.11%)</title><rect x="8.6362%" y="549" width="0.1094%" height="15" fill="rgb(216,123,35)" fg:x="29382251017" fg:w="372223432"/><text x="8.8862%" y="559.50"></text></g><g><title>[libc.so.6] (40,963,595 samples, 0.01%)</title><rect x="8.7465%" y="421" width="0.0120%" height="15" fill="rgb(212,68,40)" fg:x="29757613117" fg:w="40963595"/><text x="8.9965%" y="431.50"></text></g><g><title>cfree (251,023,151 samples, 0.07%)</title><rect x="8.7586%" y="421" width="0.0738%" height="15" fill="rgb(254,125,32)" fg:x="29798576712" fg:w="251023151"/><text x="9.0086%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (351,777,918 samples, 0.10%)</title><rect x="8.7465%" y="485" width="0.1034%" height="15" fill="rgb(253,97,22)" fg:x="29757613117" fg:w="351777918"/><text x="8.9965%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (351,777,918 samples, 0.10%)</title><rect x="8.7465%" y="469" width="0.1034%" height="15" fill="rgb(241,101,14)" fg:x="29757613117" fg:w="351777918"/><text x="8.9965%" y="479.50"></text></g><g><title>__rustc::__rdl_dealloc (351,777,918 samples, 0.10%)</title><rect x="8.7465%" y="453" width="0.1034%" height="15" fill="rgb(238,103,29)" fg:x="29757613117" fg:w="351777918"/><text x="8.9965%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (351,777,918 samples, 0.10%)</title><rect x="8.7465%" y="437" width="0.1034%" height="15" fill="rgb(233,195,47)" fg:x="29757613117" fg:w="351777918"/><text x="8.9965%" y="447.50"></text></g><g><title>liblevenshtein::transducer::state::State::insert (59,791,172 samples, 0.02%)</title><rect x="8.8323%" y="421" width="0.0176%" height="15" fill="rgb(246,218,30)" fg:x="30049599863" fg:w="59791172"/><text x="9.0823%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (360,647,027 samples, 0.11%)</title><rect x="8.7465%" y="549" width="0.1060%" height="15" fill="rgb(219,145,47)" fg:x="29757613117" fg:w="360647027"/><text x="8.9965%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (360,647,027 samples, 0.11%)</title><rect x="8.7465%" y="533" width="0.1060%" height="15" fill="rgb(243,12,26)" fg:x="29757613117" fg:w="360647027"/><text x="8.9965%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (360,647,027 samples, 0.11%)</title><rect x="8.7465%" y="517" width="0.1060%" height="15" fill="rgb(214,87,16)" fg:x="29757613117" fg:w="360647027"/><text x="8.9965%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (360,647,027 samples, 0.11%)</title><rect x="8.7465%" y="501" width="0.1060%" height="15" fill="rgb(208,99,42)" fg:x="29757613117" fg:w="360647027"/><text x="8.9965%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (120,822,827 samples, 0.04%)</title><rect x="8.8542%" y="517" width="0.0355%" height="15" fill="rgb(253,99,2)" fg:x="30123962452" fg:w="120822827"/><text x="9.1042%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[liblevenshtein::transducer::state::State]&gt; (120,822,827 samples, 0.04%)</title><rect x="8.8542%" y="501" width="0.0355%" height="15" fill="rgb(220,168,23)" fg:x="30123962452" fg:w="120822827"/><text x="9.1042%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::state::State&gt; (80,818,363 samples, 0.02%)</title><rect x="8.8660%" y="485" width="0.0238%" height="15" fill="rgb(242,38,24)" fg:x="30163966916" fg:w="80818363"/><text x="9.1160%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[liblevenshtein::transducer::position::Position: 8]&gt;&gt; (80,818,363 samples, 0.02%)</title><rect x="8.8660%" y="469" width="0.0238%" height="15" fill="rgb(225,182,9)" fg:x="30163966916" fg:w="80818363"/><text x="9.1160%" y="479.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (80,818,363 samples, 0.02%)</title><rect x="8.8660%" y="453" width="0.0238%" height="15" fill="rgb(243,178,37)" fg:x="30163966916" fg:w="80818363"/><text x="9.1160%" y="463.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (47,626,583 samples, 0.01%)</title><rect x="8.8757%" y="437" width="0.0140%" height="15" fill="rgb(232,139,19)" fg:x="30197158696" fg:w="47626583"/><text x="9.1257%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::query::QueryIterator&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt; (987,721,502 samples, 0.29%)</title><rect x="8.6029%" y="565" width="0.2903%" height="15" fill="rgb(225,201,24)" fg:x="29269096518" fg:w="987721502"/><text x="8.8529%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::pool::StatePool&gt; (138,557,876 samples, 0.04%)</title><rect x="8.8525%" y="549" width="0.0407%" height="15" fill="rgb(221,47,46)" fg:x="30118260144" fg:w="138557876"/><text x="9.1025%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;liblevenshtein::transducer::state::State&gt;&gt; (138,557,876 samples, 0.04%)</title><rect x="8.8525%" y="533" width="0.0407%" height="15" fill="rgb(249,23,13)" fg:x="30118260144" fg:w="138557876"/><text x="9.1025%" y="543.50"></text></g><g><title>core::slice::sort::shared::pivot::median3_rec (157,965,360 samples, 0.05%)</title><rect x="8.8937%" y="565" width="0.0464%" height="15" fill="rgb(219,9,5)" fg:x="30258339222" fg:w="157965360"/><text x="9.1437%" y="575.50"></text></g><g><title>core::slice::sort::shared::pivot::median3 (100,336,464 samples, 0.03%)</title><rect x="8.9106%" y="549" width="0.0295%" height="15" fill="rgb(254,171,16)" fg:x="30315968118" fg:w="100336464"/><text x="9.1606%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (88,488,076 samples, 0.03%)</title><rect x="8.9141%" y="533" width="0.0260%" height="15" fill="rgb(230,171,20)" fg:x="30327816506" fg:w="88488076"/><text x="9.1641%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::lt (88,488,076 samples, 0.03%)</title><rect x="8.9141%" y="517" width="0.0260%" height="15" fill="rgb(210,71,41)" fg:x="30327816506" fg:w="88488076"/><text x="9.1641%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (88,488,076 samples, 0.03%)</title><rect x="8.9141%" y="501" width="0.0260%" height="15" fill="rgb(206,173,20)" fg:x="30327816506" fg:w="88488076"/><text x="9.1641%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (88,488,076 samples, 0.03%)</title><rect x="8.9141%" y="485" width="0.0260%" height="15" fill="rgb(233,88,34)" fg:x="30327816506" fg:w="88488076"/><text x="9.1641%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (88,488,076 samples, 0.03%)</title><rect x="8.9141%" y="469" width="0.0260%" height="15" fill="rgb(223,209,46)" fg:x="30327816506" fg:w="88488076"/><text x="9.1641%" y="479.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (88,488,076 samples, 0.03%)</title><rect x="8.9141%" y="453" width="0.0260%" height="15" fill="rgb(250,43,18)" fg:x="30327816506" fg:w="88488076"/><text x="9.1641%" y="463.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (88,488,076 samples, 0.03%)</title><rect x="8.9141%" y="437" width="0.0260%" height="15" fill="rgb(208,13,10)" fg:x="30327816506" fg:w="88488076"/><text x="9.1641%" y="447.50"></text></g><g><title>[libc.so.6] (57,974,070 samples, 0.02%)</title><rect x="8.9231%" y="421" width="0.0170%" height="15" fill="rgb(212,200,36)" fg:x="30358330512" fg:w="57974070"/><text x="9.1731%" y="431.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (63,577,234 samples, 0.02%)</title><rect x="8.9401%" y="565" width="0.0187%" height="15" fill="rgb(225,90,30)" fg:x="30416304582" fg:w="63577234"/><text x="9.1901%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (61,952,783 samples, 0.02%)</title><rect x="9.0064%" y="517" width="0.0182%" height="15" fill="rgb(236,182,39)" fg:x="30641858137" fg:w="61952783"/><text x="9.2564%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (61,952,783 samples, 0.02%)</title><rect x="9.0064%" y="501" width="0.0182%" height="15" fill="rgb(212,144,35)" fg:x="30641858137" fg:w="61952783"/><text x="9.2564%" y="511.50"></text></g><g><title>core::ptr::copy_nonoverlapping (132,619,658 samples, 0.04%)</title><rect x="9.0246%" y="517" width="0.0390%" height="15" fill="rgb(228,63,44)" fg:x="30703810920" fg:w="132619658"/><text x="9.2746%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (106,235,596 samples, 0.03%)</title><rect x="9.0636%" y="517" width="0.0312%" height="15" fill="rgb(228,109,6)" fg:x="30836430578" fg:w="106235596"/><text x="9.3136%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (469,085,625 samples, 0.14%)</title><rect x="9.1648%" y="453" width="0.1379%" height="15" fill="rgb(238,117,24)" fg:x="31180817276" fg:w="469085625"/><text x="9.4148%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (469,085,625 samples, 0.14%)</title><rect x="9.1648%" y="437" width="0.1379%" height="15" fill="rgb(242,26,26)" fg:x="31180817276" fg:w="469085625"/><text x="9.4148%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (469,085,625 samples, 0.14%)</title><rect x="9.1648%" y="421" width="0.1379%" height="15" fill="rgb(221,92,48)" fg:x="31180817276" fg:w="469085625"/><text x="9.4148%" y="431.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (469,085,625 samples, 0.14%)</title><rect x="9.1648%" y="405" width="0.1379%" height="15" fill="rgb(209,209,32)" fg:x="31180817276" fg:w="469085625"/><text x="9.4148%" y="415.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (469,085,625 samples, 0.14%)</title><rect x="9.1648%" y="389" width="0.1379%" height="15" fill="rgb(221,70,22)" fg:x="31180817276" fg:w="469085625"/><text x="9.4148%" y="399.50"></text></g><g><title>[libc.so.6] (300,729,503 samples, 0.09%)</title><rect x="9.2143%" y="373" width="0.0884%" height="15" fill="rgb(248,145,5)" fg:x="31349173398" fg:w="300729503"/><text x="9.4643%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (510,884,879 samples, 0.15%)</title><rect x="9.1648%" y="485" width="0.1502%" height="15" fill="rgb(226,116,26)" fg:x="31180817276" fg:w="510884879"/><text x="9.4148%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::lt (510,884,879 samples, 0.15%)</title><rect x="9.1648%" y="469" width="0.1502%" height="15" fill="rgb(244,5,17)" fg:x="31180817276" fg:w="510884879"/><text x="9.4148%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (41,799,254 samples, 0.01%)</title><rect x="9.3027%" y="453" width="0.0123%" height="15" fill="rgb(252,159,33)" fg:x="31649902901" fg:w="41799254"/><text x="9.5527%" y="463.50"></text></g><g><title>core::ptr::copy_nonoverlapping (84,763,972 samples, 0.02%)</title><rect x="9.3238%" y="485" width="0.0249%" height="15" fill="rgb(206,71,0)" fg:x="31721515028" fg:w="84763972"/><text x="9.5738%" y="495.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_down (797,376,473 samples, 0.23%)</title><rect x="9.1275%" y="501" width="0.2344%" height="15" fill="rgb(233,118,54)" fg:x="31053914002" fg:w="797376473"/><text x="9.3775%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (45,011,475 samples, 0.01%)</title><rect x="9.3487%" y="485" width="0.0132%" height="15" fill="rgb(234,83,48)" fg:x="31806279000" fg:w="45011475"/><text x="9.5987%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (476,762,532 samples, 0.14%)</title><rect x="9.4085%" y="453" width="0.1401%" height="15" fill="rgb(228,3,54)" fg:x="32009802277" fg:w="476762532"/><text x="9.6585%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (476,762,532 samples, 0.14%)</title><rect x="9.4085%" y="437" width="0.1401%" height="15" fill="rgb(226,155,13)" fg:x="32009802277" fg:w="476762532"/><text x="9.6585%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (476,762,532 samples, 0.14%)</title><rect x="9.4085%" y="421" width="0.1401%" height="15" fill="rgb(241,28,37)" fg:x="32009802277" fg:w="476762532"/><text x="9.6585%" y="431.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (476,762,532 samples, 0.14%)</title><rect x="9.4085%" y="405" width="0.1401%" height="15" fill="rgb(233,93,10)" fg:x="32009802277" fg:w="476762532"/><text x="9.6585%" y="415.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (476,762,532 samples, 0.14%)</title><rect x="9.4085%" y="389" width="0.1401%" height="15" fill="rgb(225,113,19)" fg:x="32009802277" fg:w="476762532"/><text x="9.6585%" y="399.50"></text></g><g><title>[libc.so.6] (358,782,694 samples, 0.11%)</title><rect x="9.4432%" y="373" width="0.1055%" height="15" fill="rgb(241,2,18)" fg:x="32127782115" fg:w="358782694"/><text x="9.6932%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (486,098,257 samples, 0.14%)</title><rect x="9.4085%" y="485" width="0.1429%" height="15" fill="rgb(228,207,21)" fg:x="32009802277" fg:w="486098257"/><text x="9.6585%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::lt (486,098,257 samples, 0.14%)</title><rect x="9.4085%" y="469" width="0.1429%" height="15" fill="rgb(213,211,35)" fg:x="32009802277" fg:w="486098257"/><text x="9.6585%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (69,385,845 samples, 0.02%)</title><rect x="9.5514%" y="485" width="0.0204%" height="15" fill="rgb(209,83,10)" fg:x="32495900534" fg:w="69385845"/><text x="9.8014%" y="495.50"></text></g><g><title>core::ptr::copy_nonoverlapping (72,663,347 samples, 0.02%)</title><rect x="9.5718%" y="485" width="0.0214%" height="15" fill="rgb(209,164,1)" fg:x="32565286379" fg:w="72663347"/><text x="9.8218%" y="495.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (1,698,382,322 samples, 0.50%)</title><rect x="9.0948%" y="517" width="0.4992%" height="15" fill="rgb(213,184,43)" fg:x="30942666174" fg:w="1698382322"/><text x="9.3448%" y="527.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (789,758,021 samples, 0.23%)</title><rect x="9.3619%" y="501" width="0.2321%" height="15" fill="rgb(231,61,34)" fg:x="31851290475" fg:w="789758021"/><text x="9.6119%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (1,253,689,626 samples, 0.37%)</title><rect x="9.6641%" y="469" width="0.3685%" height="15" fill="rgb(235,75,3)" fg:x="32879384732" fg:w="1253689626"/><text x="9.9141%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (1,253,689,626 samples, 0.37%)</title><rect x="9.6641%" y="453" width="0.3685%" height="15" fill="rgb(220,106,47)" fg:x="32879384732" fg:w="1253689626"/><text x="9.9141%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (1,253,689,626 samples, 0.37%)</title><rect x="9.6641%" y="437" width="0.3685%" height="15" fill="rgb(210,196,33)" fg:x="32879384732" fg:w="1253689626"/><text x="9.9141%" y="447.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (1,253,689,626 samples, 0.37%)</title><rect x="9.6641%" y="421" width="0.3685%" height="15" fill="rgb(229,154,42)" fg:x="32879384732" fg:w="1253689626"/><text x="9.9141%" y="431.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,253,689,626 samples, 0.37%)</title><rect x="9.6641%" y="405" width="0.3685%" height="15" fill="rgb(228,114,26)" fg:x="32879384732" fg:w="1253689626"/><text x="9.9141%" y="415.50"></text></g><g><title>[libc.so.6] (888,163,913 samples, 0.26%)</title><rect x="9.7715%" y="389" width="0.2611%" height="15" fill="rgb(208,144,1)" fg:x="33244910445" fg:w="888163913"/><text x="10.0215%" y="399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,265,874,192 samples, 0.37%)</title><rect x="9.6641%" y="501" width="0.3721%" height="15" fill="rgb(239,112,37)" fg:x="32879384732" fg:w="1265874192"/><text x="9.9141%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::lt (1,265,874,192 samples, 0.37%)</title><rect x="9.6641%" y="485" width="0.3721%" height="15" fill="rgb(210,96,50)" fg:x="32879384732" fg:w="1265874192"/><text x="9.9141%" y="495.50"></text></g><g><title>core::ptr::copy_nonoverlapping (36,560,498 samples, 0.01%)</title><rect x="10.0362%" y="501" width="0.0107%" height="15" fill="rgb(222,178,2)" fg:x="34145258924" fg:w="36560498"/><text x="10.2862%" y="511.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::StableSmallSortTypeImpl&gt;::small_sort (3,682,220,788 samples, 1.08%)</title><rect x="8.9711%" y="549" width="1.0823%" height="15" fill="rgb(226,74,18)" fg:x="30521565548" fg:w="3682220788"/><text x="9.2211%" y="559.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (3,682,220,788 samples, 1.08%)</title><rect x="8.9711%" y="533" width="1.0823%" height="15" fill="rgb(225,67,54)" fg:x="30521565548" fg:w="3682220788"/><text x="9.2211%" y="543.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (1,562,737,840 samples, 0.46%)</title><rect x="9.5940%" y="517" width="0.4593%" height="15" fill="rgb(251,92,32)" fg:x="32641048496" fg:w="1562737840"/><text x="9.8440%" y="527.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (3,907,446,641 samples, 1.15%)</title><rect x="8.9588%" y="565" width="1.1485%" height="15" fill="rgb(228,149,22)" fg:x="30479881816" fg:w="3907446641"/><text x="9.2088%" y="575.50"></text></g><g><title>core::slice::sort::shared::pivot::choose_pivot (177,055,691 samples, 0.05%)</title><rect x="10.0553%" y="549" width="0.0520%" height="15" fill="rgb(243,54,13)" fg:x="34210272766" fg:w="177055691"/><text x="10.3053%" y="559.50"></text></g><g><title>core::slice::sort::shared::pivot::median3 (134,363,748 samples, 0.04%)</title><rect x="10.0678%" y="533" width="0.0395%" height="15" fill="rgb(243,180,28)" fg:x="34252964709" fg:w="134363748"/><text x="10.3178%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (131,538,095 samples, 0.04%)</title><rect x="10.0687%" y="517" width="0.0387%" height="15" fill="rgb(208,167,24)" fg:x="34255790362" fg:w="131538095"/><text x="10.3187%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::lt (131,538,095 samples, 0.04%)</title><rect x="10.0687%" y="501" width="0.0387%" height="15" fill="rgb(245,73,45)" fg:x="34255790362" fg:w="131538095"/><text x="10.3187%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (131,538,095 samples, 0.04%)</title><rect x="10.0687%" y="485" width="0.0387%" height="15" fill="rgb(237,203,48)" fg:x="34255790362" fg:w="131538095"/><text x="10.3187%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (131,538,095 samples, 0.04%)</title><rect x="10.0687%" y="469" width="0.0387%" height="15" fill="rgb(211,197,16)" fg:x="34255790362" fg:w="131538095"/><text x="10.3187%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (131,538,095 samples, 0.04%)</title><rect x="10.0687%" y="453" width="0.0387%" height="15" fill="rgb(243,99,51)" fg:x="34255790362" fg:w="131538095"/><text x="10.3187%" y="463.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (131,538,095 samples, 0.04%)</title><rect x="10.0687%" y="437" width="0.0387%" height="15" fill="rgb(215,123,29)" fg:x="34255790362" fg:w="131538095"/><text x="10.3187%" y="447.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (131,538,095 samples, 0.04%)</title><rect x="10.0687%" y="421" width="0.0387%" height="15" fill="rgb(239,186,37)" fg:x="34255790362" fg:w="131538095"/><text x="10.3187%" y="431.50"></text></g><g><title>[libc.so.6] (94,396,045 samples, 0.03%)</title><rect x="10.0796%" y="405" width="0.0277%" height="15" fill="rgb(252,136,39)" fg:x="34292932412" fg:w="94396045"/><text x="10.3296%" y="415.50"></text></g><g><title>criterion::stats::univariate::percentiles::Percentiles&lt;A&gt;::median (38,891,401 samples, 0.01%)</title><rect x="10.1161%" y="549" width="0.0114%" height="15" fill="rgb(223,213,32)" fg:x="34417224891" fg:w="38891401"/><text x="10.3661%" y="559.50"></text></g><g><title>criterion::stats::univariate::percentiles::Percentiles&lt;A&gt;::at (38,891,401 samples, 0.01%)</title><rect x="10.1161%" y="533" width="0.0114%" height="15" fill="rgb(233,115,5)" fg:x="34417224891" fg:w="38891401"/><text x="10.3661%" y="543.50"></text></g><g><title>criterion::stats::univariate::percentiles::Percentiles&lt;A&gt;::at_unchecked (38,891,401 samples, 0.01%)</title><rect x="10.1161%" y="517" width="0.0114%" height="15" fill="rgb(207,226,44)" fg:x="34417224891" fg:w="38891401"/><text x="10.3661%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (278,295,296 samples, 0.08%)</title><rect x="10.1305%" y="453" width="0.0818%" height="15" fill="rgb(208,126,0)" fg:x="34466266098" fg:w="278295296"/><text x="10.3805%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (278,295,296 samples, 0.08%)</title><rect x="10.1305%" y="437" width="0.0818%" height="15" fill="rgb(244,66,21)" fg:x="34466266098" fg:w="278295296"/><text x="10.3805%" y="447.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (278,295,296 samples, 0.08%)</title><rect x="10.1305%" y="421" width="0.0818%" height="15" fill="rgb(222,97,12)" fg:x="34466266098" fg:w="278295296"/><text x="10.3805%" y="431.50"></text></g><g><title>criterion::analysis::compare::estimates::stats (362,525,365 samples, 0.11%)</title><rect x="10.1073%" y="565" width="0.1066%" height="15" fill="rgb(219,213,19)" fg:x="34387328457" fg:w="362525365"/><text x="10.3573%" y="575.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (293,737,530 samples, 0.09%)</title><rect x="10.1275%" y="549" width="0.0863%" height="15" fill="rgb(252,169,30)" fg:x="34456116292" fg:w="293737530"/><text x="10.3775%" y="559.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (291,236,640 samples, 0.09%)</title><rect x="10.1283%" y="533" width="0.0856%" height="15" fill="rgb(206,32,51)" fg:x="34458617182" fg:w="291236640"/><text x="10.3783%" y="543.50"></text></g><g><title>criterion::stats::sum (291,236,640 samples, 0.09%)</title><rect x="10.1283%" y="517" width="0.0856%" height="15" fill="rgb(250,172,42)" fg:x="34458617182" fg:w="291236640"/><text x="10.3783%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (291,236,640 samples, 0.09%)</title><rect x="10.1283%" y="501" width="0.0856%" height="15" fill="rgb(209,34,43)" fg:x="34458617182" fg:w="291236640"/><text x="10.3783%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (291,236,640 samples, 0.09%)</title><rect x="10.1283%" y="485" width="0.0856%" height="15" fill="rgb(223,11,35)" fg:x="34458617182" fg:w="291236640"/><text x="10.3783%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (291,236,640 samples, 0.09%)</title><rect x="10.1283%" y="469" width="0.0856%" height="15" fill="rgb(251,219,26)" fg:x="34458617182" fg:w="291236640"/><text x="10.3783%" y="479.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (52,401,403 samples, 0.02%)</title><rect x="10.2182%" y="549" width="0.0154%" height="15" fill="rgb(231,119,3)" fg:x="34764703615" fg:w="52401403"/><text x="10.4682%" y="559.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (50,168,450 samples, 0.01%)</title><rect x="10.2189%" y="533" width="0.0147%" height="15" fill="rgb(216,97,11)" fg:x="34766936568" fg:w="50168450"/><text x="10.4689%" y="543.50"></text></g><g><title>criterion::stats::sum (50,168,450 samples, 0.01%)</title><rect x="10.2189%" y="517" width="0.0147%" height="15" fill="rgb(223,59,9)" fg:x="34766936568" fg:w="50168450"/><text x="10.4689%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50,168,450 samples, 0.01%)</title><rect x="10.2189%" y="501" width="0.0147%" height="15" fill="rgb(233,93,31)" fg:x="34766936568" fg:w="50168450"/><text x="10.4689%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50,168,450 samples, 0.01%)</title><rect x="10.2189%" y="485" width="0.0147%" height="15" fill="rgb(239,81,33)" fg:x="34766936568" fg:w="50168450"/><text x="10.4689%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50,168,450 samples, 0.01%)</title><rect x="10.2189%" y="469" width="0.0147%" height="15" fill="rgb(213,120,34)" fg:x="34766936568" fg:w="50168450"/><text x="10.4689%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (47,722,909 samples, 0.01%)</title><rect x="10.2196%" y="453" width="0.0140%" height="15" fill="rgb(243,49,53)" fg:x="34769382109" fg:w="47722909"/><text x="10.4696%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (47,722,909 samples, 0.01%)</title><rect x="10.2196%" y="437" width="0.0140%" height="15" fill="rgb(247,216,33)" fg:x="34769382109" fg:w="47722909"/><text x="10.4696%" y="447.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (47,722,909 samples, 0.01%)</title><rect x="10.2196%" y="421" width="0.0140%" height="15" fill="rgb(226,26,14)" fg:x="34769382109" fg:w="47722909"/><text x="10.4696%" y="431.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::new (40,360,354 samples, 0.01%)</title><rect x="10.2494%" y="533" width="0.0119%" height="15" fill="rgb(215,49,53)" fg:x="34870682189" fg:w="40360354"/><text x="10.4994%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (40,360,354 samples, 0.01%)</title><rect x="10.2494%" y="517" width="0.0119%" height="15" fill="rgb(245,162,40)" fg:x="34870682189" fg:w="40360354"/><text x="10.4994%" y="527.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (96,503,147 samples, 0.03%)</title><rect x="10.2336%" y="549" width="0.0284%" height="15" fill="rgb(229,68,17)" fg:x="34817105018" fg:w="96503147"/><text x="10.4836%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (77,103,732 samples, 0.02%)</title><rect x="10.2653%" y="469" width="0.0227%" height="15" fill="rgb(213,182,10)" fg:x="34924954526" fg:w="77103732"/><text x="10.5153%" y="479.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (77,103,732 samples, 0.02%)</title><rect x="10.2653%" y="453" width="0.0227%" height="15" fill="rgb(245,125,30)" fg:x="34924954526" fg:w="77103732"/><text x="10.5153%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100,954,625 samples, 0.03%)</title><rect x="10.2631%" y="517" width="0.0297%" height="15" fill="rgb(232,202,2)" fg:x="34917455358" fg:w="100954625"/><text x="10.5131%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100,954,625 samples, 0.03%)</title><rect x="10.2631%" y="501" width="0.0297%" height="15" fill="rgb(237,140,51)" fg:x="34917455358" fg:w="100954625"/><text x="10.5131%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (93,455,457 samples, 0.03%)</title><rect x="10.2653%" y="485" width="0.0275%" height="15" fill="rgb(236,157,25)" fg:x="34924954526" fg:w="93455457"/><text x="10.5153%" y="495.50"></text></g><g><title>criterion::analysis::estimates::stats (272,381,148 samples, 0.08%)</title><rect x="10.2149%" y="565" width="0.0801%" height="15" fill="rgb(219,209,0)" fg:x="34753382593" fg:w="272381148"/><text x="10.4649%" y="575.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::std_dev (110,438,392 samples, 0.03%)</title><rect x="10.2625%" y="549" width="0.0325%" height="15" fill="rgb(240,116,54)" fg:x="34915325349" fg:w="110438392"/><text x="10.5125%" y="559.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var (108,308,383 samples, 0.03%)</title><rect x="10.2631%" y="533" width="0.0318%" height="15" fill="rgb(216,10,36)" fg:x="34917455358" fg:w="108308383"/><text x="10.5131%" y="543.50"></text></g><g><title>backend_comparison::bench_contains_operation::{{closure}}::{{closure}} (58,230,191 samples, 0.02%)</title><rect x="10.2981%" y="549" width="0.0171%" height="15" fill="rgb(222,72,44)" fg:x="35036329813" fg:w="58230191"/><text x="10.5481%" y="559.50"></text></g><g><title>backend_comparison::bench_distance_1_matching::{{closure}}::{{closure}} (86,738,312 samples, 0.03%)</title><rect x="10.3152%" y="549" width="0.0255%" height="15" fill="rgb(232,159,9)" fg:x="35094560004" fg:w="86738312"/><text x="10.5652%" y="559.50"></text></g><g><title>backend_comparison::bench_exact_matching::{{closure}}::{{closure}} (74,150,226 samples, 0.02%)</title><rect x="10.3435%" y="549" width="0.0218%" height="15" fill="rgb(210,39,32)" fg:x="35190704742" fg:w="74150226"/><text x="10.5935%" y="559.50"></text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (234,195,733 samples, 0.07%)</title><rect x="10.2973%" y="565" width="0.0688%" height="15" fill="rgb(216,194,45)" fg:x="35033555571" fg:w="234195733"/><text x="10.5473%" y="575.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (84,948,512 samples, 0.02%)</title><rect x="10.3688%" y="501" width="0.0250%" height="15" fill="rgb(218,18,35)" fg:x="35276940471" fg:w="84948512"/><text x="10.6188%" y="511.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (83,301,418 samples, 0.02%)</title><rect x="10.3693%" y="485" width="0.0245%" height="15" fill="rgb(207,83,51)" fg:x="35278587565" fg:w="83301418"/><text x="10.6193%" y="495.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (83,301,418 samples, 0.02%)</title><rect x="10.3693%" y="469" width="0.0245%" height="15" fill="rgb(225,63,43)" fg:x="35278587565" fg:w="83301418"/><text x="10.6193%" y="479.50"></text></g><g><title>exp (77,870,477 samples, 0.02%)</title><rect x="10.3709%" y="453" width="0.0229%" height="15" fill="rgb(207,57,36)" fg:x="35284018506" fg:w="77870477"/><text x="10.6209%" y="463.50"></text></g><g><title>[libm.so.6] (51,221,077 samples, 0.02%)</title><rect x="10.3787%" y="437" width="0.0151%" height="15" fill="rgb(216,99,33)" fg:x="35310667906" fg:w="51221077"/><text x="10.6287%" y="447.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (90,489,806 samples, 0.03%)</title><rect x="10.3688%" y="549" width="0.0266%" height="15" fill="rgb(225,42,16)" fg:x="35276940471" fg:w="90489806"/><text x="10.6188%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (90,489,806 samples, 0.03%)</title><rect x="10.3688%" y="533" width="0.0266%" height="15" fill="rgb(220,201,45)" fg:x="35276940471" fg:w="90489806"/><text x="10.6188%" y="543.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (90,489,806 samples, 0.03%)</title><rect x="10.3688%" y="517" width="0.0266%" height="15" fill="rgb(225,33,4)" fg:x="35276940471" fg:w="90489806"/><text x="10.6188%" y="527.50"></text></g><g><title>criterion::kde::sweep_and_estimate (117,816,936 samples, 0.03%)</title><rect x="10.3688%" y="565" width="0.0346%" height="15" fill="rgb(224,33,50)" fg:x="35276940471" fg:w="117816936"/><text x="10.6188%" y="575.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_add (92,029,137 samples, 0.03%)</title><rect x="10.4935%" y="517" width="0.0270%" height="15" fill="rgb(246,198,51)" fg:x="35701367164" fg:w="92029137"/><text x="10.7435%" y="527.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (60,116,963 samples, 0.02%)</title><rect x="10.5206%" y="517" width="0.0177%" height="15" fill="rgb(205,22,4)" fg:x="35793396301" fg:w="60116963"/><text x="10.7706%" y="527.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (470,151,614 samples, 0.14%)</title><rect x="10.4038%" y="565" width="0.1382%" height="15" fill="rgb(206,3,8)" fg:x="35396036381" fg:w="470151614"/><text x="10.6538%" y="575.50"></text></g><g><title>oorandom::Rand64::rand_range (335,765,464 samples, 0.10%)</title><rect x="10.4433%" y="549" width="0.0987%" height="15" fill="rgb(251,23,15)" fg:x="35530422531" fg:w="335765464"/><text x="10.6933%" y="559.50"></text></g><g><title>oorandom::Rand64::rand_u64 (300,415,395 samples, 0.09%)</title><rect x="10.4537%" y="533" width="0.0883%" height="15" fill="rgb(252,88,28)" fg:x="35565772600" fg:w="300415395"/><text x="10.7037%" y="543.50"></text></g><g><title>core::ptr::copy_nonoverlapping (36,312,554 samples, 0.01%)</title><rect x="10.5420%" y="501" width="0.0107%" height="15" fill="rgb(212,127,14)" fg:x="35866187995" fg:w="36312554"/><text x="10.7920%" y="511.50"></text></g><g><title>[libc.so.6] (34,287,466 samples, 0.01%)</title><rect x="10.5426%" y="485" width="0.0101%" height="15" fill="rgb(247,145,37)" fg:x="35868213083" fg:w="34287466"/><text x="10.7926%" y="495.50"></text></g><g><title>&lt;(alloc::vec::Vec&lt;A&gt;,alloc::vec::Vec&lt;B&gt;,alloc::vec::Vec&lt;C&gt;,alloc::vec::Vec&lt;D&gt;) as criterion::stats::tuple::TupledDistributionsBuilder&gt;::extend (37,697,324 samples, 0.01%)</title><rect x="10.5420%" y="549" width="0.0111%" height="15" fill="rgb(209,117,53)" fg:x="35866187995" fg:w="37697324"/><text x="10.7920%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (37,697,324 samples, 0.01%)</title><rect x="10.5420%" y="533" width="0.0111%" height="15" fill="rgb(212,90,42)" fg:x="35866187995" fg:w="37697324"/><text x="10.7920%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (37,697,324 samples, 0.01%)</title><rect x="10.5420%" y="517" width="0.0111%" height="15" fill="rgb(218,164,37)" fg:x="35866187995" fg:w="37697324"/><text x="10.7920%" y="527.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (76,077,594 samples, 0.02%)</title><rect x="10.5420%" y="565" width="0.0224%" height="15" fill="rgb(246,65,34)" fg:x="35866187995" fg:w="76077594"/><text x="10.7920%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;f64&gt;,alloc::vec::Vec&lt;f64&gt;,alloc::vec::Vec&lt;f64&gt;,alloc::vec::Vec&lt;f64&gt;)&gt; (38,380,270 samples, 0.01%)</title><rect x="10.5531%" y="549" width="0.0113%" height="15" fill="rgb(231,100,33)" fg:x="35903885319" fg:w="38380270"/><text x="10.8031%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (38,380,270 samples, 0.01%)</title><rect x="10.5531%" y="533" width="0.0113%" height="15" fill="rgb(228,126,14)" fg:x="35903885319" fg:w="38380270"/><text x="10.8031%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (38,380,270 samples, 0.01%)</title><rect x="10.5531%" y="517" width="0.0113%" height="15" fill="rgb(215,173,21)" fg:x="35903885319" fg:w="38380270"/><text x="10.8031%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38,380,270 samples, 0.01%)</title><rect x="10.5531%" y="501" width="0.0113%" height="15" fill="rgb(210,6,40)" fg:x="35903885319" fg:w="38380270"/><text x="10.8031%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (38,380,270 samples, 0.01%)</title><rect x="10.5531%" y="485" width="0.0113%" height="15" fill="rgb(212,48,18)" fg:x="35903885319" fg:w="38380270"/><text x="10.8031%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38,380,270 samples, 0.01%)</title><rect x="10.5531%" y="469" width="0.0113%" height="15" fill="rgb(230,214,11)" fg:x="35903885319" fg:w="38380270"/><text x="10.8031%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (38,380,270 samples, 0.01%)</title><rect x="10.5531%" y="453" width="0.0113%" height="15" fill="rgb(254,105,39)" fg:x="35903885319" fg:w="38380270"/><text x="10.8031%" y="463.50"></text></g><g><title>__rustc::__rdl_dealloc (38,380,270 samples, 0.01%)</title><rect x="10.5531%" y="437" width="0.0113%" height="15" fill="rgb(245,158,5)" fg:x="35903885319" fg:w="38380270"/><text x="10.8031%" y="447.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (38,380,270 samples, 0.01%)</title><rect x="10.5531%" y="421" width="0.0113%" height="15" fill="rgb(249,208,11)" fg:x="35903885319" fg:w="38380270"/><text x="10.8031%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35,606,747 samples, 0.01%)</title><rect x="10.5657%" y="501" width="0.0105%" height="15" fill="rgb(210,39,28)" fg:x="35946865238" fg:w="35606747"/><text x="10.8157%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35,606,747 samples, 0.01%)</title><rect x="10.5657%" y="485" width="0.0105%" height="15" fill="rgb(211,56,53)" fg:x="35946865238" fg:w="35606747"/><text x="10.8157%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (35,606,747 samples, 0.01%)</title><rect x="10.5657%" y="469" width="0.0105%" height="15" fill="rgb(226,201,30)" fg:x="35946865238" fg:w="35606747"/><text x="10.8157%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (35,606,747 samples, 0.01%)</title><rect x="10.5657%" y="453" width="0.0105%" height="15" fill="rgb(239,101,34)" fg:x="35946865238" fg:w="35606747"/><text x="10.8157%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (63,809,297 samples, 0.02%)</title><rect x="10.5657%" y="549" width="0.0188%" height="15" fill="rgb(226,209,5)" fg:x="35946865238" fg:w="63809297"/><text x="10.8157%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63,809,297 samples, 0.02%)</title><rect x="10.5657%" y="533" width="0.0188%" height="15" fill="rgb(250,105,47)" fg:x="35946865238" fg:w="63809297"/><text x="10.8157%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (63,809,297 samples, 0.02%)</title><rect x="10.5657%" y="517" width="0.0188%" height="15" fill="rgb(230,72,3)" fg:x="35946865238" fg:w="63809297"/><text x="10.8157%" y="527.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (75,322,436 samples, 0.02%)</title><rect x="10.5644%" y="565" width="0.0221%" height="15" fill="rgb(232,218,39)" fg:x="35942265589" fg:w="75322436"/><text x="10.8144%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicIsize::compare_exchange (43,125,051 samples, 0.01%)</title><rect x="10.6117%" y="549" width="0.0127%" height="15" fill="rgb(248,166,6)" fg:x="36103279477" fg:w="43125051"/><text x="10.8617%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43,125,051 samples, 0.01%)</title><rect x="10.6117%" y="533" width="0.0127%" height="15" fill="rgb(247,89,20)" fg:x="36103279477" fg:w="43125051"/><text x="10.8617%" y="543.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (118,559,501 samples, 0.03%)</title><rect x="10.5898%" y="565" width="0.0348%" height="15" fill="rgb(248,130,54)" fg:x="36028848035" fg:w="118559501"/><text x="10.8398%" y="575.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (244,303,433 samples, 0.07%)</title><rect x="10.6501%" y="469" width="0.0718%" height="15" fill="rgb(234,196,4)" fg:x="36233928653" fg:w="244303433"/><text x="10.9001%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (244,303,433 samples, 0.07%)</title><rect x="10.6501%" y="453" width="0.0718%" height="15" fill="rgb(250,143,31)" fg:x="36233928653" fg:w="244303433"/><text x="10.9001%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (244,303,433 samples, 0.07%)</title><rect x="10.6501%" y="437" width="0.0718%" height="15" fill="rgb(211,110,34)" fg:x="36233928653" fg:w="244303433"/><text x="10.9001%" y="447.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (79,303,185 samples, 0.02%)</title><rect x="10.7219%" y="469" width="0.0233%" height="15" fill="rgb(215,124,48)" fg:x="36478232086" fg:w="79303185"/><text x="10.9719%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (79,303,185 samples, 0.02%)</title><rect x="10.7219%" y="453" width="0.0233%" height="15" fill="rgb(216,46,13)" fg:x="36478232086" fg:w="79303185"/><text x="10.9719%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (79,303,185 samples, 0.02%)</title><rect x="10.7219%" y="437" width="0.0233%" height="15" fill="rgb(205,184,25)" fg:x="36478232086" fg:w="79303185"/><text x="10.9719%" y="447.50"></text></g><g><title>crossbeam_epoch::default::with_handle (414,895,039 samples, 0.12%)</title><rect x="10.6247%" y="565" width="0.1219%" height="15" fill="rgb(228,1,10)" fg:x="36147407536" fg:w="414895039"/><text x="10.8747%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (414,895,039 samples, 0.12%)</title><rect x="10.6247%" y="549" width="0.1219%" height="15" fill="rgb(213,116,27)" fg:x="36147407536" fg:w="414895039"/><text x="10.8747%" y="559.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (357,741,046 samples, 0.11%)</title><rect x="10.6414%" y="533" width="0.1051%" height="15" fill="rgb(241,95,50)" fg:x="36204561529" fg:w="357741046"/><text x="10.8914%" y="543.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (357,741,046 samples, 0.11%)</title><rect x="10.6414%" y="517" width="0.1051%" height="15" fill="rgb(238,48,32)" fg:x="36204561529" fg:w="357741046"/><text x="10.8914%" y="527.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (357,741,046 samples, 0.11%)</title><rect x="10.6414%" y="501" width="0.1051%" height="15" fill="rgb(235,113,49)" fg:x="36204561529" fg:w="357741046"/><text x="10.8914%" y="511.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (357,741,046 samples, 0.11%)</title><rect x="10.6414%" y="485" width="0.1051%" height="15" fill="rgb(205,127,43)" fg:x="36204561529" fg:w="357741046"/><text x="10.8914%" y="495.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (483,525,624 samples, 0.14%)</title><rect x="10.7489%" y="565" width="0.1421%" height="15" fill="rgb(250,162,2)" fg:x="36570246946" fg:w="483525624"/><text x="10.9989%" y="575.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (424,490,343 samples, 0.12%)</title><rect x="10.7663%" y="549" width="0.1248%" height="15" fill="rgb(220,13,41)" fg:x="36629282227" fg:w="424490343"/><text x="11.0163%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (424,490,343 samples, 0.12%)</title><rect x="10.7663%" y="533" width="0.1248%" height="15" fill="rgb(249,221,25)" fg:x="36629282227" fg:w="424490343"/><text x="11.0163%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (424,490,343 samples, 0.12%)</title><rect x="10.7663%" y="517" width="0.1248%" height="15" fill="rgb(215,208,19)" fg:x="36629282227" fg:w="424490343"/><text x="11.0163%" y="527.50"></text></g><g><title>exp (5,686,062,757 samples, 1.67%)</title><rect x="10.8911%" y="565" width="1.6713%" height="15" fill="rgb(236,175,2)" fg:x="37053772570" fg:w="5686062757"/><text x="11.1411%" y="575.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (57,137,604 samples, 0.02%)</title><rect x="12.5758%" y="533" width="0.0168%" height="15" fill="rgb(241,52,2)" fg:x="42785605211" fg:w="57137604"/><text x="12.8258%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (222,108,522 samples, 0.07%)</title><rect x="12.5758%" y="549" width="0.0653%" height="15" fill="rgb(248,140,14)" fg:x="42785605211" fg:w="222108522"/><text x="12.8258%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (164,970,918 samples, 0.05%)</title><rect x="12.5926%" y="533" width="0.0485%" height="15" fill="rgb(253,22,42)" fg:x="42842742815" fg:w="164970918"/><text x="12.8426%" y="543.50"></text></g><g><title>core::ptr::read (164,970,918 samples, 0.05%)</title><rect x="12.5926%" y="517" width="0.0485%" height="15" fill="rgb(234,61,47)" fg:x="42842742815" fg:w="164970918"/><text x="12.8426%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (926,842,547 samples, 0.27%)</title><rect x="12.6820%" y="197" width="0.2724%" height="15" fill="rgb(208,226,15)" fg:x="43147066214" fg:w="926842547"/><text x="12.9320%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (926,842,547 samples, 0.27%)</title><rect x="12.6820%" y="181" width="0.2724%" height="15" fill="rgb(217,221,4)" fg:x="43147066214" fg:w="926842547"/><text x="12.9320%" y="191.50"></text></g><g><title>alloc::alloc::alloc (926,842,547 samples, 0.27%)</title><rect x="12.6820%" y="165" width="0.2724%" height="15" fill="rgb(212,174,34)" fg:x="43147066214" fg:w="926842547"/><text x="12.9320%" y="175.50"></text></g><g><title>__rustc::__rdl_alloc (926,842,547 samples, 0.27%)</title><rect x="12.6820%" y="149" width="0.2724%" height="15" fill="rgb(253,83,4)" fg:x="43147066214" fg:w="926842547"/><text x="12.9320%" y="159.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (926,842,547 samples, 0.27%)</title><rect x="12.6820%" y="133" width="0.2724%" height="15" fill="rgb(250,195,49)" fg:x="43147066214" fg:w="926842547"/><text x="12.9320%" y="143.50"></text></g><g><title>malloc (845,714,867 samples, 0.25%)</title><rect x="12.7059%" y="117" width="0.2486%" height="15" fill="rgb(241,192,25)" fg:x="43228193894" fg:w="845714867"/><text x="12.9559%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (983,466,281 samples, 0.29%)</title><rect x="12.6812%" y="261" width="0.2891%" height="15" fill="rgb(208,124,10)" fg:x="43144326249" fg:w="983466281"/><text x="12.9312%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (983,466,281 samples, 0.29%)</title><rect x="12.6812%" y="245" width="0.2891%" height="15" fill="rgb(222,33,0)" fg:x="43144326249" fg:w="983466281"/><text x="12.9312%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (983,466,281 samples, 0.29%)</title><rect x="12.6812%" y="229" width="0.2891%" height="15" fill="rgb(234,209,28)" fg:x="43144326249" fg:w="983466281"/><text x="12.9312%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (983,466,281 samples, 0.29%)</title><rect x="12.6812%" y="213" width="0.2891%" height="15" fill="rgb(224,11,23)" fg:x="43144326249" fg:w="983466281"/><text x="12.9312%" y="223.50"></text></g><g><title>alloc::raw_vec::layout_array (53,883,769 samples, 0.02%)</title><rect x="12.9545%" y="197" width="0.0158%" height="15" fill="rgb(232,99,1)" fg:x="44073908761" fg:w="53883769"/><text x="13.2045%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::repeat (53,883,769 samples, 0.02%)</title><rect x="12.9545%" y="181" width="0.0158%" height="15" fill="rgb(237,95,45)" fg:x="44073908761" fg:w="53883769"/><text x="13.2045%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (53,883,769 samples, 0.02%)</title><rect x="12.9545%" y="165" width="0.0158%" height="15" fill="rgb(208,109,11)" fg:x="44073908761" fg:w="53883769"/><text x="13.2045%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (53,883,769 samples, 0.02%)</title><rect x="12.9545%" y="149" width="0.0158%" height="15" fill="rgb(216,190,48)" fg:x="44073908761" fg:w="53883769"/><text x="13.2045%" y="159.50"></text></g><g><title>core::intrinsics::unlikely (53,883,769 samples, 0.02%)</title><rect x="12.9545%" y="133" width="0.0158%" height="15" fill="rgb(251,171,36)" fg:x="44073908761" fg:w="53883769"/><text x="13.2045%" y="143.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,464,729,847 samples, 0.43%)</title><rect x="12.6812%" y="389" width="0.4305%" height="15" fill="rgb(230,62,22)" fg:x="43144326249" fg:w="1464729847"/><text x="12.9312%" y="399.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,464,729,847 samples, 0.43%)</title><rect x="12.6812%" y="373" width="0.4305%" height="15" fill="rgb(225,114,35)" fg:x="43144326249" fg:w="1464729847"/><text x="12.9312%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,464,729,847 samples, 0.43%)</title><rect x="12.6812%" y="357" width="0.4305%" height="15" fill="rgb(215,118,42)" fg:x="43144326249" fg:w="1464729847"/><text x="12.9312%" y="367.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,464,729,847 samples, 0.43%)</title><rect x="12.6812%" y="341" width="0.4305%" height="15" fill="rgb(243,119,21)" fg:x="43144326249" fg:w="1464729847"/><text x="12.9312%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,464,729,847 samples, 0.43%)</title><rect x="12.6812%" y="325" width="0.4305%" height="15" fill="rgb(252,177,53)" fg:x="43144326249" fg:w="1464729847"/><text x="12.9312%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,464,729,847 samples, 0.43%)</title><rect x="12.6812%" y="309" width="0.4305%" height="15" fill="rgb(237,209,29)" fg:x="43144326249" fg:w="1464729847"/><text x="12.9312%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,464,729,847 samples, 0.43%)</title><rect x="12.6812%" y="293" width="0.4305%" height="15" fill="rgb(212,65,23)" fg:x="43144326249" fg:w="1464729847"/><text x="12.9312%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,464,729,847 samples, 0.43%)</title><rect x="12.6812%" y="277" width="0.4305%" height="15" fill="rgb(230,222,46)" fg:x="43144326249" fg:w="1464729847"/><text x="12.9312%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (481,263,566 samples, 0.14%)</title><rect x="12.9703%" y="261" width="0.1415%" height="15" fill="rgb(215,135,32)" fg:x="44127792530" fg:w="481263566"/><text x="13.2203%" y="271.50"></text></g><g><title>core::ptr::copy_nonoverlapping (481,263,566 samples, 0.14%)</title><rect x="12.9703%" y="245" width="0.1415%" height="15" fill="rgb(246,101,22)" fg:x="44127792530" fg:w="481263566"/><text x="13.2203%" y="255.50"></text></g><g><title>[libc.so.6] (389,322,538 samples, 0.11%)</title><rect x="12.9973%" y="229" width="0.1144%" height="15" fill="rgb(206,107,13)" fg:x="44219733558" fg:w="389322538"/><text x="13.2473%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,529,285,592 samples, 0.74%)</title><rect x="12.6651%" y="421" width="0.7434%" height="15" fill="rgb(250,100,44)" fg:x="43089558213" fg:w="2529285592"/><text x="12.9151%" y="431.50"></text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrie::from_terms::{{closure}} (2,474,517,556 samples, 0.73%)</title><rect x="12.6812%" y="405" width="0.7273%" height="15" fill="rgb(231,147,38)" fg:x="43144326249" fg:w="2474517556"/><text x="12.9312%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,009,787,709 samples, 0.30%)</title><rect x="13.1117%" y="389" width="0.2968%" height="15" fill="rgb(229,8,40)" fg:x="44609056096" fg:w="1009787709"/><text x="13.3617%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,009,787,709 samples, 0.30%)</title><rect x="13.1117%" y="373" width="0.2968%" height="15" fill="rgb(221,135,30)" fg:x="44609056096" fg:w="1009787709"/><text x="13.3617%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,009,787,709 samples, 0.30%)</title><rect x="13.1117%" y="357" width="0.2968%" height="15" fill="rgb(249,193,18)" fg:x="44609056096" fg:w="1009787709"/><text x="13.3617%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,009,787,709 samples, 0.30%)</title><rect x="13.1117%" y="341" width="0.2968%" height="15" fill="rgb(209,133,39)" fg:x="44609056096" fg:w="1009787709"/><text x="13.3617%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,009,787,709 samples, 0.30%)</title><rect x="13.1117%" y="325" width="0.2968%" height="15" fill="rgb(232,100,14)" fg:x="44609056096" fg:w="1009787709"/><text x="13.3617%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (933,962,706 samples, 0.27%)</title><rect x="13.1340%" y="309" width="0.2745%" height="15" fill="rgb(224,185,1)" fg:x="44684881099" fg:w="933962706"/><text x="13.3840%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (933,962,706 samples, 0.27%)</title><rect x="13.1340%" y="293" width="0.2745%" height="15" fill="rgb(223,139,8)" fg:x="44684881099" fg:w="933962706"/><text x="13.3840%" y="303.50"></text></g><g><title>__rustc::__rdl_dealloc (933,962,706 samples, 0.27%)</title><rect x="13.1340%" y="277" width="0.2745%" height="15" fill="rgb(232,213,38)" fg:x="44684881099" fg:w="933962706"/><text x="13.3840%" y="287.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (933,962,706 samples, 0.27%)</title><rect x="13.1340%" y="261" width="0.2745%" height="15" fill="rgb(207,94,22)" fg:x="44684881099" fg:w="933962706"/><text x="13.3840%" y="271.50"></text></g><g><title>cfree (933,962,706 samples, 0.27%)</title><rect x="13.1340%" y="245" width="0.2745%" height="15" fill="rgb(219,183,54)" fg:x="44684881099" fg:w="933962706"/><text x="13.3840%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,737,241,415 samples, 0.80%)</title><rect x="12.6429%" y="549" width="0.8045%" height="15" fill="rgb(216,185,54)" fg:x="43013876184" fg:w="2737241415"/><text x="12.8929%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,737,241,415 samples, 0.80%)</title><rect x="12.6429%" y="533" width="0.8045%" height="15" fill="rgb(254,217,39)" fg:x="43013876184" fg:w="2737241415"/><text x="12.8929%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2,737,241,415 samples, 0.80%)</title><rect x="12.6429%" y="517" width="0.8045%" height="15" fill="rgb(240,178,23)" fg:x="43013876184" fg:w="2737241415"/><text x="12.8929%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place{{reify.shim}} (2,737,241,415 samples, 0.80%)</title><rect x="12.6429%" y="501" width="0.8045%" height="15" fill="rgb(218,11,47)" fg:x="43013876184" fg:w="2737241415"/><text x="12.8929%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (2,737,241,415 samples, 0.80%)</title><rect x="12.6429%" y="485" width="0.8045%" height="15" fill="rgb(218,51,51)" fg:x="43013876184" fg:w="2737241415"/><text x="12.8929%" y="495.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (2,737,241,415 samples, 0.80%)</title><rect x="12.6429%" y="469" width="0.8045%" height="15" fill="rgb(238,126,27)" fg:x="43013876184" fg:w="2737241415"/><text x="12.8929%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,737,241,415 samples, 0.80%)</title><rect x="12.6429%" y="453" width="0.8045%" height="15" fill="rgb(249,202,22)" fg:x="43013876184" fg:w="2737241415"/><text x="12.8929%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,737,241,415 samples, 0.80%)</title><rect x="12.6429%" y="437" width="0.8045%" height="15" fill="rgb(254,195,49)" fg:x="43013876184" fg:w="2737241415"/><text x="12.8929%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (132,273,794 samples, 0.04%)</title><rect x="13.4085%" y="421" width="0.0389%" height="15" fill="rgb(208,123,14)" fg:x="45618843805" fg:w="132273794"/><text x="13.6585%" y="431.50"></text></g><g><title>core::ptr::read (132,273,794 samples, 0.04%)</title><rect x="13.4085%" y="405" width="0.0389%" height="15" fill="rgb(224,200,8)" fg:x="45618843805" fg:w="132273794"/><text x="13.6585%" y="415.50"></text></g><g><title>[libc.so.6] (1,565,012,541 samples, 0.46%)</title><rect x="13.4744%" y="405" width="0.4600%" height="15" fill="rgb(217,61,36)" fg:x="45842980048" fg:w="1565012541"/><text x="13.7244%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,686,717,166 samples, 1.08%)</title><rect x="13.4474%" y="469" width="1.0836%" height="15" fill="rgb(206,35,45)" fg:x="45751117599" fg:w="3686717166"/><text x="13.6974%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (3,686,717,166 samples, 1.08%)</title><rect x="13.4474%" y="453" width="1.0836%" height="15" fill="rgb(217,65,33)" fg:x="45751117599" fg:w="3686717166"/><text x="13.6974%" y="463.50"></text></g><g><title>__rustc::__rdl_dealloc (3,686,717,166 samples, 1.08%)</title><rect x="13.4474%" y="437" width="1.0836%" height="15" fill="rgb(222,158,48)" fg:x="45751117599" fg:w="3686717166"/><text x="13.6974%" y="447.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,686,717,166 samples, 1.08%)</title><rect x="13.4474%" y="421" width="1.0836%" height="15" fill="rgb(254,2,54)" fg:x="45751117599" fg:w="3686717166"/><text x="13.6974%" y="431.50"></text></g><g><title>cfree (2,029,842,176 samples, 0.60%)</title><rect x="13.9344%" y="405" width="0.5966%" height="15" fill="rgb(250,143,38)" fg:x="47407992589" fg:w="2029842176"/><text x="14.1844%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,743,890,196 samples, 1.10%)</title><rect x="13.4474%" y="549" width="1.1004%" height="15" fill="rgb(248,25,0)" fg:x="45751117599" fg:w="3743890196"/><text x="13.6974%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,743,890,196 samples, 1.10%)</title><rect x="13.4474%" y="533" width="1.1004%" height="15" fill="rgb(206,152,27)" fg:x="45751117599" fg:w="3743890196"/><text x="13.6974%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,743,890,196 samples, 1.10%)</title><rect x="13.4474%" y="517" width="1.1004%" height="15" fill="rgb(240,77,30)" fg:x="45751117599" fg:w="3743890196"/><text x="13.6974%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,743,890,196 samples, 1.10%)</title><rect x="13.4474%" y="501" width="1.1004%" height="15" fill="rgb(231,5,3)" fg:x="45751117599" fg:w="3743890196"/><text x="13.6974%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,743,890,196 samples, 1.10%)</title><rect x="13.4474%" y="485" width="1.1004%" height="15" fill="rgb(207,226,32)" fg:x="45751117599" fg:w="3743890196"/><text x="13.6974%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (57,173,030 samples, 0.02%)</title><rect x="14.5310%" y="469" width="0.0168%" height="15" fill="rgb(222,207,47)" fg:x="49437834765" fg:w="57173030"/><text x="14.7810%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String&gt;&gt; (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="549" width="0.4588%" height="15" fill="rgb(229,115,45)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="533" width="0.4588%" height="15" fill="rgb(224,191,6)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::string::String,alloc::alloc::Global&gt;&gt; (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="517" width="0.4588%" height="15" fill="rgb(230,227,24)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="527.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="501" width="0.4588%" height="15" fill="rgb(228,80,19)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="485" width="0.4588%" height="15" fill="rgb(247,229,0)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="469" width="0.4588%" height="15" fill="rgb(237,194,15)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="453" width="0.4588%" height="15" fill="rgb(219,203,20)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="437" width="0.4588%" height="15" fill="rgb(234,128,8)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="421" width="0.4588%" height="15" fill="rgb(248,202,8)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="431.50"></text></g><g><title>__rustc::__rdl_dealloc (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="405" width="0.4588%" height="15" fill="rgb(206,104,37)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="415.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="389" width="0.4588%" height="15" fill="rgb(223,8,27)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="399.50"></text></g><g><title>[libc.so.6] (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="373" width="0.4588%" height="15" fill="rgb(216,217,28)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="383.50"></text></g><g><title>[libc.so.6] (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="357" width="0.4588%" height="15" fill="rgb(249,199,1)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="367.50"></text></g><g><title>[libc.so.6] (1,560,896,686 samples, 0.46%)</title><rect x="14.5479%" y="341" width="0.4588%" height="15" fill="rgb(240,85,17)" fg:x="49495007795" fg:w="1560896686"/><text x="14.7979%" y="351.50"></text></g><g><title>[libc.so.6] (337,915,129 samples, 0.10%)</title><rect x="14.9073%" y="325" width="0.0993%" height="15" fill="rgb(206,108,45)" fg:x="50717989352" fg:w="337915129"/><text x="15.1573%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (393,277,161 samples, 0.12%)</title><rect x="15.8340%" y="533" width="0.1156%" height="15" fill="rgb(245,210,41)" fg:x="53870913054" fg:w="393277161"/><text x="16.0840%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (393,277,161 samples, 0.12%)</title><rect x="15.8340%" y="517" width="0.1156%" height="15" fill="rgb(206,13,37)" fg:x="53870913054" fg:w="393277161"/><text x="16.0840%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (73,091,452 samples, 0.02%)</title><rect x="15.9496%" y="533" width="0.0215%" height="15" fill="rgb(250,61,18)" fg:x="54264190215" fg:w="73091452"/><text x="16.1996%" y="543.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (72,147,801 samples, 0.02%)</title><rect x="15.9711%" y="533" width="0.0212%" height="15" fill="rgb(235,172,48)" fg:x="54337281667" fg:w="72147801"/><text x="16.2211%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (72,147,801 samples, 0.02%)</title><rect x="15.9711%" y="517" width="0.0212%" height="15" fill="rgb(249,201,17)" fg:x="54337281667" fg:w="72147801"/><text x="16.2211%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (72,147,801 samples, 0.02%)</title><rect x="15.9711%" y="501" width="0.0212%" height="15" fill="rgb(219,208,6)" fg:x="54337281667" fg:w="72147801"/><text x="16.2211%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (72,147,801 samples, 0.02%)</title><rect x="15.9711%" y="485" width="0.0212%" height="15" fill="rgb(248,31,23)" fg:x="54337281667" fg:w="72147801"/><text x="16.2211%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (120,487,975 samples, 0.04%)</title><rect x="16.4241%" y="517" width="0.0354%" height="15" fill="rgb(245,15,42)" fg:x="55878520694" fg:w="120487975"/><text x="16.6741%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (120,487,975 samples, 0.04%)</title><rect x="16.4241%" y="501" width="0.0354%" height="15" fill="rgb(222,217,39)" fg:x="55878520694" fg:w="120487975"/><text x="16.6741%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (120,487,975 samples, 0.04%)</title><rect x="16.4241%" y="485" width="0.0354%" height="15" fill="rgb(210,219,27)" fg:x="55878520694" fg:w="120487975"/><text x="16.6741%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (120,487,975 samples, 0.04%)</title><rect x="16.4241%" y="469" width="0.0354%" height="15" fill="rgb(252,166,36)" fg:x="55878520694" fg:w="120487975"/><text x="16.6741%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (120,487,975 samples, 0.04%)</title><rect x="16.4241%" y="453" width="0.0354%" height="15" fill="rgb(245,132,34)" fg:x="55878520694" fg:w="120487975"/><text x="16.6741%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (120,487,975 samples, 0.04%)</title><rect x="16.4241%" y="437" width="0.0354%" height="15" fill="rgb(236,54,3)" fg:x="55878520694" fg:w="120487975"/><text x="16.6741%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (120,487,975 samples, 0.04%)</title><rect x="16.4241%" y="421" width="0.0354%" height="15" fill="rgb(241,173,43)" fg:x="55878520694" fg:w="120487975"/><text x="16.6741%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (150,629,567 samples, 0.04%)</title><rect x="16.4595%" y="501" width="0.0443%" height="15" fill="rgb(215,190,9)" fg:x="55999008669" fg:w="150629567"/><text x="16.7095%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (150,629,567 samples, 0.04%)</title><rect x="16.4595%" y="485" width="0.0443%" height="15" fill="rgb(242,101,16)" fg:x="55999008669" fg:w="150629567"/><text x="16.7095%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (219,245,532 samples, 0.06%)</title><rect x="16.4595%" y="517" width="0.0644%" height="15" fill="rgb(223,190,21)" fg:x="55999008669" fg:w="219245532"/><text x="16.7095%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (68,615,965 samples, 0.02%)</title><rect x="16.5038%" y="501" width="0.0202%" height="15" fill="rgb(215,228,25)" fg:x="56149638236" fg:w="68615965"/><text x="16.7538%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (68,615,965 samples, 0.02%)</title><rect x="16.5038%" y="485" width="0.0202%" height="15" fill="rgb(225,36,22)" fg:x="56149638236" fg:w="68615965"/><text x="16.7538%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (159,515,544 samples, 0.05%)</title><rect x="16.5240%" y="517" width="0.0469%" height="15" fill="rgb(251,106,46)" fg:x="56218254201" fg:w="159515544"/><text x="16.7740%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (159,515,544 samples, 0.05%)</title><rect x="16.5240%" y="501" width="0.0469%" height="15" fill="rgb(208,90,1)" fg:x="56218254201" fg:w="159515544"/><text x="16.7740%" y="511.50"></text></g><g><title>core::ptr::write (75,012,614 samples, 0.02%)</title><rect x="16.5488%" y="485" width="0.0220%" height="15" fill="rgb(243,10,4)" fg:x="56302757131" fg:w="75012614"/><text x="16.7988%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (39,684,732 samples, 0.01%)</title><rect x="16.5709%" y="517" width="0.0117%" height="15" fill="rgb(212,137,27)" fg:x="56377769745" fg:w="39684732"/><text x="16.8209%" y="527.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (233,309,095 samples, 0.07%)</title><rect x="19.8017%" y="469" width="0.0686%" height="15" fill="rgb(231,220,49)" fg:x="67369885740" fg:w="233309095"/><text x="20.0517%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (233,309,095 samples, 0.07%)</title><rect x="19.8017%" y="453" width="0.0686%" height="15" fill="rgb(237,96,20)" fg:x="67369885740" fg:w="233309095"/><text x="20.0517%" y="463.50"></text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieBuilder::add_transition (13,362,104,119 samples, 3.93%)</title><rect x="15.9923%" y="533" width="3.9275%" height="15" fill="rgb(239,229,30)" fg:x="54409429468" fg:w="13362104119"/><text x="16.2423%" y="543.50">libl..</text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieBuilder::find_free_base (11,354,079,110 samples, 3.34%)</title><rect x="16.5825%" y="517" width="3.3373%" height="15" fill="rgb(219,65,33)" fg:x="56417454477" fg:w="11354079110"/><text x="16.8325%" y="527.50">lib..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,192,197,645 samples, 0.35%)</title><rect x="19.5694%" y="501" width="0.3504%" height="15" fill="rgb(243,134,7)" fg:x="66579335942" fg:w="1192197645"/><text x="19.8194%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,192,197,645 samples, 0.35%)</title><rect x="19.5694%" y="485" width="0.3504%" height="15" fill="rgb(216,177,54)" fg:x="66579335942" fg:w="1192197645"/><text x="19.8194%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (168,338,752 samples, 0.05%)</title><rect x="19.8703%" y="469" width="0.0495%" height="15" fill="rgb(211,160,20)" fg:x="67603194835" fg:w="168338752"/><text x="20.1203%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (759,428,150 samples, 0.22%)</title><rect x="20.6487%" y="517" width="0.2232%" height="15" fill="rgb(239,85,39)" fg:x="70251470479" fg:w="759428150"/><text x="20.8987%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (759,428,150 samples, 0.22%)</title><rect x="20.6487%" y="501" width="0.2232%" height="15" fill="rgb(232,125,22)" fg:x="70251470479" fg:w="759428150"/><text x="20.8987%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (759,428,150 samples, 0.22%)</title><rect x="20.6487%" y="485" width="0.2232%" height="15" fill="rgb(244,57,34)" fg:x="70251470479" fg:w="759428150"/><text x="20.8987%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (759,428,150 samples, 0.22%)</title><rect x="20.6487%" y="469" width="0.2232%" height="15" fill="rgb(214,203,32)" fg:x="70251470479" fg:w="759428150"/><text x="20.8987%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (759,428,150 samples, 0.22%)</title><rect x="20.6487%" y="453" width="0.2232%" height="15" fill="rgb(207,58,43)" fg:x="70251470479" fg:w="759428150"/><text x="20.8987%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (759,428,150 samples, 0.22%)</title><rect x="20.6487%" y="437" width="0.2232%" height="15" fill="rgb(215,193,15)" fg:x="70251470479" fg:w="759428150"/><text x="20.8987%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (759,428,150 samples, 0.22%)</title><rect x="20.6487%" y="421" width="0.2232%" height="15" fill="rgb(232,15,44)" fg:x="70251470479" fg:w="759428150"/><text x="20.8987%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (844,683,130 samples, 0.25%)</title><rect x="20.8719%" y="517" width="0.2483%" height="15" fill="rgb(212,3,48)" fg:x="71010898629" fg:w="844683130"/><text x="21.1219%" y="527.50"></text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieBuilder::insert (21,305,339,214 samples, 6.26%)</title><rect x="15.0084%" y="549" width="6.2622%" height="15" fill="rgb(218,128,7)" fg:x="51061913565" fg:w="21305339214"/><text x="15.2584%" y="559.50">libleven..</text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieBuilder::transition (4,595,719,192 samples, 1.35%)</title><rect x="19.9198%" y="533" width="1.3508%" height="15" fill="rgb(226,216,39)" fg:x="67771533587" fg:w="4595719192"/><text x="20.1698%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (511,671,020 samples, 0.15%)</title><rect x="21.1202%" y="517" width="0.1504%" height="15" fill="rgb(243,47,51)" fg:x="71855581759" fg:w="511671020"/><text x="21.3702%" y="527.50"></text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrie::from_terms (29,587,450,881 samples, 8.70%)</title><rect x="12.5750%" y="565" width="8.6965%" height="15" fill="rgb(241,183,40)" fg:x="42782795252" fg:w="29587450881"/><text x="12.8250%" y="575.50">liblevenshte..</text></g><g><title>[libc.so.6] (438,203,137 samples, 0.13%)</title><rect x="21.3765%" y="277" width="0.1288%" height="15" fill="rgb(231,217,32)" fg:x="72727623677" fg:w="438203137"/><text x="21.6265%" y="287.50"></text></g><g><title>[libc.so.6] (349,067,836 samples, 0.10%)</title><rect x="21.4027%" y="261" width="0.1026%" height="15" fill="rgb(229,61,38)" fg:x="72816758978" fg:w="349067836"/><text x="21.6527%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,634,591,945 samples, 0.48%)</title><rect x="21.3023%" y="421" width="0.4804%" height="15" fill="rgb(225,210,5)" fg:x="72475200507" fg:w="1634591945"/><text x="21.5523%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,634,591,945 samples, 0.48%)</title><rect x="21.3023%" y="405" width="0.4804%" height="15" fill="rgb(231,79,45)" fg:x="72475200507" fg:w="1634591945"/><text x="21.5523%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,634,591,945 samples, 0.48%)</title><rect x="21.3023%" y="389" width="0.4804%" height="15" fill="rgb(224,100,7)" fg:x="72475200507" fg:w="1634591945"/><text x="21.5523%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,531,960,311 samples, 0.45%)</title><rect x="21.3325%" y="373" width="0.4503%" height="15" fill="rgb(241,198,18)" fg:x="72577832141" fg:w="1531960311"/><text x="21.5825%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,531,960,311 samples, 0.45%)</title><rect x="21.3325%" y="357" width="0.4503%" height="15" fill="rgb(252,97,53)" fg:x="72577832141" fg:w="1531960311"/><text x="21.5825%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,531,960,311 samples, 0.45%)</title><rect x="21.3325%" y="341" width="0.4503%" height="15" fill="rgb(220,88,7)" fg:x="72577832141" fg:w="1531960311"/><text x="21.5825%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1,531,960,311 samples, 0.45%)</title><rect x="21.3325%" y="325" width="0.4503%" height="15" fill="rgb(213,176,14)" fg:x="72577832141" fg:w="1531960311"/><text x="21.5825%" y="335.50"></text></g><g><title>__rustc::__rdl_alloc (1,531,960,311 samples, 0.45%)</title><rect x="21.3325%" y="309" width="0.4503%" height="15" fill="rgb(246,73,7)" fg:x="72577832141" fg:w="1531960311"/><text x="21.5825%" y="319.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,531,960,311 samples, 0.45%)</title><rect x="21.3325%" y="293" width="0.4503%" height="15" fill="rgb(245,64,36)" fg:x="72577832141" fg:w="1531960311"/><text x="21.5825%" y="303.50"></text></g><g><title>malloc (943,965,638 samples, 0.28%)</title><rect x="21.5053%" y="277" width="0.2775%" height="15" fill="rgb(245,80,10)" fg:x="73165826814" fg:w="943965638"/><text x="21.7553%" y="287.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,168,983,564 samples, 0.64%)</title><rect x="21.2919%" y="549" width="0.6375%" height="15" fill="rgb(232,107,50)" fg:x="72439774742" fg:w="2168983564"/><text x="21.5419%" y="559.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (2,168,983,564 samples, 0.64%)</title><rect x="21.2919%" y="533" width="0.6375%" height="15" fill="rgb(253,3,0)" fg:x="72439774742" fg:w="2168983564"/><text x="21.5419%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2,168,983,564 samples, 0.64%)</title><rect x="21.2919%" y="517" width="0.6375%" height="15" fill="rgb(212,99,53)" fg:x="72439774742" fg:w="2168983564"/><text x="21.5419%" y="527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,168,983,564 samples, 0.64%)</title><rect x="21.2919%" y="501" width="0.6375%" height="15" fill="rgb(249,111,54)" fg:x="72439774742" fg:w="2168983564"/><text x="21.5419%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,168,983,564 samples, 0.64%)</title><rect x="21.2919%" y="485" width="0.6375%" height="15" fill="rgb(249,55,30)" fg:x="72439774742" fg:w="2168983564"/><text x="21.5419%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,168,983,564 samples, 0.64%)</title><rect x="21.2919%" y="469" width="0.6375%" height="15" fill="rgb(237,47,42)" fg:x="72439774742" fg:w="2168983564"/><text x="21.5419%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,168,983,564 samples, 0.64%)</title><rect x="21.2919%" y="453" width="0.6375%" height="15" fill="rgb(211,20,18)" fg:x="72439774742" fg:w="2168983564"/><text x="21.5419%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (2,168,983,564 samples, 0.64%)</title><rect x="21.2919%" y="437" width="0.6375%" height="15" fill="rgb(231,203,46)" fg:x="72439774742" fg:w="2168983564"/><text x="21.5419%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (498,965,854 samples, 0.15%)</title><rect x="21.7828%" y="421" width="0.1467%" height="15" fill="rgb(237,142,3)" fg:x="74109792452" fg:w="498965854"/><text x="22.0328%" y="431.50"></text></g><g><title>core::ptr::copy_nonoverlapping (498,965,854 samples, 0.15%)</title><rect x="21.7828%" y="405" width="0.1467%" height="15" fill="rgb(241,107,1)" fg:x="74109792452" fg:w="498965854"/><text x="22.0328%" y="415.50"></text></g><g><title>[libc.so.6] (362,061,462 samples, 0.11%)</title><rect x="21.8230%" y="389" width="0.1064%" height="15" fill="rgb(229,83,13)" fg:x="74246696844" fg:w="362061462"/><text x="22.0730%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (86,372,249 samples, 0.03%)</title><rect x="21.9470%" y="517" width="0.0254%" height="15" fill="rgb(241,91,40)" fg:x="74668647105" fg:w="86372249"/><text x="22.1970%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (86,372,249 samples, 0.03%)</title><rect x="21.9470%" y="501" width="0.0254%" height="15" fill="rgb(225,3,45)" fg:x="74668647105" fg:w="86372249"/><text x="22.1970%" y="511.50"></text></g><g><title>&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrie as liblevenshtein::dictionary::Dictionary&gt;::root (1,064,686,356 samples, 0.31%)</title><rect x="21.9294%" y="549" width="0.3129%" height="15" fill="rgb(244,223,14)" fg:x="74608758306" fg:w="1064686356"/><text x="22.1794%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,017,175,713 samples, 0.30%)</title><rect x="21.9434%" y="533" width="0.2990%" height="15" fill="rgb(224,124,37)" fg:x="74656268949" fg:w="1017175713"/><text x="22.1934%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (918,425,308 samples, 0.27%)</title><rect x="21.9724%" y="517" width="0.2699%" height="15" fill="rgb(251,171,30)" fg:x="74755019354" fg:w="918425308"/><text x="22.2224%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (918,425,308 samples, 0.27%)</title><rect x="21.9724%" y="501" width="0.2699%" height="15" fill="rgb(236,46,54)" fg:x="74755019354" fg:w="918425308"/><text x="22.2224%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (787,720,716 samples, 0.23%)</title><rect x="22.2442%" y="533" width="0.2315%" height="15" fill="rgb(245,213,5)" fg:x="75679517260" fg:w="787720716"/><text x="22.4942%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (535,770,443 samples, 0.16%)</title><rect x="22.3182%" y="517" width="0.1575%" height="15" fill="rgb(230,144,27)" fg:x="75931467533" fg:w="535770443"/><text x="22.5682%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (532,643,050 samples, 0.16%)</title><rect x="22.3191%" y="501" width="0.1566%" height="15" fill="rgb(220,86,6)" fg:x="75934594926" fg:w="532643050"/><text x="22.5691%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (532,643,050 samples, 0.16%)</title><rect x="22.3191%" y="485" width="0.1566%" height="15" fill="rgb(240,20,13)" fg:x="75934594926" fg:w="532643050"/><text x="22.5691%" y="495.50"></text></g><g><title>alloc::alloc::alloc (532,643,050 samples, 0.16%)</title><rect x="22.3191%" y="469" width="0.1566%" height="15" fill="rgb(217,89,34)" fg:x="75934594926" fg:w="532643050"/><text x="22.5691%" y="479.50"></text></g><g><title>__rustc::__rdl_alloc (532,643,050 samples, 0.16%)</title><rect x="22.3191%" y="453" width="0.1566%" height="15" fill="rgb(229,13,5)" fg:x="75934594926" fg:w="532643050"/><text x="22.5691%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (532,643,050 samples, 0.16%)</title><rect x="22.3191%" y="437" width="0.1566%" height="15" fill="rgb(244,67,35)" fg:x="75934594926" fg:w="532643050"/><text x="22.5691%" y="447.50"></text></g><g><title>malloc (453,542,633 samples, 0.13%)</title><rect x="22.3424%" y="421" width="0.1333%" height="15" fill="rgb(221,40,2)" fg:x="76013695343" fg:w="453542633"/><text x="22.5924%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (274,943,825 samples, 0.08%)</title><rect x="22.4757%" y="533" width="0.0808%" height="15" fill="rgb(237,157,21)" fg:x="76467237976" fg:w="274943825"/><text x="22.7257%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back_mut (274,943,825 samples, 0.08%)</title><rect x="22.4757%" y="517" width="0.0808%" height="15" fill="rgb(222,94,11)" fg:x="76467237976" fg:w="274943825"/><text x="22.7257%" y="527.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (66,711,504 samples, 0.02%)</title><rect x="22.5369%" y="501" width="0.0196%" height="15" fill="rgb(249,113,6)" fg:x="76675470297" fg:w="66711504"/><text x="22.7869%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (66,711,504 samples, 0.02%)</title><rect x="22.5369%" y="485" width="0.0196%" height="15" fill="rgb(238,137,36)" fg:x="76675470297" fg:w="66711504"/><text x="22.7869%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (36,286,614 samples, 0.01%)</title><rect x="22.5458%" y="469" width="0.0107%" height="15" fill="rgb(210,102,26)" fg:x="76705895187" fg:w="36286614"/><text x="22.7958%" y="479.50"></text></g><g><title>liblevenshtein::transducer::intersection::Intersection&lt;N&gt;::new (50,036,887 samples, 0.01%)</title><rect x="22.5565%" y="533" width="0.0147%" height="15" fill="rgb(218,30,30)" fg:x="76742181801" fg:w="50036887"/><text x="22.8065%" y="543.50"></text></g><g><title>core::cmp::Ord::min (107,376,600 samples, 0.03%)</title><rect x="22.6339%" y="517" width="0.0316%" height="15" fill="rgb(214,67,26)" fg:x="77005356773" fg:w="107376600"/><text x="22.8839%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (51,521,962 samples, 0.02%)</title><rect x="22.6654%" y="517" width="0.0151%" height="15" fill="rgb(251,9,53)" fg:x="77112733373" fg:w="51521962"/><text x="22.9154%" y="527.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (51,521,962 samples, 0.02%)</title><rect x="22.6654%" y="501" width="0.0151%" height="15" fill="rgb(228,204,25)" fg:x="77112733373" fg:w="51521962"/><text x="22.9154%" y="511.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (36,171,028 samples, 0.01%)</title><rect x="22.6699%" y="485" width="0.0106%" height="15" fill="rgb(207,153,8)" fg:x="77128084307" fg:w="36171028"/><text x="22.9199%" y="495.50"></text></g><g><title>liblevenshtein::transducer::Transducer&lt;D&gt;::query (4,848,121,454 samples, 1.42%)</title><rect x="21.2715%" y="565" width="1.4250%" height="15" fill="rgb(242,9,16)" fg:x="72370246133" fg:w="4848121454"/><text x="21.5215%" y="575.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::with_substring_mode (1,544,922,925 samples, 0.45%)</title><rect x="22.2424%" y="549" width="0.4541%" height="15" fill="rgb(217,211,10)" fg:x="75673444662" fg:w="1544922925"/><text x="22.4924%" y="559.50"></text></g><g><title>liblevenshtein::transducer::transition::initial_state (399,867,541 samples, 0.12%)</title><rect x="22.5789%" y="533" width="0.1175%" height="15" fill="rgb(219,228,52)" fg:x="76818500046" fg:w="399867541"/><text x="22.8289%" y="543.50"></text></g><g><title>liblevenshtein::transducer::position::Position::new (54,112,252 samples, 0.02%)</title><rect x="22.6806%" y="517" width="0.0159%" height="15" fill="rgb(231,92,29)" fg:x="77164255335" fg:w="54112252"/><text x="22.9306%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (95,546,629 samples, 0.03%)</title><rect x="23.0735%" y="533" width="0.0281%" height="15" fill="rgb(232,8,23)" fg:x="78501306239" fg:w="95546629"/><text x="23.3235%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,036,855,445 samples, 0.30%)</title><rect x="23.1076%" y="533" width="0.3048%" height="15" fill="rgb(216,211,34)" fg:x="78616993226" fg:w="1036855445"/><text x="23.3576%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (839,527,697 samples, 0.25%)</title><rect x="23.1656%" y="517" width="0.2468%" height="15" fill="rgb(236,151,0)" fg:x="78814320974" fg:w="839527697"/><text x="23.4156%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (839,527,697 samples, 0.25%)</title><rect x="23.1656%" y="501" width="0.2468%" height="15" fill="rgb(209,168,3)" fg:x="78814320974" fg:w="839527697"/><text x="23.4156%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (839,527,697 samples, 0.25%)</title><rect x="23.1656%" y="485" width="0.2468%" height="15" fill="rgb(208,129,28)" fg:x="78814320974" fg:w="839527697"/><text x="23.4156%" y="495.50"></text></g><g><title>alloc::alloc::alloc (839,527,697 samples, 0.25%)</title><rect x="23.1656%" y="469" width="0.2468%" height="15" fill="rgb(229,78,22)" fg:x="78814320974" fg:w="839527697"/><text x="23.4156%" y="479.50"></text></g><g><title>__rustc::__rdl_alloc (839,527,697 samples, 0.25%)</title><rect x="23.1656%" y="453" width="0.2468%" height="15" fill="rgb(228,187,13)" fg:x="78814320974" fg:w="839527697"/><text x="23.4156%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (839,527,697 samples, 0.25%)</title><rect x="23.1656%" y="437" width="0.2468%" height="15" fill="rgb(240,119,24)" fg:x="78814320974" fg:w="839527697"/><text x="23.4156%" y="447.50"></text></g><g><title>malloc (779,073,018 samples, 0.23%)</title><rect x="23.1833%" y="421" width="0.2290%" height="15" fill="rgb(209,194,42)" fg:x="78874775653" fg:w="779073018"/><text x="23.4333%" y="431.50"></text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (2,175,000,213 samples, 0.64%)</title><rect x="24.3988%" y="373" width="0.6393%" height="15" fill="rgb(247,200,46)" fg:x="83010192181" fg:w="2175000213"/><text x="24.6488%" y="383.50"></text></g><g><title>core::num::&lt;impl u8&gt;::unchecked_add (2,175,000,213 samples, 0.64%)</title><rect x="24.3988%" y="357" width="0.6393%" height="15" fill="rgb(218,76,16)" fg:x="83010192181" fg:w="2175000213"/><text x="24.6488%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1,893,922,220 samples, 0.56%)</title><rect x="25.0381%" y="373" width="0.5567%" height="15" fill="rgb(225,21,48)" fg:x="85185192394" fg:w="1893922220"/><text x="25.2881%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (11,861,900,755 samples, 3.49%)</title><rect x="25.5948%" y="373" width="3.4865%" height="15" fill="rgb(239,223,50)" fg:x="87079114614" fg:w="11861900755"/><text x="25.8448%" y="383.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11,861,900,755 samples, 3.49%)</title><rect x="25.5948%" y="357" width="3.4865%" height="15" fill="rgb(244,45,21)" fg:x="87079114614" fg:w="11861900755"/><text x="25.8448%" y="367.50">cor..</text></g><g><title>&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode as liblevenshtein::dictionary::DictionaryNode&gt;::edges::{{closure}} (11,861,900,755 samples, 3.49%)</title><rect x="25.5948%" y="341" width="3.4865%" height="15" fill="rgb(232,33,43)" fg:x="87079114614" fg:w="11861900755"/><text x="25.8448%" y="351.50">&lt;li..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18,772,351,215 samples, 5.52%)</title><rect x="23.5653%" y="469" width="5.5177%" height="15" fill="rgb(209,8,3)" fg:x="80174334203" fg:w="18772351215"/><text x="23.8153%" y="479.50">&lt;alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (18,772,351,215 samples, 5.52%)</title><rect x="23.5653%" y="453" width="5.5177%" height="15" fill="rgb(214,25,53)" fg:x="80174334203" fg:w="18772351215"/><text x="23.8153%" y="463.50">alloc::..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,583,724,851 samples, 5.46%)</title><rect x="23.6207%" y="437" width="5.4622%" height="15" fill="rgb(254,186,54)" fg:x="80362960567" fg:w="18583724851"/><text x="23.8707%" y="447.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (18,583,724,851 samples, 5.46%)</title><rect x="23.6207%" y="421" width="5.4622%" height="15" fill="rgb(208,174,49)" fg:x="80362960567" fg:w="18583724851"/><text x="23.8707%" y="431.50">core::i..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (18,583,724,851 samples, 5.46%)</title><rect x="23.6207%" y="405" width="5.4622%" height="15" fill="rgb(233,191,51)" fg:x="80362960567" fg:w="18583724851"/><text x="23.8707%" y="415.50">core::i..</text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (18,583,724,851 samples, 5.46%)</title><rect x="23.6207%" y="389" width="5.4622%" height="15" fill="rgb(222,134,10)" fg:x="80362960567" fg:w="18583724851"/><text x="23.8707%" y="399.50">&lt;core::..</text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (222,032,167 samples, 0.07%)</title><rect x="29.1405%" y="405" width="0.0653%" height="15" fill="rgb(230,226,20)" fg:x="99142474575" fg:w="222032167"/><text x="29.3905%" y="415.50"></text></g><g><title>core::num::&lt;impl u8&gt;::unchecked_add (222,032,167 samples, 0.07%)</title><rect x="29.1405%" y="389" width="0.0653%" height="15" fill="rgb(251,111,25)" fg:x="99142474575" fg:w="222032167"/><text x="29.3905%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (605,485,560 samples, 0.18%)</title><rect x="29.2058%" y="405" width="0.1780%" height="15" fill="rgb(224,40,46)" fg:x="99364506742" fg:w="605485560"/><text x="29.4558%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (10,235,526,453 samples, 3.01%)</title><rect x="29.0830%" y="437" width="3.0085%" height="15" fill="rgb(236,108,47)" fg:x="98946685418" fg:w="10235526453"/><text x="29.3330%" y="447.50">cor..</text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (10,235,526,453 samples, 3.01%)</title><rect x="29.0830%" y="421" width="3.0085%" height="15" fill="rgb(234,93,0)" fg:x="98946685418" fg:w="10235526453"/><text x="29.3330%" y="431.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (9,212,219,569 samples, 2.71%)</title><rect x="29.3837%" y="405" width="2.7077%" height="15" fill="rgb(224,213,32)" fg:x="99969992302" fg:w="9212219569"/><text x="29.6337%" y="415.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9,212,219,569 samples, 2.71%)</title><rect x="29.3837%" y="389" width="2.7077%" height="15" fill="rgb(251,11,48)" fg:x="99969992302" fg:w="9212219569"/><text x="29.6337%" y="399.50">co..</text></g><g><title>&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode as liblevenshtein::dictionary::DictionaryNode&gt;::edges::{{closure}} (9,212,219,569 samples, 2.71%)</title><rect x="29.3837%" y="373" width="2.7077%" height="15" fill="rgb(236,173,5)" fg:x="99969992302" fg:w="9212219569"/><text x="29.6337%" y="383.50">&lt;l..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (449,485,650 samples, 0.13%)</title><rect x="31.9593%" y="357" width="0.1321%" height="15" fill="rgb(230,95,12)" fg:x="108732726221" fg:w="449485650"/><text x="32.2093%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (414,381,833 samples, 0.12%)</title><rect x="31.9697%" y="341" width="0.1218%" height="15" fill="rgb(232,209,1)" fg:x="108767830038" fg:w="414381833"/><text x="32.2197%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_add (414,381,833 samples, 0.12%)</title><rect x="31.9697%" y="325" width="0.1218%" height="15" fill="rgb(232,6,1)" fg:x="108767830038" fg:w="414381833"/><text x="32.2197%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,396,360,087 samples, 3.06%)</title><rect x="29.0830%" y="469" width="3.0558%" height="15" fill="rgb(210,224,50)" fg:x="98946685418" fg:w="10396360087"/><text x="29.3330%" y="479.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (10,396,360,087 samples, 3.06%)</title><rect x="29.0830%" y="453" width="3.0558%" height="15" fill="rgb(228,127,35)" fg:x="98946685418" fg:w="10396360087"/><text x="29.3330%" y="463.50">cor..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (160,833,634 samples, 0.05%)</title><rect x="32.0915%" y="437" width="0.0473%" height="15" fill="rgb(245,102,45)" fg:x="109182211871" fg:w="160833634"/><text x="32.3415%" y="447.50"></text></g><g><title>&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode as liblevenshtein::dictionary::DictionaryNode&gt;::edges (32,437,457,107 samples, 9.53%)</title><rect x="23.0132%" y="549" width="9.5342%" height="15" fill="rgb(214,1,49)" fg:x="78296104108" fg:w="32437457107"/><text x="23.2632%" y="559.50">&lt;liblevenshtei..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (31,079,712,544 samples, 9.14%)</title><rect x="23.4123%" y="533" width="9.1351%" height="15" fill="rgb(226,163,40)" fg:x="79653848671" fg:w="31079712544"/><text x="23.6623%" y="543.50">core::iter::t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (31,079,712,544 samples, 9.14%)</title><rect x="23.4123%" y="517" width="9.1351%" height="15" fill="rgb(239,212,28)" fg:x="79653848671" fg:w="31079712544"/><text x="23.6623%" y="527.50">&lt;alloc::vec::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31,079,712,544 samples, 9.14%)</title><rect x="23.4123%" y="501" width="9.1351%" height="15" fill="rgb(220,20,13)" fg:x="79653848671" fg:w="31079712544"/><text x="23.6623%" y="511.50">&lt;alloc::vec::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (31,079,712,544 samples, 9.14%)</title><rect x="23.4123%" y="485" width="9.1351%" height="15" fill="rgb(210,164,35)" fg:x="79653848671" fg:w="31079712544"/><text x="23.6623%" y="495.50">&lt;alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,390,515,710 samples, 0.41%)</title><rect x="32.1387%" y="469" width="0.4087%" height="15" fill="rgb(248,109,41)" fg:x="109343045505" fg:w="1390515710"/><text x="32.3887%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,390,515,710 samples, 0.41%)</title><rect x="32.1387%" y="453" width="0.4087%" height="15" fill="rgb(238,23,50)" fg:x="109343045505" fg:w="1390515710"/><text x="32.3887%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,390,515,710 samples, 0.41%)</title><rect x="32.1387%" y="437" width="0.4087%" height="15" fill="rgb(211,48,49)" fg:x="109343045505" fg:w="1390515710"/><text x="32.3887%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,390,515,710 samples, 0.41%)</title><rect x="32.1387%" y="421" width="0.4087%" height="15" fill="rgb(223,36,21)" fg:x="109343045505" fg:w="1390515710"/><text x="32.3887%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,390,515,710 samples, 0.41%)</title><rect x="32.1387%" y="405" width="0.4087%" height="15" fill="rgb(207,123,46)" fg:x="109343045505" fg:w="1390515710"/><text x="32.3887%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,390,515,710 samples, 0.41%)</title><rect x="32.1387%" y="389" width="0.4087%" height="15" fill="rgb(240,218,32)" fg:x="109343045505" fg:w="1390515710"/><text x="32.3887%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,390,515,710 samples, 0.41%)</title><rect x="32.1387%" y="373" width="0.4087%" height="15" fill="rgb(252,5,43)" fg:x="109343045505" fg:w="1390515710"/><text x="32.3887%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1,390,515,710 samples, 0.41%)</title><rect x="32.1387%" y="357" width="0.4087%" height="15" fill="rgb(252,84,19)" fg:x="109343045505" fg:w="1390515710"/><text x="32.3887%" y="367.50"></text></g><g><title>__rustc::__rdl_alloc (1,390,515,710 samples, 0.41%)</title><rect x="32.1387%" y="341" width="0.4087%" height="15" fill="rgb(243,152,39)" fg:x="109343045505" fg:w="1390515710"/><text x="32.3887%" y="351.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,390,515,710 samples, 0.41%)</title><rect x="32.1387%" y="325" width="0.4087%" height="15" fill="rgb(234,160,15)" fg:x="109343045505" fg:w="1390515710"/><text x="32.3887%" y="335.50"></text></g><g><title>malloc (1,283,175,046 samples, 0.38%)</title><rect x="32.1703%" y="309" width="0.3772%" height="15" fill="rgb(237,34,20)" fg:x="109450386169" fg:w="1283175046"/><text x="32.4203%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (671,168,459 samples, 0.20%)</title><rect x="32.5474%" y="549" width="0.1973%" height="15" fill="rgb(229,97,13)" fg:x="110733561215" fg:w="671168459"/><text x="32.7974%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (444,603,928 samples, 0.13%)</title><rect x="32.6140%" y="533" width="0.1307%" height="15" fill="rgb(234,71,50)" fg:x="110960125746" fg:w="444603928"/><text x="32.8640%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (441,656,825 samples, 0.13%)</title><rect x="32.6149%" y="517" width="0.1298%" height="15" fill="rgb(253,155,4)" fg:x="110963072849" fg:w="441656825"/><text x="32.8649%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (441,656,825 samples, 0.13%)</title><rect x="32.6149%" y="501" width="0.1298%" height="15" fill="rgb(222,185,37)" fg:x="110963072849" fg:w="441656825"/><text x="32.8649%" y="511.50"></text></g><g><title>alloc::alloc::alloc (441,656,825 samples, 0.13%)</title><rect x="32.6149%" y="485" width="0.1298%" height="15" fill="rgb(251,177,13)" fg:x="110963072849" fg:w="441656825"/><text x="32.8649%" y="495.50"></text></g><g><title>__rustc::__rdl_alloc (441,656,825 samples, 0.13%)</title><rect x="32.6149%" y="469" width="0.1298%" height="15" fill="rgb(250,179,40)" fg:x="110963072849" fg:w="441656825"/><text x="32.8649%" y="479.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (441,656,825 samples, 0.13%)</title><rect x="32.6149%" y="453" width="0.1298%" height="15" fill="rgb(242,44,2)" fg:x="110963072849" fg:w="441656825"/><text x="32.8649%" y="463.50"></text></g><g><title>malloc (387,427,783 samples, 0.11%)</title><rect x="32.6308%" y="437" width="0.1139%" height="15" fill="rgb(216,177,13)" fg:x="111017301891" fg:w="387427783"/><text x="32.8808%" y="447.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (359,620,125 samples, 0.11%)</title><rect x="32.7447%" y="549" width="0.1057%" height="15" fill="rgb(216,106,43)" fg:x="111404729674" fg:w="359620125"/><text x="32.9947%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_full (41,262,997 samples, 0.01%)</title><rect x="32.8624%" y="517" width="0.0121%" height="15" fill="rgb(216,183,2)" fg:x="111805170131" fg:w="41262997"/><text x="33.1124%" y="527.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (60,135,666 samples, 0.02%)</title><rect x="32.8745%" y="485" width="0.0177%" height="15" fill="rgb(249,75,3)" fg:x="111846433128" fg:w="60135666"/><text x="33.1245%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (160,160,290 samples, 0.05%)</title><rect x="32.8504%" y="549" width="0.0471%" height="15" fill="rgb(219,67,39)" fg:x="111764349799" fg:w="160160290"/><text x="33.1004%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back_mut (160,160,290 samples, 0.05%)</title><rect x="32.8504%" y="533" width="0.0471%" height="15" fill="rgb(253,228,2)" fg:x="111764349799" fg:w="160160290"/><text x="33.1004%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (78,076,961 samples, 0.02%)</title><rect x="32.8745%" y="517" width="0.0229%" height="15" fill="rgb(235,138,27)" fg:x="111846433128" fg:w="78076961"/><text x="33.1245%" y="527.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (78,076,961 samples, 0.02%)</title><rect x="32.8745%" y="501" width="0.0229%" height="15" fill="rgb(236,97,51)" fg:x="111846433128" fg:w="78076961"/><text x="33.1245%" y="511.50"></text></g><g><title>[libc.so.6] (304,084,904 samples, 0.09%)</title><rect x="32.9172%" y="405" width="0.0894%" height="15" fill="rgb(240,80,30)" fg:x="111991426930" fg:w="304084904"/><text x="33.1672%" y="415.50"></text></g><g><title>[libc.so.6] (261,230,248 samples, 0.08%)</title><rect x="32.9297%" y="389" width="0.0768%" height="15" fill="rgb(230,178,19)" fg:x="112034281586" fg:w="261230248"/><text x="33.1797%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (539,043,737 samples, 0.16%)</title><rect x="32.8975%" y="549" width="0.1584%" height="15" fill="rgb(210,190,27)" fg:x="111924510089" fg:w="539043737"/><text x="33.1475%" y="559.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::queue_children::{{closure}} (502,736,001 samples, 0.15%)</title><rect x="32.9082%" y="533" width="0.1478%" height="15" fill="rgb(222,107,31)" fg:x="111960817825" fg:w="502736001"/><text x="33.1582%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (499,854,615 samples, 0.15%)</title><rect x="32.9090%" y="517" width="0.1469%" height="15" fill="rgb(216,127,34)" fg:x="111963699211" fg:w="499854615"/><text x="33.1590%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (490,902,574 samples, 0.14%)</title><rect x="32.9116%" y="501" width="0.1443%" height="15" fill="rgb(234,116,52)" fg:x="111972651252" fg:w="490902574"/><text x="33.1616%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (481,543,001 samples, 0.14%)</title><rect x="32.9144%" y="485" width="0.1415%" height="15" fill="rgb(222,124,15)" fg:x="111982010825" fg:w="481543001"/><text x="33.1644%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (481,543,001 samples, 0.14%)</title><rect x="32.9144%" y="469" width="0.1415%" height="15" fill="rgb(231,179,28)" fg:x="111982010825" fg:w="481543001"/><text x="33.1644%" y="479.50"></text></g><g><title>alloc::alloc::alloc (481,543,001 samples, 0.14%)</title><rect x="32.9144%" y="453" width="0.1415%" height="15" fill="rgb(226,93,45)" fg:x="111982010825" fg:w="481543001"/><text x="33.1644%" y="463.50"></text></g><g><title>__rustc::__rdl_alloc (481,543,001 samples, 0.14%)</title><rect x="32.9144%" y="437" width="0.1415%" height="15" fill="rgb(215,8,51)" fg:x="111982010825" fg:w="481543001"/><text x="33.1644%" y="447.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (481,543,001 samples, 0.14%)</title><rect x="32.9144%" y="421" width="0.1415%" height="15" fill="rgb(223,106,5)" fg:x="111982010825" fg:w="481543001"/><text x="33.1644%" y="431.50"></text></g><g><title>malloc (168,041,992 samples, 0.05%)</title><rect x="33.0065%" y="405" width="0.0494%" height="15" fill="rgb(250,191,5)" fg:x="112295511834" fg:w="168041992"/><text x="33.2565%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58,479,272 samples, 0.02%)</title><rect x="33.0848%" y="533" width="0.0172%" height="15" fill="rgb(242,132,44)" fg:x="112561703418" fg:w="58479272"/><text x="33.3348%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = (u8,liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode)&gt;&gt; (1,161,104,462 samples, 0.34%)</title><rect x="33.0559%" y="549" width="0.3413%" height="15" fill="rgb(251,152,29)" fg:x="112463553826" fg:w="1161104462"/><text x="33.3059%" y="559.50"></text></g><g><title>cfree (1,004,475,598 samples, 0.30%)</title><rect x="33.1020%" y="533" width="0.2952%" height="15" fill="rgb(218,179,5)" fg:x="112620182690" fg:w="1004475598"/><text x="33.3520%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;bool&gt;&gt;&gt; (314,352,027 samples, 0.09%)</title><rect x="33.4051%" y="533" width="0.0924%" height="15" fill="rgb(227,67,19)" fg:x="113651487741" fg:w="314352027"/><text x="33.6551%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (314,352,027 samples, 0.09%)</title><rect x="33.4051%" y="517" width="0.0924%" height="15" fill="rgb(233,119,31)" fg:x="113651487741" fg:w="314352027"/><text x="33.6551%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (314,352,027 samples, 0.09%)</title><rect x="33.4051%" y="501" width="0.0924%" height="15" fill="rgb(241,120,22)" fg:x="113651487741" fg:w="314352027"/><text x="33.6551%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (314,352,027 samples, 0.09%)</title><rect x="33.4051%" y="485" width="0.0924%" height="15" fill="rgb(224,102,30)" fg:x="113651487741" fg:w="314352027"/><text x="33.6551%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt; (558,334,588 samples, 0.16%)</title><rect x="33.3972%" y="549" width="0.1641%" height="15" fill="rgb(210,164,37)" fg:x="113624658288" fg:w="558334588"/><text x="33.6472%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;i32&gt;&gt;&gt; (217,153,108 samples, 0.06%)</title><rect x="33.4975%" y="533" width="0.0638%" height="15" fill="rgb(226,191,16)" fg:x="113965839768" fg:w="217153108"/><text x="33.7475%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (217,153,108 samples, 0.06%)</title><rect x="33.4975%" y="517" width="0.0638%" height="15" fill="rgb(214,40,45)" fg:x="113965839768" fg:w="217153108"/><text x="33.7475%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (202,218,499 samples, 0.06%)</title><rect x="33.5019%" y="501" width="0.0594%" height="15" fill="rgb(244,29,26)" fg:x="113980774377" fg:w="202218499"/><text x="33.7519%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (202,218,499 samples, 0.06%)</title><rect x="33.5019%" y="485" width="0.0594%" height="15" fill="rgb(216,16,5)" fg:x="113980774377" fg:w="202218499"/><text x="33.7519%" y="495.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::queue_children (37,002,520,710 samples, 10.88%)</title><rect x="22.6965%" y="565" width="10.8760%" height="15" fill="rgb(249,76,35)" fg:x="77218367587" fg:w="37002520710"/><text x="22.9465%" y="575.50">liblevenshtein::..</text></g><g><title>liblevenshtein::transducer::intersection::Intersection&lt;N&gt;::with_parent (37,895,421 samples, 0.01%)</title><rect x="33.5613%" y="549" width="0.0111%" height="15" fill="rgb(207,11,44)" fg:x="114182992876" fg:w="37895421"/><text x="33.8113%" y="559.50"></text></g><g><title>&lt;&amp;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (61,548,546 samples, 0.02%)</title><rect x="33.6991%" y="549" width="0.0181%" height="15" fill="rgb(228,190,49)" fg:x="114651877856" fg:w="61548546"/><text x="33.9491%" y="559.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (40,864,402 samples, 0.01%)</title><rect x="33.7052%" y="533" width="0.0120%" height="15" fill="rgb(214,173,12)" fg:x="114672562000" fg:w="40864402"/><text x="33.9552%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (40,864,402 samples, 0.01%)</title><rect x="33.7052%" y="517" width="0.0120%" height="15" fill="rgb(218,26,35)" fg:x="114672562000" fg:w="40864402"/><text x="33.9552%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (40,864,402 samples, 0.01%)</title><rect x="33.7052%" y="501" width="0.0120%" height="15" fill="rgb(220,200,19)" fg:x="114672562000" fg:w="40864402"/><text x="33.9552%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (63,428,489 samples, 0.02%)</title><rect x="33.7172%" y="549" width="0.0186%" height="15" fill="rgb(239,95,49)" fg:x="114713426402" fg:w="63428489"/><text x="33.9672%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (50,308,369 samples, 0.01%)</title><rect x="33.7412%" y="549" width="0.0148%" height="15" fill="rgb(235,85,53)" fg:x="114795062379" fg:w="50308369"/><text x="33.9912%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (50,308,369 samples, 0.01%)</title><rect x="33.7412%" y="533" width="0.0148%" height="15" fill="rgb(233,133,31)" fg:x="114795062379" fg:w="50308369"/><text x="33.9912%" y="543.50"></text></g><g><title>core::ptr::write (36,349,472 samples, 0.01%)</title><rect x="33.7691%" y="533" width="0.0107%" height="15" fill="rgb(218,25,20)" fg:x="114889992102" fg:w="36349472"/><text x="34.0191%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::insert (130,094,426 samples, 0.04%)</title><rect x="33.7602%" y="549" width="0.0382%" height="15" fill="rgb(252,210,38)" fg:x="114859637630" fg:w="130094426"/><text x="34.0102%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (63,390,482 samples, 0.02%)</title><rect x="33.7798%" y="533" width="0.0186%" height="15" fill="rgb(242,134,21)" fg:x="114926341574" fg:w="63390482"/><text x="34.0298%" y="543.50"></text></g><g><title>liblevenshtein::transducer::state::State::insert::{{closure}} (35,730,171 samples, 0.01%)</title><rect x="33.8140%" y="533" width="0.0105%" height="15" fill="rgb(213,28,48)" fg:x="115042673205" fg:w="35730171"/><text x="34.0640%" y="543.50"></text></g><g><title>liblevenshtein::transducer::position::Position::subsumes (35,730,171 samples, 0.01%)</title><rect x="33.8140%" y="517" width="0.0105%" height="15" fill="rgb(250,196,2)" fg:x="115042673205" fg:w="35730171"/><text x="34.0640%" y="527.50"></text></g><g><title>liblevenshtein::transducer::state::State::insert (926,619,248 samples, 0.27%)</title><rect x="33.5724%" y="565" width="0.2724%" height="15" fill="rgb(227,5,17)" fg:x="114220888297" fg:w="926619248"/><text x="33.8224%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::retain (157,775,489 samples, 0.05%)</title><rect x="33.7984%" y="549" width="0.0464%" height="15" fill="rgb(221,226,24)" fg:x="114989732056" fg:w="157775489"/><text x="34.0484%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::truncate (69,104,169 samples, 0.02%)</title><rect x="33.8245%" y="533" width="0.0203%" height="15" fill="rgb(211,5,48)" fg:x="115078403376" fg:w="69104169"/><text x="34.0745%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (54,100,310 samples, 0.02%)</title><rect x="33.8289%" y="517" width="0.0159%" height="15" fill="rgb(219,150,6)" fg:x="115093407235" fg:w="54100310"/><text x="34.0789%" y="527.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (99,565,129 samples, 0.03%)</title><rect x="33.9745%" y="549" width="0.0293%" height="15" fill="rgb(251,46,16)" fg:x="115588807046" fg:w="99565129"/><text x="34.2245%" y="559.50"></text></g><g><title>core::ptr::read (57,335,287 samples, 0.02%)</title><rect x="33.9869%" y="533" width="0.0169%" height="15" fill="rgb(220,204,40)" fg:x="115631036888" fg:w="57335287"/><text x="34.2369%" y="543.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (91,947,583 samples, 0.03%)</title><rect x="34.0038%" y="549" width="0.0270%" height="15" fill="rgb(211,85,2)" fg:x="115688372175" fg:w="91947583"/><text x="34.2538%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::set_len (80,355,693 samples, 0.02%)</title><rect x="34.0072%" y="533" width="0.0236%" height="15" fill="rgb(229,17,7)" fg:x="115699964065" fg:w="80355693"/><text x="34.2572%" y="543.50"></text></g><g><title>liblevenshtein::transducer::pool::StatePool::release (110,936,864 samples, 0.03%)</title><rect x="34.0445%" y="549" width="0.0326%" height="15" fill="rgb(239,72,28)" fg:x="115827046248" fg:w="110936864"/><text x="34.2945%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (95,932,541 samples, 0.03%)</title><rect x="34.0490%" y="533" width="0.0282%" height="15" fill="rgb(230,47,54)" fg:x="115842050571" fg:w="95932541"/><text x="34.2990%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (95,932,541 samples, 0.03%)</title><rect x="34.0490%" y="517" width="0.0282%" height="15" fill="rgb(214,50,8)" fg:x="115842050571" fg:w="95932541"/><text x="34.2990%" y="527.50"></text></g><g><title>core::ptr::write (95,932,541 samples, 0.03%)</title><rect x="34.0490%" y="501" width="0.0282%" height="15" fill="rgb(216,198,43)" fg:x="115842050571" fg:w="95932541"/><text x="34.2990%" y="511.50"></text></g><g><title>liblevenshtein::transducer::transition::characteristic_vector (36,220,598 samples, 0.01%)</title><rect x="34.0771%" y="549" width="0.0106%" height="15" fill="rgb(234,20,35)" fg:x="115937983112" fg:w="36220598"/><text x="34.3271%" y="559.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (39,022,372 samples, 0.01%)</title><rect x="34.1186%" y="517" width="0.0115%" height="15" fill="rgb(254,45,19)" fg:x="116078864951" fg:w="39022372"/><text x="34.3686%" y="527.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (39,022,372 samples, 0.01%)</title><rect x="34.1186%" y="501" width="0.0115%" height="15" fill="rgb(219,14,44)" fg:x="116078864951" fg:w="39022372"/><text x="34.3686%" y="511.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (39,022,372 samples, 0.01%)</title><rect x="34.1186%" y="485" width="0.0115%" height="15" fill="rgb(217,220,26)" fg:x="116078864951" fg:w="39022372"/><text x="34.3686%" y="495.50"></text></g><g><title>liblevenshtein::transducer::transition::epsilon_closure_into (179,815,196 samples, 0.05%)</title><rect x="34.0878%" y="549" width="0.0529%" height="15" fill="rgb(213,158,28)" fg:x="115974203710" fg:w="179815196"/><text x="34.3378%" y="559.50"></text></g><g><title>liblevenshtein::transducer::transition::epsilon_closure_mut (179,815,196 samples, 0.05%)</title><rect x="34.0878%" y="533" width="0.0529%" height="15" fill="rgb(252,51,52)" fg:x="115974203710" fg:w="179815196"/><text x="34.3378%" y="543.50"></text></g><g><title>liblevenshtein::transducer::transition::transition_state_pooled (1,196,228,455 samples, 0.35%)</title><rect x="33.8448%" y="565" width="0.3516%" height="15" fill="rgb(246,89,16)" fg:x="115147507545" fg:w="1196228455"/><text x="34.0948%" y="575.50"></text></g><g><title>liblevenshtein::transducer::transition::transition_position (189,717,094 samples, 0.06%)</title><rect x="34.1406%" y="549" width="0.0558%" height="15" fill="rgb(216,158,49)" fg:x="116154018906" fg:w="189717094"/><text x="34.3906%" y="559.50"></text></g><g><title>liblevenshtein::transducer::transition::transition_standard (98,153,972 samples, 0.03%)</title><rect x="34.1676%" y="533" width="0.0288%" height="15" fill="rgb(236,107,19)" fg:x="116245582028" fg:w="98153972"/><text x="34.4176%" y="543.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceConsumer&lt;R,ID&gt; as rayon::iter::plumbing::Reducer&lt;T&gt;&gt;::reduce (46,779,102 samples, 0.01%)</title><rect x="34.2126%" y="549" width="0.0137%" height="15" fill="rgb(228,185,30)" fg:x="116398820838" fg:w="46779102"/><text x="34.4626%" y="559.50"></text></g><g><title>[libm.so.6] (96,281,067 samples, 0.03%)</title><rect x="35.1497%" y="325" width="0.0283%" height="15" fill="rgb(246,134,8)" fg:x="119587138843" fg:w="96281067"/><text x="35.3997%" y="335.50"></text></g><g><title>[unknown] (168,088,392 samples, 0.05%)</title><rect x="35.1780%" y="325" width="0.0494%" height="15" fill="rgb(214,143,50)" fg:x="119683419910" fg:w="168088392"/><text x="35.4280%" y="335.50"></text></g><g><title>[libm.so.6] (168,088,392 samples, 0.05%)</title><rect x="35.1780%" y="309" width="0.0494%" height="15" fill="rgb(228,75,8)" fg:x="119683419910" fg:w="168088392"/><text x="35.4280%" y="319.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (47,999,282,153 samples, 14.11%)</title><rect x="34.2783%" y="357" width="14.1082%" height="15" fill="rgb(207,175,4)" fg:x="116622453830" fg:w="47999282153"/><text x="34.5283%" y="367.50">&lt;f64 as num_traits::f..</text></g><g><title>std::f64::&lt;impl f64&gt;::exp (47,999,282,153 samples, 14.11%)</title><rect x="34.2783%" y="341" width="14.1082%" height="15" fill="rgb(205,108,24)" fg:x="116622453830" fg:w="47999282153"/><text x="34.5283%" y="351.50">std::f64::&lt;impl f64&gt;:..</text></g><g><title>exp (44,770,227,681 samples, 13.16%)</title><rect x="35.2274%" y="325" width="13.1591%" height="15" fill="rgb(244,120,49)" fg:x="119851508302" fg:w="44770227681"/><text x="35.4774%" y="335.50">exp</text></g><g><title>[libm.so.6] (30,899,913,695 samples, 9.08%)</title><rect x="39.3043%" y="309" width="9.0823%" height="15" fill="rgb(223,47,38)" fg:x="133721822288" fg:w="30899913695"/><text x="39.5543%" y="319.50">[libm.so.6]</text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (48,058,889,060 samples, 14.13%)</title><rect x="34.2783%" y="373" width="14.1257%" height="15" fill="rgb(229,179,11)" fg:x="116622453830" fg:w="48058889060"/><text x="34.5283%" y="383.50">&lt;criterion::stats::un..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (46,257,369 samples, 0.01%)</title><rect x="48.3905%" y="357" width="0.0136%" height="15" fill="rgb(231,122,1)" fg:x="164635085521" fg:w="46257369"/><text x="48.6405%" y="367.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (46,257,369 samples, 0.01%)</title><rect x="48.3905%" y="341" width="0.0136%" height="15" fill="rgb(245,119,9)" fg:x="164635085521" fg:w="46257369"/><text x="48.6405%" y="351.50"></text></g><g><title>core::f64::math::sqrt (46,257,369 samples, 0.01%)</title><rect x="48.3905%" y="325" width="0.0136%" height="15" fill="rgb(241,163,25)" fg:x="164635085521" fg:w="46257369"/><text x="48.6405%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (1,714,821,680 samples, 0.50%)</title><rect x="48.4041%" y="373" width="0.5040%" height="15" fill="rgb(217,214,3)" fg:x="164681342890" fg:w="1714821680"/><text x="48.6541%" y="383.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (49,939,171,923 samples, 14.68%)</title><rect x="34.2343%" y="533" width="14.6784%" height="15" fill="rgb(240,86,28)" fg:x="116472707789" fg:w="49939171923"/><text x="34.4843%" y="543.50">&lt;rayon::iter::map::Map..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (49,939,171,923 samples, 14.68%)</title><rect x="34.2343%" y="517" width="14.6784%" height="15" fill="rgb(215,47,9)" fg:x="116472707789" fg:w="49939171923"/><text x="34.4843%" y="527.50">rayon::iter::plumbing:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (49,939,171,923 samples, 14.68%)</title><rect x="34.2343%" y="501" width="14.6784%" height="15" fill="rgb(252,25,45)" fg:x="116472707789" fg:w="49939171923"/><text x="34.4843%" y="511.50">&lt;core::iter::adapters:..</text></g><g><title>core::option::Option&lt;T&gt;::map (49,939,171,923 samples, 14.68%)</title><rect x="34.2343%" y="485" width="14.6784%" height="15" fill="rgb(251,164,9)" fg:x="116472707789" fg:w="49939171923"/><text x="34.4843%" y="495.50">core::option::Option&lt;T..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (49,939,171,923 samples, 14.68%)</title><rect x="34.2343%" y="469" width="14.6784%" height="15" fill="rgb(233,194,0)" fg:x="116472707789" fg:w="49939171923"/><text x="34.4843%" y="479.50">core::ops::function::i..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (49,939,171,923 samples, 14.68%)</title><rect x="34.2343%" y="453" width="14.6784%" height="15" fill="rgb(249,111,24)" fg:x="116472707789" fg:w="49939171923"/><text x="34.4843%" y="463.50">core::ops::function::i..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (49,939,171,923 samples, 14.68%)</title><rect x="34.2343%" y="437" width="14.6784%" height="15" fill="rgb(250,223,3)" fg:x="116472707789" fg:w="49939171923"/><text x="34.4843%" y="447.50">criterion::stats::univ..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (49,939,171,923 samples, 14.68%)</title><rect x="34.2343%" y="421" width="14.6784%" height="15" fill="rgb(236,178,37)" fg:x="116472707789" fg:w="49939171923"/><text x="34.4843%" y="431.50">criterion::stats::univ..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49,939,171,923 samples, 14.68%)</title><rect x="34.2343%" y="405" width="14.6784%" height="15" fill="rgb(241,158,50)" fg:x="116472707789" fg:w="49939171923"/><text x="34.4843%" y="415.50">&lt;core::slice::iter::It..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (49,936,428,549 samples, 14.68%)</title><rect x="34.2351%" y="389" width="14.6776%" height="15" fill="rgb(213,121,41)" fg:x="116475451163" fg:w="49936428549"/><text x="34.4851%" y="399.50">criterion::stats::univ..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (66,681,560 samples, 0.02%)</title><rect x="48.9278%" y="277" width="0.0196%" height="15" fill="rgb(240,92,3)" fg:x="166463340925" fg:w="66681560"/><text x="49.1778%" y="287.50"></text></g><g><title>criterion::analysis::regression::{{closure}} (74,805,396 samples, 0.02%)</title><rect x="48.9265%" y="373" width="0.0220%" height="15" fill="rgb(205,123,3)" fg:x="166458743755" fg:w="74805396"/><text x="49.1765%" y="383.50"></text></g><g><title>criterion::stats::bivariate::regression::Slope&lt;A&gt;::fit (74,805,396 samples, 0.02%)</title><rect x="48.9265%" y="357" width="0.0220%" height="15" fill="rgb(205,97,47)" fg:x="166458743755" fg:w="74805396"/><text x="49.1765%" y="367.50"></text></g><g><title>criterion::stats::dot (74,311,796 samples, 0.02%)</title><rect x="48.9266%" y="341" width="0.0218%" height="15" fill="rgb(247,152,14)" fg:x="166459237355" fg:w="74311796"/><text x="49.1766%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (74,311,796 samples, 0.02%)</title><rect x="48.9266%" y="325" width="0.0218%" height="15" fill="rgb(248,195,53)" fg:x="166459237355" fg:w="74311796"/><text x="49.1766%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (74,311,796 samples, 0.02%)</title><rect x="48.9266%" y="309" width="0.0218%" height="15" fill="rgb(226,201,16)" fg:x="166459237355" fg:w="74311796"/><text x="49.1766%" y="319.50"></text></g><g><title>criterion::stats::dot::{{closure}} (70,208,226 samples, 0.02%)</title><rect x="48.9278%" y="293" width="0.0206%" height="15" fill="rgb(205,98,0)" fg:x="166463340925" fg:w="70208226"/><text x="49.1778%" y="303.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (213,558,857 samples, 0.06%)</title><rect x="48.9265%" y="389" width="0.0628%" height="15" fill="rgb(214,191,48)" fg:x="166458743755" fg:w="213558857"/><text x="49.1765%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (138,753,461 samples, 0.04%)</title><rect x="48.9485%" y="373" width="0.0408%" height="15" fill="rgb(237,112,39)" fg:x="166533549151" fg:w="138753461"/><text x="49.1985%" y="383.50"></text></g><g><title>oorandom::Rand64::rand_range (66,825,554 samples, 0.02%)</title><rect x="48.9696%" y="357" width="0.0196%" height="15" fill="rgb(247,203,27)" fg:x="166605477058" fg:w="66825554"/><text x="49.2196%" y="367.50"></text></g><g><title>oorandom::Rand64::rand_u64 (54,951,892 samples, 0.02%)</title><rect x="48.9731%" y="341" width="0.0162%" height="15" fill="rgb(235,124,28)" fg:x="166617350720" fg:w="54951892"/><text x="49.2231%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (294,320,575 samples, 0.09%)</title><rect x="48.9971%" y="245" width="0.0865%" height="15" fill="rgb(208,207,46)" fg:x="166698843787" fg:w="294320575"/><text x="49.2471%" y="255.50"></text></g><g><title>core::ops::function::FnMut::call_mut (294,320,575 samples, 0.09%)</title><rect x="48.9971%" y="229" width="0.0865%" height="15" fill="rgb(234,176,4)" fg:x="166698843787" fg:w="294320575"/><text x="49.2471%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (294,320,575 samples, 0.09%)</title><rect x="48.9971%" y="213" width="0.0865%" height="15" fill="rgb(230,133,28)" fg:x="166698843787" fg:w="294320575"/><text x="49.2471%" y="223.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (318,671,731 samples, 0.09%)</title><rect x="48.9905%" y="341" width="0.0937%" height="15" fill="rgb(211,137,40)" fg:x="166676417189" fg:w="318671731"/><text x="49.2405%" y="351.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (310,475,640 samples, 0.09%)</title><rect x="48.9929%" y="325" width="0.0913%" height="15" fill="rgb(254,35,13)" fg:x="166684613280" fg:w="310475640"/><text x="49.2429%" y="335.50"></text></g><g><title>criterion::stats::sum (310,475,640 samples, 0.09%)</title><rect x="48.9929%" y="309" width="0.0913%" height="15" fill="rgb(225,49,51)" fg:x="166684613280" fg:w="310475640"/><text x="49.2429%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (310,475,640 samples, 0.09%)</title><rect x="48.9929%" y="293" width="0.0913%" height="15" fill="rgb(251,10,15)" fg:x="166684613280" fg:w="310475640"/><text x="49.2429%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (310,475,640 samples, 0.09%)</title><rect x="48.9929%" y="277" width="0.0913%" height="15" fill="rgb(228,207,15)" fg:x="166684613280" fg:w="310475640"/><text x="49.2429%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (310,475,640 samples, 0.09%)</title><rect x="48.9929%" y="261" width="0.0913%" height="15" fill="rgb(241,99,19)" fg:x="166684613280" fg:w="310475640"/><text x="49.2429%" y="271.50"></text></g><g><title>core::ops::function::FnMut::call_mut (111,321,084 samples, 0.03%)</title><rect x="49.0883%" y="277" width="0.0327%" height="15" fill="rgb(207,104,49)" fg:x="167009270273" fg:w="111321084"/><text x="49.3383%" y="287.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (111,321,084 samples, 0.03%)</title><rect x="49.0883%" y="261" width="0.0327%" height="15" fill="rgb(234,99,18)" fg:x="167009270273" fg:w="111321084"/><text x="49.3383%" y="271.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (135,346,310 samples, 0.04%)</title><rect x="49.0883%" y="293" width="0.0398%" height="15" fill="rgb(213,191,49)" fg:x="167009270273" fg:w="135346310"/><text x="49.3383%" y="303.50"></text></g><g><title>criterion::analysis::compare::t_test::{{closure}} (470,522,752 samples, 0.14%)</title><rect x="48.9905%" y="373" width="0.1383%" height="15" fill="rgb(210,226,19)" fg:x="166676417189" fg:w="470522752"/><text x="49.2405%" y="383.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::t (470,522,752 samples, 0.14%)</title><rect x="48.9905%" y="357" width="0.1383%" height="15" fill="rgb(229,97,18)" fg:x="166676417189" fg:w="470522752"/><text x="49.2405%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var (151,851,021 samples, 0.04%)</title><rect x="49.0841%" y="341" width="0.0446%" height="15" fill="rgb(211,167,15)" fg:x="166995088920" fg:w="151851021"/><text x="49.3341%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (151,851,021 samples, 0.04%)</title><rect x="49.0841%" y="325" width="0.0446%" height="15" fill="rgb(210,169,34)" fg:x="166995088920" fg:w="151851021"/><text x="49.3341%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (151,851,021 samples, 0.04%)</title><rect x="49.0841%" y="309" width="0.0446%" height="15" fill="rgb(241,121,31)" fg:x="166995088920" fg:w="151851021"/><text x="49.3341%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34,812,253 samples, 0.01%)</title><rect x="49.1616%" y="341" width="0.0102%" height="15" fill="rgb(232,40,11)" fg:x="167258482298" fg:w="34812253"/><text x="49.4116%" y="351.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (34,812,253 samples, 0.01%)</title><rect x="49.1616%" y="325" width="0.0102%" height="15" fill="rgb(205,86,26)" fg:x="167258482298" fg:w="34812253"/><text x="49.4116%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (915,057,075 samples, 0.27%)</title><rect x="48.9154%" y="517" width="0.2690%" height="15" fill="rgb(231,126,28)" fg:x="166421017842" fg:w="915057075"/><text x="49.1654%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (915,057,075 samples, 0.27%)</title><rect x="48.9154%" y="501" width="0.2690%" height="15" fill="rgb(219,221,18)" fg:x="166421017842" fg:w="915057075"/><text x="49.1654%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (915,057,075 samples, 0.27%)</title><rect x="48.9154%" y="485" width="0.2690%" height="15" fill="rgb(211,40,0)" fg:x="166421017842" fg:w="915057075"/><text x="49.1654%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (915,057,075 samples, 0.27%)</title><rect x="48.9154%" y="469" width="0.2690%" height="15" fill="rgb(239,85,43)" fg:x="166421017842" fg:w="915057075"/><text x="49.1654%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (915,057,075 samples, 0.27%)</title><rect x="48.9154%" y="453" width="0.2690%" height="15" fill="rgb(231,55,21)" fg:x="166421017842" fg:w="915057075"/><text x="49.1654%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (911,006,215 samples, 0.27%)</title><rect x="48.9166%" y="437" width="0.2678%" height="15" fill="rgb(225,184,43)" fg:x="166425068702" fg:w="911006215"/><text x="49.1666%" y="447.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (877,331,162 samples, 0.26%)</title><rect x="48.9265%" y="421" width="0.2579%" height="15" fill="rgb(251,158,41)" fg:x="166458743755" fg:w="877331162"/><text x="49.1765%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (877,331,162 samples, 0.26%)</title><rect x="48.9265%" y="405" width="0.2579%" height="15" fill="rgb(234,159,37)" fg:x="166458743755" fg:w="877331162"/><text x="49.1765%" y="415.50"></text></g><g><title>criterion::stats::univariate::mixed::bootstrap::{{closure}} (663,772,305 samples, 0.20%)</title><rect x="48.9893%" y="389" width="0.1951%" height="15" fill="rgb(216,204,22)" fg:x="166672302612" fg:w="663772305"/><text x="49.2393%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::new (189,134,976 samples, 0.06%)</title><rect x="49.1288%" y="373" width="0.0556%" height="15" fill="rgb(214,17,3)" fg:x="167146939941" fg:w="189134976"/><text x="49.3788%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (189,134,976 samples, 0.06%)</title><rect x="49.1288%" y="357" width="0.0556%" height="15" fill="rgb(212,111,17)" fg:x="167146939941" fg:w="189134976"/><text x="49.3788%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::new::{{closure}} (42,780,366 samples, 0.01%)</title><rect x="49.1718%" y="341" width="0.0126%" height="15" fill="rgb(221,157,24)" fg:x="167293294551" fg:w="42780366"/><text x="49.4218%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::is_nan (42,780,366 samples, 0.01%)</title><rect x="49.1718%" y="325" width="0.0126%" height="15" fill="rgb(252,16,13)" fg:x="167293294551" fg:w="42780366"/><text x="49.4218%" y="335.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::is_nan (42,780,366 samples, 0.01%)</title><rect x="49.1718%" y="309" width="0.0126%" height="15" fill="rgb(221,62,2)" fg:x="167293294551" fg:w="42780366"/><text x="49.4218%" y="319.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (938,508,910 samples, 0.28%)</title><rect x="48.9127%" y="533" width="0.2759%" height="15" fill="rgb(247,87,22)" fg:x="166411879712" fg:w="938508910"/><text x="49.1627%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (50,885,561,106 samples, 14.96%)</title><rect x="34.2337%" y="549" width="14.9566%" height="15" fill="rgb(215,73,9)" fg:x="116470517750" fg:w="50885561106"/><text x="34.4837%" y="559.50">rayon::iter::plumbing::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (50,996,177,436 samples, 14.99%)</title><rect x="34.2047%" y="565" width="14.9891%" height="15" fill="rgb(207,175,33)" fg:x="116372056735" fg:w="50996177436"/><text x="34.4547%" y="575.50">rayon::iter::plumbing::..</text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,011,557,375 samples, 0.30%)</title><rect x="49.7110%" y="533" width="0.2973%" height="15" fill="rgb(243,129,54)" fg:x="169127932663" fg:w="1011557375"/><text x="49.9610%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1,011,557,375 samples, 0.30%)</title><rect x="49.7110%" y="517" width="0.2973%" height="15" fill="rgb(227,119,45)" fg:x="169127932663" fg:w="1011557375"/><text x="49.9610%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1,011,557,375 samples, 0.30%)</title><rect x="49.7110%" y="501" width="0.2973%" height="15" fill="rgb(205,109,36)" fg:x="169127932663" fg:w="1011557375"/><text x="49.9610%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (445,632,449 samples, 0.13%)</title><rect x="49.8774%" y="485" width="0.1310%" height="15" fill="rgb(205,6,39)" fg:x="169693857589" fg:w="445632449"/><text x="50.1274%" y="495.50"></text></g><g><title>core::ptr::copy_nonoverlapping (478,130,769 samples, 0.14%)</title><rect x="50.0084%" y="533" width="0.1405%" height="15" fill="rgb(221,32,16)" fg:x="170139490038" fg:w="478130769"/><text x="50.2584%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon::slice::sort::InsertionHole&lt;f64&gt;&gt; (583,070,029 samples, 0.17%)</title><rect x="50.1489%" y="533" width="0.1714%" height="15" fill="rgb(228,144,50)" fg:x="170617620807" fg:w="583070029"/><text x="50.3989%" y="543.50"></text></g><g><title>&lt;rayon::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (583,070,029 samples, 0.17%)</title><rect x="50.1489%" y="517" width="0.1714%" height="15" fill="rgb(229,201,53)" fg:x="170617620807" fg:w="583070029"/><text x="50.3989%" y="527.50"></text></g><g><title>core::ptr::copy_nonoverlapping (583,070,029 samples, 0.17%)</title><rect x="50.1489%" y="501" width="0.1714%" height="15" fill="rgb(249,153,27)" fg:x="170617620807" fg:w="583070029"/><text x="50.3989%" y="511.50"></text></g><g><title>rayon::slice::sort::insertion_sort_shift_left (5,330,098,067 samples, 1.57%)</title><rect x="49.1940%" y="565" width="1.5667%" height="15" fill="rgb(227,106,25)" fg:x="167368735675" fg:w="5330098067"/><text x="49.4440%" y="575.50"></text></g><g><title>rayon::slice::sort::insert_tail (5,298,622,751 samples, 1.56%)</title><rect x="49.2032%" y="549" width="1.5574%" height="15" fill="rgb(230,65,29)" fg:x="167400210991" fg:w="5298622751"/><text x="49.4532%" y="559.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (1,471,119,996 samples, 0.43%)</title><rect x="50.3282%" y="533" width="0.4324%" height="15" fill="rgb(221,57,46)" fg:x="171227713746" fg:w="1471119996"/><text x="50.5782%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1,471,119,996 samples, 0.43%)</title><rect x="50.3282%" y="517" width="0.4324%" height="15" fill="rgb(229,161,17)" fg:x="171227713746" fg:w="1471119996"/><text x="50.5782%" y="527.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (44,261,356 samples, 0.01%)</title><rect x="50.8686%" y="549" width="0.0130%" height="15" fill="rgb(222,213,11)" fg:x="173066194606" fg:w="44261356"/><text x="51.1186%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (44,261,356 samples, 0.01%)</title><rect x="50.8686%" y="533" width="0.0130%" height="15" fill="rgb(235,35,13)" fg:x="173066194606" fg:w="44261356"/><text x="51.1186%" y="543.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (82,305,843 samples, 0.02%)</title><rect x="50.9574%" y="501" width="0.0242%" height="15" fill="rgb(233,158,34)" fg:x="173368289441" fg:w="82305843"/><text x="51.2074%" y="511.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (82,305,843 samples, 0.02%)</title><rect x="50.9574%" y="485" width="0.0242%" height="15" fill="rgb(215,151,48)" fg:x="173368289441" fg:w="82305843"/><text x="51.2074%" y="495.50"></text></g><g><title>rayon::slice::sort::choose_pivot (534,784,094 samples, 0.16%)</title><rect x="50.8816%" y="549" width="0.1572%" height="15" fill="rgb(229,84,14)" fg:x="173110455962" fg:w="534784094"/><text x="51.1316%" y="559.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (473,364,223 samples, 0.14%)</title><rect x="50.8997%" y="533" width="0.1391%" height="15" fill="rgb(229,68,14)" fg:x="173171875833" fg:w="473364223"/><text x="51.1497%" y="543.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (443,275,828 samples, 0.13%)</title><rect x="50.9085%" y="517" width="0.1303%" height="15" fill="rgb(243,106,26)" fg:x="173201964228" fg:w="443275828"/><text x="51.1585%" y="527.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (194,644,772 samples, 0.06%)</title><rect x="50.9816%" y="501" width="0.0572%" height="15" fill="rgb(206,45,38)" fg:x="173450595284" fg:w="194644772"/><text x="51.2316%" y="511.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (82,768,441 samples, 0.02%)</title><rect x="51.0145%" y="485" width="0.0243%" height="15" fill="rgb(226,6,15)" fg:x="173562471615" fg:w="82768441"/><text x="51.2645%" y="495.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (82,768,441 samples, 0.02%)</title><rect x="51.0145%" y="469" width="0.0243%" height="15" fill="rgb(232,22,54)" fg:x="173562471615" fg:w="82768441"/><text x="51.2645%" y="479.50"></text></g><g><title>core::ptr::copy_nonoverlapping (297,127,161 samples, 0.09%)</title><rect x="51.7057%" y="517" width="0.0873%" height="15" fill="rgb(229,222,32)" fg:x="175914181107" fg:w="297127161"/><text x="51.9557%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (174,938,500 samples, 0.05%)</title><rect x="51.7930%" y="517" width="0.0514%" height="15" fill="rgb(228,62,29)" fg:x="176211308268" fg:w="174938500"/><text x="52.0430%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (66,523,039 samples, 0.02%)</title><rect x="51.8444%" y="517" width="0.0196%" height="15" fill="rgb(251,103,34)" fg:x="176386246768" fg:w="66523039"/><text x="52.0944%" y="527.50"></text></g><g><title>core::ptr::copy (40,917,039 samples, 0.01%)</title><rect x="51.8640%" y="501" width="0.0120%" height="15" fill="rgb(233,12,30)" fg:x="176452769807" fg:w="40917039"/><text x="52.1140%" y="511.50"></text></g><g><title>core::ptr::swap (89,159,442 samples, 0.03%)</title><rect x="51.8640%" y="517" width="0.0262%" height="15" fill="rgb(238,52,0)" fg:x="176452769807" fg:w="89159442"/><text x="52.1140%" y="527.50"></text></g><g><title>core::ptr::copy_nonoverlapping (48,242,403 samples, 0.01%)</title><rect x="51.8760%" y="501" width="0.0142%" height="15" fill="rgb(223,98,5)" fg:x="176493686846" fg:w="48242403"/><text x="52.1260%" y="511.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (1,112,430,058 samples, 0.33%)</title><rect x="51.8902%" y="517" width="0.3270%" height="15" fill="rgb(228,75,37)" fg:x="176541929249" fg:w="1112430058"/><text x="52.1402%" y="527.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1,112,430,058 samples, 0.33%)</title><rect x="51.8902%" y="501" width="0.3270%" height="15" fill="rgb(205,115,49)" fg:x="176541929249" fg:w="1112430058"/><text x="52.1402%" y="511.50"></text></g><g><title>rayon::slice::sort::partition (4,071,612,224 samples, 1.20%)</title><rect x="51.0388%" y="549" width="1.1968%" height="15" fill="rgb(250,154,43)" fg:x="173645240056" fg:w="4071612224"/><text x="51.2888%" y="559.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks (4,011,884,199 samples, 1.18%)</title><rect x="51.0563%" y="533" width="1.1792%" height="15" fill="rgb(226,43,29)" fg:x="173704968081" fg:w="4011884199"/><text x="51.3063%" y="543.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks::width (62,492,973 samples, 0.02%)</title><rect x="52.2172%" y="517" width="0.0184%" height="15" fill="rgb(249,228,39)" fg:x="177654359307" fg:w="62492973"/><text x="52.4672%" y="527.50"></text></g><g><title>rayon::slice::sort::recurse (5,014,882,582 samples, 1.47%)</title><rect x="50.7629%" y="565" width="1.4740%" height="15" fill="rgb(216,79,43)" fg:x="172706696722" fg:w="5014882582"/><text x="51.0129%" y="575.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (779,366,811 samples, 0.23%)</title><rect x="52.2454%" y="293" width="0.2291%" height="15" fill="rgb(228,95,12)" fg:x="177750359795" fg:w="779366811"/><text x="52.4954%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (779,366,811 samples, 0.23%)</title><rect x="52.2454%" y="277" width="0.2291%" height="15" fill="rgb(249,221,15)" fg:x="177750359795" fg:w="779366811"/><text x="52.4954%" y="287.50"></text></g><g><title>exp (749,391,511 samples, 0.22%)</title><rect x="52.2542%" y="261" width="0.2203%" height="15" fill="rgb(233,34,13)" fg:x="177780335095" fg:w="749391511"/><text x="52.5042%" y="271.50"></text></g><g><title>[libm.so.6] (534,053,347 samples, 0.16%)</title><rect x="52.3175%" y="245" width="0.1570%" height="15" fill="rgb(214,103,39)" fg:x="177995673259" fg:w="534053347"/><text x="52.5675%" y="255.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (75,530,806 samples, 0.02%)</title><rect x="52.4745%" y="293" width="0.0222%" height="15" fill="rgb(251,126,39)" fg:x="178529726606" fg:w="75530806"/><text x="52.7245%" y="303.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (75,530,806 samples, 0.02%)</title><rect x="52.4745%" y="277" width="0.0222%" height="15" fill="rgb(214,216,36)" fg:x="178529726606" fg:w="75530806"/><text x="52.7245%" y="287.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (884,567,774 samples, 0.26%)</title><rect x="52.2446%" y="309" width="0.2600%" height="15" fill="rgb(220,221,8)" fg:x="177747592655" fg:w="884567774"/><text x="52.4946%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (62,987,293 samples, 0.02%)</title><rect x="52.5046%" y="309" width="0.0185%" height="15" fill="rgb(240,216,3)" fg:x="178632160429" fg:w="62987293"/><text x="52.7546%" y="319.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (971,740,613 samples, 0.29%)</title><rect x="52.2390%" y="549" width="0.2856%" height="15" fill="rgb(232,218,17)" fg:x="177728533945" fg:w="971740613"/><text x="52.4890%" y="559.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (971,740,613 samples, 0.29%)</title><rect x="52.2390%" y="533" width="0.2856%" height="15" fill="rgb(229,163,45)" fg:x="177728533945" fg:w="971740613"/><text x="52.4890%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (971,740,613 samples, 0.29%)</title><rect x="52.2390%" y="517" width="0.2856%" height="15" fill="rgb(231,110,42)" fg:x="177728533945" fg:w="971740613"/><text x="52.4890%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="501" width="0.2800%" height="15" fill="rgb(208,170,48)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="485" width="0.2800%" height="15" fill="rgb(239,116,25)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="495.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="469" width="0.2800%" height="15" fill="rgb(219,200,50)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="479.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="453" width="0.2800%" height="15" fill="rgb(245,200,0)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="437" width="0.2800%" height="15" fill="rgb(245,119,33)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="421" width="0.2800%" height="15" fill="rgb(231,125,12)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="405" width="0.2800%" height="15" fill="rgb(216,96,41)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="389" width="0.2800%" height="15" fill="rgb(248,43,45)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="399.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="373" width="0.2800%" height="15" fill="rgb(217,222,7)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="383.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="357" width="0.2800%" height="15" fill="rgb(233,28,6)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="341" width="0.2800%" height="15" fill="rgb(231,218,15)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="351.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (952,681,903 samples, 0.28%)</title><rect x="52.2446%" y="325" width="0.2800%" height="15" fill="rgb(226,171,48)" fg:x="177747592655" fg:w="952681903"/><text x="52.4946%" y="335.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::load (40,749,093 samples, 0.01%)</title><rect x="52.5263%" y="485" width="0.0120%" height="15" fill="rgb(235,201,9)" fg:x="178706042361" fg:w="40749093"/><text x="52.7763%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (40,749,093 samples, 0.01%)</title><rect x="52.5263%" y="469" width="0.0120%" height="15" fill="rgb(217,80,15)" fg:x="178706042361" fg:w="40749093"/><text x="52.7763%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (40,749,093 samples, 0.01%)</title><rect x="52.5263%" y="453" width="0.0120%" height="15" fill="rgb(219,152,8)" fg:x="178706042361" fg:w="40749093"/><text x="52.7763%" y="463.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (45,467,437 samples, 0.01%)</title><rect x="52.5254%" y="549" width="0.0134%" height="15" fill="rgb(243,107,38)" fg:x="178702971318" fg:w="45467437"/><text x="52.7754%" y="559.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (45,467,437 samples, 0.01%)</title><rect x="52.5254%" y="533" width="0.0134%" height="15" fill="rgb(231,17,5)" fg:x="178702971318" fg:w="45467437"/><text x="52.7754%" y="543.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (45,467,437 samples, 0.01%)</title><rect x="52.5254%" y="517" width="0.0134%" height="15" fill="rgb(209,25,54)" fg:x="178702971318" fg:w="45467437"/><text x="52.7754%" y="527.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (45,467,437 samples, 0.01%)</title><rect x="52.5254%" y="501" width="0.0134%" height="15" fill="rgb(219,0,2)" fg:x="178702971318" fg:w="45467437"/><text x="52.7754%" y="511.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (1,238,599,075 samples, 0.36%)</title><rect x="52.5484%" y="229" width="0.3641%" height="15" fill="rgb(246,9,5)" fg:x="178781146684" fg:w="1238599075"/><text x="52.7984%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (1,238,599,075 samples, 0.36%)</title><rect x="52.5484%" y="213" width="0.3641%" height="15" fill="rgb(226,159,4)" fg:x="178781146684" fg:w="1238599075"/><text x="52.7984%" y="223.50"></text></g><g><title>exp (1,205,009,381 samples, 0.35%)</title><rect x="52.5582%" y="197" width="0.3542%" height="15" fill="rgb(219,175,34)" fg:x="178814736378" fg:w="1205009381"/><text x="52.8082%" y="207.50"></text></g><g><title>[libm.so.6] (817,541,016 samples, 0.24%)</title><rect x="52.6721%" y="181" width="0.2403%" height="15" fill="rgb(236,10,46)" fg:x="179202204743" fg:w="817541016"/><text x="52.9221%" y="191.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (113,784,516 samples, 0.03%)</title><rect x="52.9124%" y="229" width="0.0334%" height="15" fill="rgb(240,211,16)" fg:x="180019745759" fg:w="113784516"/><text x="53.1624%" y="239.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (113,784,516 samples, 0.03%)</title><rect x="52.9124%" y="213" width="0.0334%" height="15" fill="rgb(205,3,43)" fg:x="180019745759" fg:w="113784516"/><text x="53.1624%" y="223.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (1,409,175,485 samples, 0.41%)</title><rect x="52.5465%" y="245" width="0.4142%" height="15" fill="rgb(245,7,22)" fg:x="178774854659" fg:w="1409175485"/><text x="52.7965%" y="255.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (50,499,869 samples, 0.01%)</title><rect x="52.9459%" y="229" width="0.0148%" height="15" fill="rgb(239,132,32)" fg:x="180133530275" fg:w="50499869"/><text x="53.1959%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (50,499,869 samples, 0.01%)</title><rect x="52.9459%" y="213" width="0.0148%" height="15" fill="rgb(228,202,34)" fg:x="180133530275" fg:w="50499869"/><text x="53.1959%" y="223.50"></text></g><g><title>core::f64::math::sqrt (50,499,869 samples, 0.01%)</title><rect x="52.9459%" y="197" width="0.0148%" height="15" fill="rgb(254,200,22)" fg:x="180133530275" fg:w="50499869"/><text x="53.1959%" y="207.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (115,220,761 samples, 0.03%)</title><rect x="52.9607%" y="245" width="0.0339%" height="15" fill="rgb(219,10,39)" fg:x="180184030144" fg:w="115220761"/><text x="53.2107%" y="255.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,585,769,083 samples, 0.76%)</title><rect x="52.2369%" y="565" width="0.7600%" height="15" fill="rgb(226,210,39)" fg:x="177721579304" fg:w="2585769083"/><text x="52.4869%" y="575.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,558,909,632 samples, 0.46%)</title><rect x="52.5388%" y="549" width="0.4582%" height="15" fill="rgb(208,219,16)" fg:x="178748438755" fg:w="1558909632"/><text x="52.7888%" y="559.50"></text></g><g><title>std::panic::catch_unwind (1,558,909,632 samples, 0.46%)</title><rect x="52.5388%" y="533" width="0.4582%" height="15" fill="rgb(216,158,51)" fg:x="178748438755" fg:w="1558909632"/><text x="52.7888%" y="543.50"></text></g><g><title>std::panicking::catch_unwind (1,558,909,632 samples, 0.46%)</title><rect x="52.5388%" y="517" width="0.4582%" height="15" fill="rgb(233,14,44)" fg:x="178748438755" fg:w="1558909632"/><text x="52.7888%" y="527.50"></text></g><g><title>std::panicking::catch_unwind::do_call (1,558,909,632 samples, 0.46%)</title><rect x="52.5388%" y="501" width="0.4582%" height="15" fill="rgb(237,97,39)" fg:x="178748438755" fg:w="1558909632"/><text x="52.7888%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,558,909,632 samples, 0.46%)</title><rect x="52.5388%" y="485" width="0.4582%" height="15" fill="rgb(218,198,43)" fg:x="178748438755" fg:w="1558909632"/><text x="52.7888%" y="495.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,558,909,632 samples, 0.46%)</title><rect x="52.5388%" y="469" width="0.4582%" height="15" fill="rgb(231,104,20)" fg:x="178748438755" fg:w="1558909632"/><text x="52.7888%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,558,909,632 samples, 0.46%)</title><rect x="52.5388%" y="453" width="0.4582%" height="15" fill="rgb(254,36,13)" fg:x="178748438755" fg:w="1558909632"/><text x="52.7888%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="437" width="0.4504%" height="15" fill="rgb(248,14,50)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="421" width="0.4504%" height="15" fill="rgb(217,107,29)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="431.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="405" width="0.4504%" height="15" fill="rgb(251,169,33)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="415.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="389" width="0.4504%" height="15" fill="rgb(217,108,32)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="373" width="0.4504%" height="15" fill="rgb(219,66,42)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="357" width="0.4504%" height="15" fill="rgb(206,180,7)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="341" width="0.4504%" height="15" fill="rgb(208,226,31)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="325" width="0.4504%" height="15" fill="rgb(218,26,49)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="335.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="309" width="0.4504%" height="15" fill="rgb(233,197,48)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="293" width="0.4504%" height="15" fill="rgb(252,181,51)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="277" width="0.4504%" height="15" fill="rgb(253,90,19)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="287.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (1,532,493,728 samples, 0.45%)</title><rect x="52.5465%" y="261" width="0.4504%" height="15" fill="rgb(215,171,30)" fg:x="178774854659" fg:w="1532493728"/><text x="52.7965%" y="271.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (177,996,052 samples, 0.05%)</title><rect x="53.0084%" y="501" width="0.0523%" height="15" fill="rgb(214,222,9)" fg:x="180346334208" fg:w="177996052"/><text x="53.2584%" y="511.50"></text></g><g><title>std::thread::yield_now (177,996,052 samples, 0.05%)</title><rect x="53.0084%" y="485" width="0.0523%" height="15" fill="rgb(223,3,22)" fg:x="180346334208" fg:w="177996052"/><text x="53.2584%" y="495.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (177,996,052 samples, 0.05%)</title><rect x="53.0084%" y="469" width="0.0523%" height="15" fill="rgb(225,196,46)" fg:x="180346334208" fg:w="177996052"/><text x="53.2584%" y="479.50"></text></g><g><title>__sched_yield (177,996,052 samples, 0.05%)</title><rect x="53.0084%" y="453" width="0.0523%" height="15" fill="rgb(209,110,37)" fg:x="180346334208" fg:w="177996052"/><text x="53.2584%" y="463.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (197,209,559 samples, 0.06%)</title><rect x="53.0051%" y="549" width="0.0580%" height="15" fill="rgb(249,89,12)" fg:x="180334936416" fg:w="197209559"/><text x="53.2551%" y="559.50"></text></g><g><title>crossbeam_epoch::default::pin (197,209,559 samples, 0.06%)</title><rect x="53.0051%" y="533" width="0.0580%" height="15" fill="rgb(226,27,33)" fg:x="180334936416" fg:w="197209559"/><text x="53.2551%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (193,412,854 samples, 0.06%)</title><rect x="53.0062%" y="517" width="0.0568%" height="15" fill="rgb(213,82,22)" fg:x="180338733121" fg:w="193412854"/><text x="53.2562%" y="527.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (242,284,436 samples, 0.07%)</title><rect x="53.0766%" y="485" width="0.0712%" height="15" fill="rgb(248,140,0)" fg:x="180578300937" fg:w="242284436"/><text x="53.3266%" y="495.50"></text></g><g><title>syscall (242,284,436 samples, 0.07%)</title><rect x="53.0766%" y="469" width="0.0712%" height="15" fill="rgb(228,106,3)" fg:x="180578300937" fg:w="242284436"/><text x="53.3266%" y="479.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (516,051,251 samples, 0.15%)</title><rect x="52.9974%" y="565" width="0.1517%" height="15" fill="rgb(209,23,37)" fg:x="180308923680" fg:w="516051251"/><text x="53.2474%" y="575.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (262,399,719 samples, 0.08%)</title><rect x="53.0720%" y="549" width="0.0771%" height="15" fill="rgb(241,93,50)" fg:x="180562575212" fg:w="262399719"/><text x="53.3220%" y="559.50"></text></g><g><title>std::sync::poison::condvar::Condvar::wait (246,673,994 samples, 0.07%)</title><rect x="53.0766%" y="533" width="0.0725%" height="15" fill="rgb(253,46,43)" fg:x="180578300937" fg:w="246673994"/><text x="53.3266%" y="543.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (246,673,994 samples, 0.07%)</title><rect x="53.0766%" y="517" width="0.0725%" height="15" fill="rgb(226,206,43)" fg:x="180578300937" fg:w="246673994"/><text x="53.3266%" y="527.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (246,673,994 samples, 0.07%)</title><rect x="53.0766%" y="501" width="0.0725%" height="15" fill="rgb(217,54,7)" fg:x="180578300937" fg:w="246673994"/><text x="53.3266%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (65,904,843 samples, 0.02%)</title><rect x="53.1683%" y="389" width="0.0194%" height="15" fill="rgb(223,5,52)" fg:x="180890244511" fg:w="65904843"/><text x="53.4183%" y="399.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (65,904,843 samples, 0.02%)</title><rect x="53.1683%" y="373" width="0.0194%" height="15" fill="rgb(206,52,46)" fg:x="180890244511" fg:w="65904843"/><text x="53.4183%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (113,869,111 samples, 0.03%)</title><rect x="53.1550%" y="485" width="0.0335%" height="15" fill="rgb(253,136,11)" fg:x="180845016748" fg:w="113869111"/><text x="53.4050%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (113,869,111 samples, 0.03%)</title><rect x="53.1550%" y="469" width="0.0335%" height="15" fill="rgb(208,106,33)" fg:x="180845016748" fg:w="113869111"/><text x="53.4050%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (113,869,111 samples, 0.03%)</title><rect x="53.1550%" y="453" width="0.0335%" height="15" fill="rgb(206,54,4)" fg:x="180845016748" fg:w="113869111"/><text x="53.4050%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (113,869,111 samples, 0.03%)</title><rect x="53.1550%" y="437" width="0.0335%" height="15" fill="rgb(213,3,15)" fg:x="180845016748" fg:w="113869111"/><text x="53.4050%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (68,641,348 samples, 0.02%)</title><rect x="53.1683%" y="421" width="0.0202%" height="15" fill="rgb(252,211,39)" fg:x="180890244511" fg:w="68641348"/><text x="53.4183%" y="431.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (68,641,348 samples, 0.02%)</title><rect x="53.1683%" y="405" width="0.0202%" height="15" fill="rgb(223,6,36)" fg:x="180890244511" fg:w="68641348"/><text x="53.4183%" y="415.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (133,414,963 samples, 0.04%)</title><rect x="53.1533%" y="549" width="0.0392%" height="15" fill="rgb(252,169,45)" fg:x="180839278070" fg:w="133414963"/><text x="53.4033%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (133,414,963 samples, 0.04%)</title><rect x="53.1533%" y="533" width="0.0392%" height="15" fill="rgb(212,48,26)" fg:x="180839278070" fg:w="133414963"/><text x="53.4033%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::{{closure}} (133,414,963 samples, 0.04%)</title><rect x="53.1533%" y="517" width="0.0392%" height="15" fill="rgb(251,102,48)" fg:x="180839278070" fg:w="133414963"/><text x="53.4033%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (128,177,789 samples, 0.04%)</title><rect x="53.1548%" y="501" width="0.0377%" height="15" fill="rgb(243,208,16)" fg:x="180844515244" fg:w="128177789"/><text x="53.4048%" y="511.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (56,864,109 samples, 0.02%)</title><rect x="53.1925%" y="549" width="0.0167%" height="15" fill="rgb(219,96,24)" fg:x="180972693033" fg:w="56864109"/><text x="53.4425%" y="559.50"></text></g><g><title>std::thread::yield_now (45,638,478 samples, 0.01%)</title><rect x="53.1958%" y="533" width="0.0134%" height="15" fill="rgb(219,33,29)" fg:x="180983918664" fg:w="45638478"/><text x="53.4458%" y="543.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (45,638,478 samples, 0.01%)</title><rect x="53.1958%" y="517" width="0.0134%" height="15" fill="rgb(223,176,5)" fg:x="180983918664" fg:w="45638478"/><text x="53.4458%" y="527.50"></text></g><g><title>__sched_yield (45,638,478 samples, 0.01%)</title><rect x="53.1958%" y="501" width="0.0134%" height="15" fill="rgb(228,140,14)" fg:x="180983918664" fg:w="45638478"/><text x="53.4458%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (79,833,343 samples, 0.02%)</title><rect x="53.2100%" y="517" width="0.0235%" height="15" fill="rgb(217,179,31)" fg:x="181032163243" fg:w="79833343"/><text x="53.4600%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (79,833,343 samples, 0.02%)</title><rect x="53.2100%" y="501" width="0.0235%" height="15" fill="rgb(230,9,30)" fg:x="181032163243" fg:w="79833343"/><text x="53.4600%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (289,796,234 samples, 0.09%)</title><rect x="53.1491%" y="565" width="0.0852%" height="15" fill="rgb(230,136,20)" fg:x="180824974931" fg:w="289796234"/><text x="53.3991%" y="575.50"></text></g><g><title>rayon_core::sleep::Sleep::work_found (85,214,023 samples, 0.03%)</title><rect x="53.2092%" y="549" width="0.0250%" height="15" fill="rgb(215,210,22)" fg:x="181029557142" fg:w="85214023"/><text x="53.4592%" y="559.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::sub_inactive_thread (82,607,922 samples, 0.02%)</title><rect x="53.2100%" y="533" width="0.0243%" height="15" fill="rgb(218,43,5)" fg:x="181032163243" fg:w="82607922"/><text x="53.4600%" y="543.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (192,548,030 samples, 0.06%)</title><rect x="53.2436%" y="501" width="0.0566%" height="15" fill="rgb(216,11,5)" fg:x="181146573590" fg:w="192548030"/><text x="53.4936%" y="511.50"></text></g><g><title>syscall (191,134,117 samples, 0.06%)</title><rect x="53.2440%" y="485" width="0.0562%" height="15" fill="rgb(209,82,29)" fg:x="181147987503" fg:w="191134117"/><text x="53.4940%" y="495.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (290,039,126 samples, 0.09%)</title><rect x="53.2343%" y="565" width="0.0852%" height="15" fill="rgb(244,115,12)" fg:x="181114771165" fg:w="290039126"/><text x="53.4843%" y="575.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (272,238,179 samples, 0.08%)</title><rect x="53.2395%" y="549" width="0.0800%" height="15" fill="rgb(222,82,18)" fg:x="181132572112" fg:w="272238179"/><text x="53.4895%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (271,094,701 samples, 0.08%)</title><rect x="53.2398%" y="533" width="0.0797%" height="15" fill="rgb(249,227,8)" fg:x="181133715590" fg:w="271094701"/><text x="53.4898%" y="543.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (271,094,701 samples, 0.08%)</title><rect x="53.2398%" y="517" width="0.0797%" height="15" fill="rgb(253,141,45)" fg:x="181133715590" fg:w="271094701"/><text x="53.4898%" y="527.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (65,688,671 samples, 0.02%)</title><rect x="53.3002%" y="501" width="0.0193%" height="15" fill="rgb(234,184,4)" fg:x="181339121620" fg:w="65688671"/><text x="53.5502%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (49,354,950 samples, 0.01%)</title><rect x="53.3050%" y="485" width="0.0145%" height="15" fill="rgb(218,194,23)" fg:x="181355455341" fg:w="49354950"/><text x="53.5550%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (49,354,950 samples, 0.01%)</title><rect x="53.3050%" y="469" width="0.0145%" height="15" fill="rgb(235,66,41)" fg:x="181355455341" fg:w="49354950"/><text x="53.5550%" y="479.50"></text></g><g><title>[unknown] (164,562,164,653 samples, 48.37%)</title><rect x="4.9597%" y="581" width="48.3690%" height="15" fill="rgb(245,217,1)" fg:x="16874056193" fg:w="164562164653"/><text x="5.2097%" y="591.50">[unknown]</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (91,500,825 samples, 0.03%)</title><rect x="53.3341%" y="581" width="0.0269%" height="15" fill="rgb(229,91,1)" fg:x="181454520671" fg:w="91500825"/><text x="53.5841%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (35,018,564 samples, 0.01%)</title><rect x="53.4402%" y="533" width="0.0103%" height="15" fill="rgb(207,101,30)" fg:x="181815526221" fg:w="35018564"/><text x="53.6902%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::set_ptr_and_cap (38,842,662 samples, 0.01%)</title><rect x="53.4505%" y="533" width="0.0114%" height="15" fill="rgb(223,82,49)" fg:x="181850544785" fg:w="38842662"/><text x="53.7005%" y="543.50"></text></g><g><title>alloc::raw_vec::layout_array (99,802,903 samples, 0.03%)</title><rect x="53.4620%" y="533" width="0.0293%" height="15" fill="rgb(218,167,17)" fg:x="181889387447" fg:w="99802903"/><text x="53.7120%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::repeat (99,802,903 samples, 0.03%)</title><rect x="53.4620%" y="517" width="0.0293%" height="15" fill="rgb(208,103,14)" fg:x="181889387447" fg:w="99802903"/><text x="53.7120%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (99,802,903 samples, 0.03%)</title><rect x="53.4620%" y="501" width="0.0293%" height="15" fill="rgb(238,20,8)" fg:x="181889387447" fg:w="99802903"/><text x="53.7120%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (99,802,903 samples, 0.03%)</title><rect x="53.4620%" y="485" width="0.0293%" height="15" fill="rgb(218,80,54)" fg:x="181889387447" fg:w="99802903"/><text x="53.7120%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (99,802,903 samples, 0.03%)</title><rect x="53.4620%" y="469" width="0.0293%" height="15" fill="rgb(240,144,17)" fg:x="181889387447" fg:w="99802903"/><text x="53.7120%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (516,028,366 samples, 0.15%)</title><rect x="53.3610%" y="581" width="0.1517%" height="15" fill="rgb(245,27,50)" fg:x="181546021496" fg:w="516028366"/><text x="53.6110%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (432,628,758 samples, 0.13%)</title><rect x="53.3855%" y="565" width="0.1272%" height="15" fill="rgb(251,51,7)" fg:x="181629421104" fg:w="432628758"/><text x="53.6355%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (350,841,448 samples, 0.10%)</title><rect x="53.4096%" y="549" width="0.1031%" height="15" fill="rgb(245,217,29)" fg:x="181711208414" fg:w="350841448"/><text x="53.6596%" y="559.50"></text></g><g><title>core::cmp::max (72,859,512 samples, 0.02%)</title><rect x="53.4913%" y="533" width="0.0214%" height="15" fill="rgb(221,176,29)" fg:x="181989190350" fg:w="72859512"/><text x="53.7413%" y="543.50"></text></g><g><title>core::cmp::Ord::max (72,859,512 samples, 0.02%)</title><rect x="53.4913%" y="517" width="0.0214%" height="15" fill="rgb(212,180,24)" fg:x="181989190350" fg:w="72859512"/><text x="53.7413%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (34,269,444 samples, 0.01%)</title><rect x="53.5127%" y="581" width="0.0101%" height="15" fill="rgb(254,24,2)" fg:x="182062049862" fg:w="34269444"/><text x="53.7627%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (34,269,444 samples, 0.01%)</title><rect x="53.5127%" y="565" width="0.0101%" height="15" fill="rgb(230,100,2)" fg:x="182062049862" fg:w="34269444"/><text x="53.7627%" y="575.50"></text></g><g><title>[libc.so.6] (231,263,094 samples, 0.07%)</title><rect x="53.5961%" y="453" width="0.0680%" height="15" fill="rgb(219,142,25)" fg:x="182345727989" fg:w="231263094"/><text x="53.8461%" y="463.50"></text></g><g><title>[libc.so.6] (250,980,936 samples, 0.07%)</title><rect x="53.5910%" y="469" width="0.0738%" height="15" fill="rgb(240,73,43)" fg:x="182328377559" fg:w="250980936"/><text x="53.8410%" y="479.50"></text></g><g><title>__rustc::__rdl_realloc (312,993,839 samples, 0.09%)</title><rect x="53.5734%" y="517" width="0.0920%" height="15" fill="rgb(214,114,15)" fg:x="182268600874" fg:w="312993839"/><text x="53.8234%" y="527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (312,993,839 samples, 0.09%)</title><rect x="53.5734%" y="501" width="0.0920%" height="15" fill="rgb(207,130,4)" fg:x="182268600874" fg:w="312993839"/><text x="53.8234%" y="511.50"></text></g><g><title>realloc (302,561,749 samples, 0.09%)</title><rect x="53.5765%" y="485" width="0.0889%" height="15" fill="rgb(221,25,40)" fg:x="182279032964" fg:w="302561749"/><text x="53.8265%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (315,748,526 samples, 0.09%)</title><rect x="53.5734%" y="565" width="0.0928%" height="15" fill="rgb(241,184,7)" fg:x="182268600874" fg:w="315748526"/><text x="53.8234%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (315,748,526 samples, 0.09%)</title><rect x="53.5734%" y="549" width="0.0928%" height="15" fill="rgb(235,159,4)" fg:x="182268600874" fg:w="315748526"/><text x="53.8234%" y="559.50"></text></g><g><title>alloc::alloc::realloc (315,748,526 samples, 0.09%)</title><rect x="53.5734%" y="533" width="0.0928%" height="15" fill="rgb(214,87,48)" fg:x="182268600874" fg:w="315748526"/><text x="53.8234%" y="543.50"></text></g><g><title>[libc.so.6] (243,856,207 samples, 0.07%)</title><rect x="53.6789%" y="549" width="0.0717%" height="15" fill="rgb(246,198,24)" fg:x="182627318924" fg:w="243856207"/><text x="53.9289%" y="559.50"></text></g><g><title>[libc.so.6] (287,586,827 samples, 0.08%)</title><rect x="53.6662%" y="565" width="0.0845%" height="15" fill="rgb(209,66,40)" fg:x="182584349400" fg:w="287586827"/><text x="53.9162%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (55,856,321 samples, 0.02%)</title><rect x="53.7508%" y="565" width="0.0164%" height="15" fill="rgb(233,147,39)" fg:x="182871936227" fg:w="55856321"/><text x="54.0008%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (928,226,783 samples, 0.27%)</title><rect x="53.5228%" y="581" width="0.2728%" height="15" fill="rgb(231,145,52)" fg:x="182096319306" fg:w="928226783"/><text x="53.7728%" y="591.50"></text></g><g><title>malloc (96,753,541 samples, 0.03%)</title><rect x="53.7672%" y="565" width="0.0284%" height="15" fill="rgb(206,20,26)" fg:x="182927792548" fg:w="96753541"/><text x="54.0172%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup::{{closure}} (312,705,830 samples, 0.09%)</title><rect x="53.8125%" y="565" width="0.0919%" height="15" fill="rgb(238,220,4)" fg:x="183081939026" fg:w="312705830"/><text x="54.0625%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;mut B&gt; for &amp;mut A&gt;::eq (312,705,830 samples, 0.09%)</title><rect x="53.8125%" y="549" width="0.0919%" height="15" fill="rgb(252,195,42)" fg:x="183081939026" fg:w="312705830"/><text x="54.0625%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (312,705,830 samples, 0.09%)</title><rect x="53.8125%" y="533" width="0.0919%" height="15" fill="rgb(209,10,6)" fg:x="183081939026" fg:w="312705830"/><text x="54.0625%" y="543.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (312,705,830 samples, 0.09%)</title><rect x="53.8125%" y="517" width="0.0919%" height="15" fill="rgb(229,3,52)" fg:x="183081939026" fg:w="312705830"/><text x="54.0625%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (312,705,830 samples, 0.09%)</title><rect x="53.8125%" y="501" width="0.0919%" height="15" fill="rgb(253,49,37)" fg:x="183081939026" fg:w="312705830"/><text x="54.0625%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (312,705,830 samples, 0.09%)</title><rect x="53.8125%" y="485" width="0.0919%" height="15" fill="rgb(240,103,49)" fg:x="183081939026" fg:w="312705830"/><text x="54.0625%" y="495.50"></text></g><g><title>[libc.so.6] (188,173,728 samples, 0.06%)</title><rect x="53.8491%" y="469" width="0.0553%" height="15" fill="rgb(250,182,30)" fg:x="183206471128" fg:w="188173728"/><text x="54.0991%" y="479.50"></text></g><g><title>core::ptr::copy_nonoverlapping (106,303,208 samples, 0.03%)</title><rect x="53.9044%" y="565" width="0.0312%" height="15" fill="rgb(248,8,30)" fg:x="183394644856" fg:w="106303208"/><text x="54.1544%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (69,327,505 samples, 0.02%)</title><rect x="53.9356%" y="485" width="0.0204%" height="15" fill="rgb(237,120,30)" fg:x="183500948064" fg:w="69327505"/><text x="54.1856%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (69,327,505 samples, 0.02%)</title><rect x="53.9356%" y="469" width="0.0204%" height="15" fill="rgb(221,146,34)" fg:x="183500948064" fg:w="69327505"/><text x="54.1856%" y="479.50"></text></g><g><title>__rustc::__rdl_dealloc (69,327,505 samples, 0.02%)</title><rect x="53.9356%" y="453" width="0.0204%" height="15" fill="rgb(242,55,13)" fg:x="183500948064" fg:w="69327505"/><text x="54.1856%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (69,327,505 samples, 0.02%)</title><rect x="53.9356%" y="437" width="0.0204%" height="15" fill="rgb(242,112,31)" fg:x="183500948064" fg:w="69327505"/><text x="54.1856%" y="447.50"></text></g><g><title>cfree (42,380,736 samples, 0.01%)</title><rect x="53.9436%" y="421" width="0.0125%" height="15" fill="rgb(249,192,27)" fg:x="183527894833" fg:w="42380736"/><text x="54.1936%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (75,392,392 samples, 0.02%)</title><rect x="53.9356%" y="565" width="0.0222%" height="15" fill="rgb(208,204,44)" fg:x="183500948064" fg:w="75392392"/><text x="54.1856%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (75,392,392 samples, 0.02%)</title><rect x="53.9356%" y="549" width="0.0222%" height="15" fill="rgb(208,93,54)" fg:x="183500948064" fg:w="75392392"/><text x="54.1856%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (75,392,392 samples, 0.02%)</title><rect x="53.9356%" y="533" width="0.0222%" height="15" fill="rgb(242,1,31)" fg:x="183500948064" fg:w="75392392"/><text x="54.1856%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75,392,392 samples, 0.02%)</title><rect x="53.9356%" y="517" width="0.0222%" height="15" fill="rgb(241,83,25)" fg:x="183500948064" fg:w="75392392"/><text x="54.1856%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (75,392,392 samples, 0.02%)</title><rect x="53.9356%" y="501" width="0.0222%" height="15" fill="rgb(205,169,50)" fg:x="183500948064" fg:w="75392392"/><text x="54.1856%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup_by (533,485,209 samples, 0.16%)</title><rect x="53.8018%" y="581" width="0.1568%" height="15" fill="rgb(239,186,37)" fg:x="183045734332" fg:w="533485209"/><text x="54.0518%" y="591.50"></text></g><g><title>[libc.so.6] (55,444,799 samples, 0.02%)</title><rect x="53.9646%" y="309" width="0.0163%" height="15" fill="rgb(205,221,10)" fg:x="183599470663" fg:w="55444799"/><text x="54.2146%" y="319.50"></text></g><g><title>[libc.so.6] (41,801,353 samples, 0.01%)</title><rect x="53.9686%" y="293" width="0.0123%" height="15" fill="rgb(218,196,15)" fg:x="183613114109" fg:w="41801353"/><text x="54.2186%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (66,892,038 samples, 0.02%)</title><rect x="53.9629%" y="437" width="0.0197%" height="15" fill="rgb(218,196,35)" fg:x="183593562203" fg:w="66892038"/><text x="54.2129%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (66,892,038 samples, 0.02%)</title><rect x="53.9629%" y="421" width="0.0197%" height="15" fill="rgb(233,63,24)" fg:x="183593562203" fg:w="66892038"/><text x="54.2129%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (66,892,038 samples, 0.02%)</title><rect x="53.9629%" y="405" width="0.0197%" height="15" fill="rgb(225,8,4)" fg:x="183593562203" fg:w="66892038"/><text x="54.2129%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (66,892,038 samples, 0.02%)</title><rect x="53.9629%" y="389" width="0.0197%" height="15" fill="rgb(234,105,35)" fg:x="183593562203" fg:w="66892038"/><text x="54.2129%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (66,892,038 samples, 0.02%)</title><rect x="53.9629%" y="373" width="0.0197%" height="15" fill="rgb(236,21,32)" fg:x="183593562203" fg:w="66892038"/><text x="54.2129%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (60,983,578 samples, 0.02%)</title><rect x="53.9646%" y="357" width="0.0179%" height="15" fill="rgb(228,109,6)" fg:x="183599470663" fg:w="60983578"/><text x="54.2146%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (60,983,578 samples, 0.02%)</title><rect x="53.9646%" y="341" width="0.0179%" height="15" fill="rgb(229,215,31)" fg:x="183599470663" fg:w="60983578"/><text x="54.2146%" y="351.50"></text></g><g><title>alloc::alloc::alloc (60,983,578 samples, 0.02%)</title><rect x="53.9646%" y="325" width="0.0179%" height="15" fill="rgb(221,52,54)" fg:x="183599470663" fg:w="60983578"/><text x="54.2146%" y="335.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (106,607,417 samples, 0.03%)</title><rect x="53.9595%" y="469" width="0.0313%" height="15" fill="rgb(252,129,43)" fg:x="183582061311" fg:w="106607417"/><text x="54.2095%" y="479.50"></text></g><g><title>alloc::str::convert_while_ascii (97,852,769 samples, 0.03%)</title><rect x="53.9621%" y="453" width="0.0288%" height="15" fill="rgb(248,183,27)" fg:x="183590815959" fg:w="97852769"/><text x="54.2121%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (120,588,716 samples, 0.04%)</title><rect x="53.9586%" y="565" width="0.0354%" height="15" fill="rgb(250,0,22)" fg:x="183579219541" fg:w="120588716"/><text x="54.2086%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (120,588,716 samples, 0.04%)</title><rect x="53.9586%" y="549" width="0.0354%" height="15" fill="rgb(213,166,10)" fg:x="183579219541" fg:w="120588716"/><text x="54.2086%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (120,588,716 samples, 0.04%)</title><rect x="53.9586%" y="533" width="0.0354%" height="15" fill="rgb(207,163,36)" fg:x="183579219541" fg:w="120588716"/><text x="54.2086%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (120,588,716 samples, 0.04%)</title><rect x="53.9586%" y="517" width="0.0354%" height="15" fill="rgb(208,122,22)" fg:x="183579219541" fg:w="120588716"/><text x="54.2086%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (120,588,716 samples, 0.04%)</title><rect x="53.9586%" y="501" width="0.0354%" height="15" fill="rgb(207,104,49)" fg:x="183579219541" fg:w="120588716"/><text x="54.2086%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (120,588,716 samples, 0.04%)</title><rect x="53.9586%" y="485" width="0.0354%" height="15" fill="rgb(248,211,50)" fg:x="183579219541" fg:w="120588716"/><text x="54.2086%" y="495.50"></text></g><g><title>backend_comparison::load_dictionary (127,863,074 samples, 0.04%)</title><rect x="53.9586%" y="581" width="0.0376%" height="15" fill="rgb(217,13,45)" fg:x="183579219541" fg:w="127863074"/><text x="54.2086%" y="591.50"></text></g><g><title>backend_comparison::main (90,869,350 samples, 0.03%)</title><rect x="53.9962%" y="581" width="0.0267%" height="15" fill="rgb(211,216,49)" fg:x="183707082615" fg:w="90869350"/><text x="54.2462%" y="591.50"></text></g><g><title>backend_comparison::benches (90,869,350 samples, 0.03%)</title><rect x="53.9962%" y="565" width="0.0267%" height="15" fill="rgb(221,58,53)" fg:x="183707082615" fg:w="90869350"/><text x="54.2462%" y="575.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (194,269,419 samples, 0.06%)</title><rect x="54.0777%" y="549" width="0.0571%" height="15" fill="rgb(220,112,41)" fg:x="183984279969" fg:w="194269419"/><text x="54.3277%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (79,958,050 samples, 0.02%)</title><rect x="54.2381%" y="341" width="0.0235%" height="15" fill="rgb(236,38,28)" fg:x="184530114098" fg:w="79958050"/><text x="54.4881%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (79,958,050 samples, 0.02%)</title><rect x="54.2381%" y="325" width="0.0235%" height="15" fill="rgb(227,195,22)" fg:x="184530114098" fg:w="79958050"/><text x="54.4881%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (79,958,050 samples, 0.02%)</title><rect x="54.2381%" y="309" width="0.0235%" height="15" fill="rgb(214,55,33)" fg:x="184530114098" fg:w="79958050"/><text x="54.4881%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (79,958,050 samples, 0.02%)</title><rect x="54.2381%" y="293" width="0.0235%" height="15" fill="rgb(248,80,13)" fg:x="184530114098" fg:w="79958050"/><text x="54.4881%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77,037,813 samples, 0.02%)</title><rect x="54.2390%" y="277" width="0.0226%" height="15" fill="rgb(238,52,6)" fg:x="184533034335" fg:w="77037813"/><text x="54.4890%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77,037,813 samples, 0.02%)</title><rect x="54.2390%" y="261" width="0.0226%" height="15" fill="rgb(224,198,47)" fg:x="184533034335" fg:w="77037813"/><text x="54.4890%" y="271.50"></text></g><g><title>alloc::alloc::alloc (77,037,813 samples, 0.02%)</title><rect x="54.2390%" y="245" width="0.0226%" height="15" fill="rgb(233,171,20)" fg:x="184533034335" fg:w="77037813"/><text x="54.4890%" y="255.50"></text></g><g><title>[libc.so.6] (77,037,813 samples, 0.02%)</title><rect x="54.2390%" y="229" width="0.0226%" height="15" fill="rgb(241,30,25)" fg:x="184533034335" fg:w="77037813"/><text x="54.4890%" y="239.50"></text></g><g><title>[libc.so.6] (56,329,864 samples, 0.02%)</title><rect x="54.2451%" y="213" width="0.0166%" height="15" fill="rgb(207,171,38)" fg:x="184553742284" fg:w="56329864"/><text x="54.4951%" y="223.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (97,824,971 samples, 0.03%)</title><rect x="54.2355%" y="437" width="0.0288%" height="15" fill="rgb(234,70,1)" fg:x="184521116075" fg:w="97824971"/><text x="54.4855%" y="447.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (88,826,948 samples, 0.03%)</title><rect x="54.2381%" y="421" width="0.0261%" height="15" fill="rgb(232,178,18)" fg:x="184530114098" fg:w="88826948"/><text x="54.4881%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (88,826,948 samples, 0.03%)</title><rect x="54.2381%" y="405" width="0.0261%" height="15" fill="rgb(241,78,40)" fg:x="184530114098" fg:w="88826948"/><text x="54.4881%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (88,826,948 samples, 0.03%)</title><rect x="54.2381%" y="389" width="0.0261%" height="15" fill="rgb(222,35,25)" fg:x="184530114098" fg:w="88826948"/><text x="54.4881%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (88,826,948 samples, 0.03%)</title><rect x="54.2381%" y="373" width="0.0261%" height="15" fill="rgb(207,92,16)" fg:x="184530114098" fg:w="88826948"/><text x="54.4881%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (88,826,948 samples, 0.03%)</title><rect x="54.2381%" y="357" width="0.0261%" height="15" fill="rgb(216,59,51)" fg:x="184530114098" fg:w="88826948"/><text x="54.4881%" y="367.50"></text></g><g><title>liblevenshtein::transducer::intersection::Intersection&lt;N&gt;::term (178,856,097 samples, 0.05%)</title><rect x="54.2303%" y="453" width="0.0526%" height="15" fill="rgb(213,80,28)" fg:x="184503476244" fg:w="178856097"/><text x="54.4803%" y="463.50"></text></g><g><title>&lt;liblevenshtein::transducer::query::QueryIterator&lt;N&gt; as core::iter::traits::iterator::Iterator&gt;::next (283,322,705 samples, 0.08%)</title><rect x="54.2075%" y="485" width="0.0833%" height="15" fill="rgb(220,93,7)" fg:x="184425891018" fg:w="283322705"/><text x="54.4575%" y="495.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::advance (276,868,489 samples, 0.08%)</title><rect x="54.2094%" y="469" width="0.0814%" height="15" fill="rgb(225,24,44)" fg:x="184432345234" fg:w="276868489"/><text x="54.4594%" y="479.50"></text></g><g><title>[libc.so.6] (394,053,095 samples, 0.12%)</title><rect x="54.3055%" y="469" width="0.1158%" height="15" fill="rgb(243,74,40)" fg:x="184759422659" fg:w="394053095"/><text x="54.5555%" y="479.50"></text></g><g><title>[libc.so.6] (343,729,430 samples, 0.10%)</title><rect x="54.3203%" y="453" width="0.1010%" height="15" fill="rgb(228,39,7)" fg:x="184809746324" fg:w="343729430"/><text x="54.5703%" y="463.50"></text></g><g><title>[libc.so.6] (450,081,758 samples, 0.13%)</title><rect x="54.2908%" y="485" width="0.1323%" height="15" fill="rgb(227,79,8)" fg:x="184709213723" fg:w="450081758"/><text x="54.5408%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (805,548,902 samples, 0.24%)</title><rect x="54.1986%" y="517" width="0.2368%" height="15" fill="rgb(236,58,11)" fg:x="184395623263" fg:w="805548902"/><text x="54.4486%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (805,548,902 samples, 0.24%)</title><rect x="54.1986%" y="501" width="0.2368%" height="15" fill="rgb(249,63,35)" fg:x="184395623263" fg:w="805548902"/><text x="54.4486%" y="511.50"></text></g><g><title>cfree (41,876,684 samples, 0.01%)</title><rect x="54.4231%" y="485" width="0.0123%" height="15" fill="rgb(252,114,16)" fg:x="185159295481" fg:w="41876684"/><text x="54.6731%" y="495.50"></text></g><g><title>[libc.so.6] (2,248,228,027 samples, 0.66%)</title><rect x="54.5456%" y="501" width="0.6608%" height="15" fill="rgb(254,151,24)" fg:x="185576200625" fg:w="2248228027"/><text x="54.7956%" y="511.50"></text></g><g><title>[libc.so.6] (1,520,432,985 samples, 0.45%)</title><rect x="54.7595%" y="485" width="0.4469%" height="15" fill="rgb(253,54,39)" fg:x="186303995667" fg:w="1520432985"/><text x="55.0095%" y="495.50"></text></g><g><title>[libc.so.6] (147,456,965 samples, 0.04%)</title><rect x="55.1631%" y="469" width="0.0433%" height="15" fill="rgb(243,25,45)" fg:x="187676971687" fg:w="147456965"/><text x="55.4131%" y="479.50"></text></g><g><title>[libc.so.6] (2,637,822,993 samples, 0.78%)</title><rect x="54.4354%" y="517" width="0.7753%" height="15" fill="rgb(234,134,9)" fg:x="185201172165" fg:w="2637822993"/><text x="54.6854%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (43,798,714 samples, 0.01%)</title><rect x="55.2107%" y="517" width="0.0129%" height="15" fill="rgb(227,166,31)" fg:x="187838995158" fg:w="43798714"/><text x="55.4607%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,232,632,115 samples, 1.24%)</title><rect x="54.0313%" y="581" width="1.2441%" height="15" fill="rgb(245,143,41)" fg:x="183826291388" fg:w="4232632115"/><text x="54.2813%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,074,643,534 samples, 1.20%)</title><rect x="54.0777%" y="565" width="1.1976%" height="15" fill="rgb(238,181,32)" fg:x="183984279969" fg:w="4074643534"/><text x="54.3277%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,880,374,115 samples, 1.14%)</title><rect x="54.1348%" y="549" width="1.1405%" height="15" fill="rgb(224,113,18)" fg:x="184178549388" fg:w="3880374115"/><text x="54.3848%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,880,374,115 samples, 1.14%)</title><rect x="54.1348%" y="533" width="1.1405%" height="15" fill="rgb(240,229,28)" fg:x="184178549388" fg:w="3880374115"/><text x="54.3848%" y="543.50"></text></g><g><title>cfree (143,420,763 samples, 0.04%)</title><rect x="55.2332%" y="517" width="0.0422%" height="15" fill="rgb(250,185,3)" fg:x="187915502740" fg:w="143420763"/><text x="55.4832%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt;&gt;&gt; (97,820,752 samples, 0.03%)</title><rect x="55.2753%" y="581" width="0.0288%" height="15" fill="rgb(212,59,25)" fg:x="188058923503" fg:w="97820752"/><text x="55.5253%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt;&gt;&gt; (65,852,730 samples, 0.02%)</title><rect x="55.2847%" y="565" width="0.0194%" height="15" fill="rgb(221,87,20)" fg:x="188090891525" fg:w="65852730"/><text x="55.5347%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65,852,730 samples, 0.02%)</title><rect x="55.2847%" y="549" width="0.0194%" height="15" fill="rgb(213,74,28)" fg:x="188090891525" fg:w="65852730"/><text x="55.5347%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (65,852,730 samples, 0.02%)</title><rect x="55.2847%" y="533" width="0.0194%" height="15" fill="rgb(224,132,34)" fg:x="188090891525" fg:w="65852730"/><text x="55.5347%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (65,852,730 samples, 0.02%)</title><rect x="55.2847%" y="517" width="0.0194%" height="15" fill="rgb(222,101,24)" fg:x="188090891525" fg:w="65852730"/><text x="55.5347%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (65,852,730 samples, 0.02%)</title><rect x="55.2847%" y="501" width="0.0194%" height="15" fill="rgb(254,142,4)" fg:x="188090891525" fg:w="65852730"/><text x="55.5347%" y="511.50"></text></g><g><title>__rustc::__rdl_dealloc (65,852,730 samples, 0.02%)</title><rect x="55.2847%" y="485" width="0.0194%" height="15" fill="rgb(230,229,49)" fg:x="188090891525" fg:w="65852730"/><text x="55.5347%" y="495.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (65,852,730 samples, 0.02%)</title><rect x="55.2847%" y="469" width="0.0194%" height="15" fill="rgb(238,70,47)" fg:x="188090891525" fg:w="65852730"/><text x="55.5347%" y="479.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (122,939,813 samples, 0.04%)</title><rect x="55.3114%" y="549" width="0.0361%" height="15" fill="rgb(231,160,17)" fg:x="188181655985" fg:w="122939813"/><text x="55.5614%" y="559.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (122,939,813 samples, 0.04%)</title><rect x="55.3114%" y="533" width="0.0361%" height="15" fill="rgb(218,68,53)" fg:x="188181655985" fg:w="122939813"/><text x="55.5614%" y="543.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (67,148,372 samples, 0.02%)</title><rect x="55.3278%" y="517" width="0.0197%" height="15" fill="rgb(236,111,10)" fg:x="188237447426" fg:w="67148372"/><text x="55.5778%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (67,148,372 samples, 0.02%)</title><rect x="55.3278%" y="501" width="0.0197%" height="15" fill="rgb(224,34,41)" fg:x="188237447426" fg:w="67148372"/><text x="55.5778%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::offset_from_unsigned (67,148,372 samples, 0.02%)</title><rect x="55.3278%" y="485" width="0.0197%" height="15" fill="rgb(241,118,19)" fg:x="188237447426" fg:w="67148372"/><text x="55.5778%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset_from_unsigned (67,148,372 samples, 0.02%)</title><rect x="55.3278%" y="469" width="0.0197%" height="15" fill="rgb(238,129,25)" fg:x="188237447426" fg:w="67148372"/><text x="55.5778%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from_unsigned (67,148,372 samples, 0.02%)</title><rect x="55.3278%" y="453" width="0.0197%" height="15" fill="rgb(238,22,31)" fg:x="188237447426" fg:w="67148372"/><text x="55.5778%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(u8,liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode),alloc::alloc::Global&gt;&gt; (118,285,997 samples, 0.03%)</title><rect x="55.3476%" y="549" width="0.0348%" height="15" fill="rgb(222,174,48)" fg:x="188304595798" fg:w="118285997"/><text x="55.5976%" y="559.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (118,285,997 samples, 0.03%)</title><rect x="55.3476%" y="533" width="0.0348%" height="15" fill="rgb(206,152,40)" fg:x="188304595798" fg:w="118285997"/><text x="55.5976%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u8,liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode)&gt;&gt; (71,107,725 samples, 0.02%)</title><rect x="55.3614%" y="517" width="0.0209%" height="15" fill="rgb(218,99,54)" fg:x="188351774070" fg:w="71107725"/><text x="55.6114%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71,107,725 samples, 0.02%)</title><rect x="55.3614%" y="501" width="0.0209%" height="15" fill="rgb(220,174,26)" fg:x="188351774070" fg:w="71107725"/><text x="55.6114%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (71,107,725 samples, 0.02%)</title><rect x="55.3614%" y="485" width="0.0209%" height="15" fill="rgb(245,116,9)" fg:x="188351774070" fg:w="71107725"/><text x="55.6114%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (71,107,725 samples, 0.02%)</title><rect x="55.3614%" y="469" width="0.0209%" height="15" fill="rgb(209,72,35)" fg:x="188351774070" fg:w="71107725"/><text x="55.6114%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (71,107,725 samples, 0.02%)</title><rect x="55.3614%" y="453" width="0.0209%" height="15" fill="rgb(226,126,21)" fg:x="188351774070" fg:w="71107725"/><text x="55.6114%" y="463.50"></text></g><g><title>__rustc::__rdl_dealloc (71,107,725 samples, 0.02%)</title><rect x="55.3614%" y="437" width="0.0209%" height="15" fill="rgb(227,192,1)" fg:x="188351774070" fg:w="71107725"/><text x="55.6114%" y="447.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (71,107,725 samples, 0.02%)</title><rect x="55.3614%" y="421" width="0.0209%" height="15" fill="rgb(237,180,29)" fg:x="188351774070" fg:w="71107725"/><text x="55.6114%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(u8,liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode)&gt;&gt; (269,297,634 samples, 0.08%)</title><rect x="55.3041%" y="581" width="0.0792%" height="15" fill="rgb(230,197,35)" fg:x="188156744255" fg:w="269297634"/><text x="55.5541%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (244,385,904 samples, 0.07%)</title><rect x="55.3114%" y="565" width="0.0718%" height="15" fill="rgb(246,193,31)" fg:x="188181655985" fg:w="244385904"/><text x="55.5614%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::PathNode&gt;&gt;&gt; (124,183,889 samples, 0.04%)</title><rect x="55.4426%" y="565" width="0.0365%" height="15" fill="rgb(241,36,4)" fg:x="188628128099" fg:w="124183889"/><text x="55.6926%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::PathNode&gt;&gt; (124,183,889 samples, 0.04%)</title><rect x="55.4426%" y="549" width="0.0365%" height="15" fill="rgb(241,130,17)" fg:x="188628128099" fg:w="124183889"/><text x="55.6926%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::intersection::Intersection&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt; (892,261,279 samples, 0.26%)</title><rect x="55.3832%" y="581" width="0.2623%" height="15" fill="rgb(206,137,32)" fg:x="188426041889" fg:w="892261279"/><text x="55.6332%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt; (565,991,180 samples, 0.17%)</title><rect x="55.4791%" y="565" width="0.1664%" height="15" fill="rgb(237,228,51)" fg:x="188752311988" fg:w="565991180"/><text x="55.7291%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;bool&gt;&gt;&gt; (565,991,180 samples, 0.17%)</title><rect x="55.4791%" y="549" width="0.1664%" height="15" fill="rgb(243,6,42)" fg:x="188752311988" fg:w="565991180"/><text x="55.7291%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (565,991,180 samples, 0.17%)</title><rect x="55.4791%" y="533" width="0.1664%" height="15" fill="rgb(251,74,28)" fg:x="188752311988" fg:w="565991180"/><text x="55.7291%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (553,949,363 samples, 0.16%)</title><rect x="55.4827%" y="517" width="0.1628%" height="15" fill="rgb(218,20,49)" fg:x="188764353805" fg:w="553949363"/><text x="55.7327%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (553,949,363 samples, 0.16%)</title><rect x="55.4827%" y="501" width="0.1628%" height="15" fill="rgb(238,28,14)" fg:x="188764353805" fg:w="553949363"/><text x="55.7327%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::intersection::PathNode&gt; (105,373,200 samples, 0.03%)</title><rect x="55.6455%" y="581" width="0.0310%" height="15" fill="rgb(229,40,46)" fg:x="189318303168" fg:w="105373200"/><text x="55.8955%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;liblevenshtein::transducer::intersection::PathNode&gt;&gt;&gt; (84,400,854 samples, 0.02%)</title><rect x="55.6517%" y="565" width="0.0248%" height="15" fill="rgb(244,195,20)" fg:x="189339275514" fg:w="84400854"/><text x="55.9017%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::query::QueryIterator&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt;&gt; (121,763,648 samples, 0.04%)</title><rect x="55.6765%" y="581" width="0.0358%" height="15" fill="rgb(253,56,35)" fg:x="189423676368" fg:w="121763648"/><text x="55.9265%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::transducer::pool::StatePool&gt; (74,135,070 samples, 0.02%)</title><rect x="55.6905%" y="565" width="0.0218%" height="15" fill="rgb(210,149,44)" fg:x="189471304946" fg:w="74135070"/><text x="55.9405%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;liblevenshtein::transducer::state::State&gt;&gt; (74,135,070 samples, 0.02%)</title><rect x="55.6905%" y="549" width="0.0218%" height="15" fill="rgb(240,135,12)" fg:x="189471304946" fg:w="74135070"/><text x="55.9405%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;liblevenshtein::transducer::state::State&gt;&gt; (74,135,070 samples, 0.02%)</title><rect x="55.6905%" y="533" width="0.0218%" height="15" fill="rgb(251,24,50)" fg:x="189471304946" fg:w="74135070"/><text x="55.9405%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74,135,070 samples, 0.02%)</title><rect x="55.6905%" y="517" width="0.0218%" height="15" fill="rgb(243,200,47)" fg:x="189471304946" fg:w="74135070"/><text x="55.9405%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (74,135,070 samples, 0.02%)</title><rect x="55.6905%" y="501" width="0.0218%" height="15" fill="rgb(224,166,26)" fg:x="189471304946" fg:w="74135070"/><text x="55.9405%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (74,135,070 samples, 0.02%)</title><rect x="55.6905%" y="485" width="0.0218%" height="15" fill="rgb(233,0,47)" fg:x="189471304946" fg:w="74135070"/><text x="55.9405%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (74,135,070 samples, 0.02%)</title><rect x="55.6905%" y="469" width="0.0218%" height="15" fill="rgb(253,80,5)" fg:x="189471304946" fg:w="74135070"/><text x="55.9405%" y="479.50"></text></g><g><title>__rustc::__rdl_dealloc (74,135,070 samples, 0.02%)</title><rect x="55.6905%" y="453" width="0.0218%" height="15" fill="rgb(214,133,25)" fg:x="189471304946" fg:w="74135070"/><text x="55.9405%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (74,135,070 samples, 0.02%)</title><rect x="55.6905%" y="437" width="0.0218%" height="15" fill="rgb(209,27,14)" fg:x="189471304946" fg:w="74135070"/><text x="55.9405%" y="447.50"></text></g><g><title>core::slice::sort::shared::pivot::median3_rec (514,881,295 samples, 0.15%)</title><rect x="55.7137%" y="581" width="0.1513%" height="15" fill="rgb(219,102,51)" fg:x="189550226102" fg:w="514881295"/><text x="55.9637%" y="591.50"></text></g><g><title>core::slice::sort::shared::pivot::median3 (429,617,548 samples, 0.13%)</title><rect x="55.7387%" y="565" width="0.1263%" height="15" fill="rgb(237,18,16)" fg:x="189635489849" fg:w="429617548"/><text x="55.9887%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (395,094,903 samples, 0.12%)</title><rect x="55.7489%" y="549" width="0.1161%" height="15" fill="rgb(241,85,17)" fg:x="189670012494" fg:w="395094903"/><text x="55.9989%" y="559.50"></text></g><g><title>core::cmp::PartialOrd::lt (395,094,903 samples, 0.12%)</title><rect x="55.7489%" y="533" width="0.1161%" height="15" fill="rgb(236,90,42)" fg:x="189670012494" fg:w="395094903"/><text x="55.9989%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (395,094,903 samples, 0.12%)</title><rect x="55.7489%" y="517" width="0.1161%" height="15" fill="rgb(249,57,21)" fg:x="189670012494" fg:w="395094903"/><text x="55.9989%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (395,094,903 samples, 0.12%)</title><rect x="55.7489%" y="501" width="0.1161%" height="15" fill="rgb(243,12,36)" fg:x="189670012494" fg:w="395094903"/><text x="55.9989%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (395,094,903 samples, 0.12%)</title><rect x="55.7489%" y="485" width="0.1161%" height="15" fill="rgb(253,128,47)" fg:x="189670012494" fg:w="395094903"/><text x="55.9989%" y="495.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (395,094,903 samples, 0.12%)</title><rect x="55.7489%" y="469" width="0.1161%" height="15" fill="rgb(207,33,20)" fg:x="189670012494" fg:w="395094903"/><text x="55.9989%" y="479.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (395,094,903 samples, 0.12%)</title><rect x="55.7489%" y="453" width="0.1161%" height="15" fill="rgb(233,215,35)" fg:x="189670012494" fg:w="395094903"/><text x="55.9989%" y="463.50"></text></g><g><title>[libc.so.6] (292,968,716 samples, 0.09%)</title><rect x="55.7789%" y="437" width="0.0861%" height="15" fill="rgb(249,188,52)" fg:x="189772138681" fg:w="292968716"/><text x="56.0289%" y="447.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (36,332,166 samples, 0.01%)</title><rect x="55.8650%" y="581" width="0.0107%" height="15" fill="rgb(225,12,32)" fg:x="190065107397" fg:w="36332166"/><text x="56.1150%" y="591.50"></text></g><g><title>core::slice::sort::stable::drift::create_run (36,696,882 samples, 0.01%)</title><rect x="55.8827%" y="565" width="0.0108%" height="15" fill="rgb(247,98,14)" fg:x="190125231085" fg:w="36696882"/><text x="56.1327%" y="575.50"></text></g><g><title>core::slice::sort::shared::find_existing_run (36,696,882 samples, 0.01%)</title><rect x="55.8827%" y="549" width="0.0108%" height="15" fill="rgb(247,219,48)" fg:x="190125231085" fg:w="36696882"/><text x="56.1327%" y="559.50"></text></g><g><title>core::slice::sort::stable::drift::sort (69,860,093 samples, 0.02%)</title><rect x="55.8757%" y="581" width="0.0205%" height="15" fill="rgb(253,60,48)" fg:x="190101439563" fg:w="69860093"/><text x="56.1257%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (60,740,499 samples, 0.02%)</title><rect x="55.9097%" y="565" width="0.0179%" height="15" fill="rgb(245,15,52)" fg:x="190217096191" fg:w="60740499"/><text x="56.1597%" y="575.50"></text></g><g><title>core::cmp::PartialOrd::lt (60,740,499 samples, 0.02%)</title><rect x="55.9097%" y="549" width="0.0179%" height="15" fill="rgb(220,133,28)" fg:x="190217096191" fg:w="60740499"/><text x="56.1597%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (60,740,499 samples, 0.02%)</title><rect x="55.9097%" y="533" width="0.0179%" height="15" fill="rgb(217,180,4)" fg:x="190217096191" fg:w="60740499"/><text x="56.1597%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (60,740,499 samples, 0.02%)</title><rect x="55.9097%" y="517" width="0.0179%" height="15" fill="rgb(251,24,1)" fg:x="190217096191" fg:w="60740499"/><text x="56.1597%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (60,740,499 samples, 0.02%)</title><rect x="55.9097%" y="501" width="0.0179%" height="15" fill="rgb(212,185,49)" fg:x="190217096191" fg:w="60740499"/><text x="56.1597%" y="511.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (60,740,499 samples, 0.02%)</title><rect x="55.9097%" y="485" width="0.0179%" height="15" fill="rgb(215,175,22)" fg:x="190217096191" fg:w="60740499"/><text x="56.1597%" y="495.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (60,740,499 samples, 0.02%)</title><rect x="55.9097%" y="469" width="0.0179%" height="15" fill="rgb(250,205,14)" fg:x="190217096191" fg:w="60740499"/><text x="56.1597%" y="479.50"></text></g><g><title>[libc.so.6] (35,921,973 samples, 0.01%)</title><rect x="55.9170%" y="453" width="0.0106%" height="15" fill="rgb(225,211,22)" fg:x="190241914717" fg:w="35921973"/><text x="56.1670%" y="463.50"></text></g><g><title>core::hint::select_unpredictable (58,930,362 samples, 0.02%)</title><rect x="55.9540%" y="549" width="0.0173%" height="15" fill="rgb(251,179,42)" fg:x="190367703761" fg:w="58930362"/><text x="56.2040%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (451,689,063 samples, 0.13%)</title><rect x="55.9713%" y="517" width="0.1328%" height="15" fill="rgb(208,216,51)" fg:x="190426634123" fg:w="451689063"/><text x="56.2213%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (451,689,063 samples, 0.13%)</title><rect x="55.9713%" y="501" width="0.1328%" height="15" fill="rgb(235,36,11)" fg:x="190426634123" fg:w="451689063"/><text x="56.2213%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (451,689,063 samples, 0.13%)</title><rect x="55.9713%" y="485" width="0.1328%" height="15" fill="rgb(213,189,28)" fg:x="190426634123" fg:w="451689063"/><text x="56.2213%" y="495.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (451,689,063 samples, 0.13%)</title><rect x="55.9713%" y="469" width="0.1328%" height="15" fill="rgb(227,203,42)" fg:x="190426634123" fg:w="451689063"/><text x="56.2213%" y="479.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (451,689,063 samples, 0.13%)</title><rect x="55.9713%" y="453" width="0.1328%" height="15" fill="rgb(244,72,36)" fg:x="190426634123" fg:w="451689063"/><text x="56.2213%" y="463.50"></text></g><g><title>[libc.so.6] (301,613,590 samples, 0.09%)</title><rect x="56.0154%" y="437" width="0.0887%" height="15" fill="rgb(213,53,17)" fg:x="190576709596" fg:w="301613590"/><text x="56.2654%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (460,832,120 samples, 0.14%)</title><rect x="55.9713%" y="549" width="0.1355%" height="15" fill="rgb(207,167,3)" fg:x="190426634123" fg:w="460832120"/><text x="56.2213%" y="559.50"></text></g><g><title>core::cmp::PartialOrd::lt (460,832,120 samples, 0.14%)</title><rect x="55.9713%" y="533" width="0.1355%" height="15" fill="rgb(216,98,30)" fg:x="190426634123" fg:w="460832120"/><text x="56.2213%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (45,588,509 samples, 0.01%)</title><rect x="56.1067%" y="549" width="0.0134%" height="15" fill="rgb(236,123,15)" fg:x="190887466243" fg:w="45588509"/><text x="56.3567%" y="559.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort4_stable (707,364,698 samples, 0.21%)</title><rect x="55.9302%" y="565" width="0.2079%" height="15" fill="rgb(248,81,50)" fg:x="190287011860" fg:w="707364698"/><text x="56.1802%" y="575.50"></text></g><g><title>core::ptr::copy_nonoverlapping (61,321,806 samples, 0.02%)</title><rect x="56.1201%" y="549" width="0.0180%" height="15" fill="rgb(214,120,4)" fg:x="190933054752" fg:w="61321806"/><text x="56.3701%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (8,795,974,647 samples, 2.59%)</title><rect x="56.7054%" y="517" width="2.5854%" height="15" fill="rgb(208,179,34)" fg:x="192924210547" fg:w="8795974647"/><text x="56.9554%" y="527.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A1&gt; as core::cmp::PartialOrd&lt;alloc::vec::Vec&lt;T,A2&gt;&gt;&gt;::partial_cmp (8,795,974,647 samples, 2.59%)</title><rect x="56.7054%" y="501" width="2.5854%" height="15" fill="rgb(227,140,7)" fg:x="192924210547" fg:w="8795974647"/><text x="56.9554%" y="511.50">&lt;a..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (8,795,974,647 samples, 2.59%)</title><rect x="56.7054%" y="485" width="2.5854%" height="15" fill="rgb(214,22,6)" fg:x="192924210547" fg:w="8795974647"/><text x="56.9554%" y="495.50">co..</text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (8,795,974,647 samples, 2.59%)</title><rect x="56.7054%" y="469" width="2.5854%" height="15" fill="rgb(207,137,27)" fg:x="192924210547" fg:w="8795974647"/><text x="56.9554%" y="479.50">&lt;A..</text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (8,795,974,647 samples, 2.59%)</title><rect x="56.7054%" y="453" width="2.5854%" height="15" fill="rgb(210,8,46)" fg:x="192924210547" fg:w="8795974647"/><text x="56.9554%" y="463.50">&lt;A..</text></g><g><title>[libc.so.6] (5,543,003,769 samples, 1.63%)</title><rect x="57.6615%" y="437" width="1.6292%" height="15" fill="rgb(240,16,54)" fg:x="196177181425" fg:w="5543003769"/><text x="57.9115%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8,838,326,285 samples, 2.60%)</title><rect x="56.7054%" y="549" width="2.5978%" height="15" fill="rgb(211,209,29)" fg:x="192924210547" fg:w="8838326285"/><text x="56.9554%" y="559.50">co..</text></g><g><title>core::cmp::PartialOrd::lt (8,838,326,285 samples, 2.60%)</title><rect x="56.7054%" y="533" width="2.5978%" height="15" fill="rgb(226,228,24)" fg:x="192924210547" fg:w="8838326285"/><text x="56.9554%" y="543.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (42,351,638 samples, 0.01%)</title><rect x="59.2907%" y="517" width="0.0124%" height="15" fill="rgb(222,84,9)" fg:x="201720185194" fg:w="42351638"/><text x="59.5407%" y="527.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1,859,629,224 samples, 0.55%)</title><rect x="59.3077%" y="549" width="0.5466%" height="15" fill="rgb(234,203,30)" fg:x="201778047518" fg:w="1859629224"/><text x="59.5577%" y="559.50"></text></g><g><title>[libc.so.6] (892,161,730 samples, 0.26%)</title><rect x="59.5921%" y="533" width="0.2622%" height="15" fill="rgb(238,109,14)" fg:x="202745515012" fg:w="892161730"/><text x="59.8421%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (107,021,307 samples, 0.03%)</title><rect x="59.8543%" y="549" width="0.0315%" height="15" fill="rgb(233,206,34)" fg:x="203637676742" fg:w="107021307"/><text x="60.1043%" y="559.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1,406,942,866 samples, 0.41%)</title><rect x="60.2560%" y="533" width="0.4135%" height="15" fill="rgb(220,167,47)" fg:x="205004360183" fg:w="1406942866"/><text x="60.5060%" y="543.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (16,297,949,281 samples, 4.79%)</title><rect x="55.8981%" y="581" width="4.7904%" height="15" fill="rgb(238,105,10)" fg:x="190177622584" fg:w="16297949281"/><text x="56.1481%" y="591.50">core::..</text></g><g><title>core::slice::sort::stable::quicksort::stable_partition (15,481,195,307 samples, 4.55%)</title><rect x="56.1381%" y="565" width="4.5503%" height="15" fill="rgb(213,227,17)" fg:x="190994376558" fg:w="15481195307"/><text x="56.3881%" y="575.50">core:..</text></g><g><title>core::slice::sort::stable::quicksort::PartitionState&lt;T&gt;::partition_one (2,719,020,429 samples, 0.80%)</title><rect x="59.8893%" y="549" width="0.7992%" height="15" fill="rgb(217,132,38)" fg:x="203756551436" fg:w="2719020429"/><text x="60.1393%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (36,835,565 samples, 0.01%)</title><rect x="60.6776%" y="533" width="0.0108%" height="15" fill="rgb(242,146,4)" fg:x="206438736300" fg:w="36835565"/><text x="60.9276%" y="543.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (94,400,218 samples, 0.03%)</title><rect x="60.7072%" y="565" width="0.0277%" height="15" fill="rgb(212,61,9)" fg:x="206539310166" fg:w="94400218"/><text x="60.9572%" y="575.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (89,296,364 samples, 0.03%)</title><rect x="60.7087%" y="549" width="0.0262%" height="15" fill="rgb(247,126,22)" fg:x="206544414020" fg:w="89296364"/><text x="60.9587%" y="559.50"></text></g><g><title>criterion::stats::sum (89,296,364 samples, 0.03%)</title><rect x="60.7087%" y="533" width="0.0262%" height="15" fill="rgb(220,196,2)" fg:x="206544414020" fg:w="89296364"/><text x="60.9587%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (89,296,364 samples, 0.03%)</title><rect x="60.7087%" y="517" width="0.0262%" height="15" fill="rgb(208,46,4)" fg:x="206544414020" fg:w="89296364"/><text x="60.9587%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (89,296,364 samples, 0.03%)</title><rect x="60.7087%" y="501" width="0.0262%" height="15" fill="rgb(252,104,46)" fg:x="206544414020" fg:w="89296364"/><text x="60.9587%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (89,296,364 samples, 0.03%)</title><rect x="60.7087%" y="485" width="0.0262%" height="15" fill="rgb(237,152,48)" fg:x="206544414020" fg:w="89296364"/><text x="60.9587%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (88,794,860 samples, 0.03%)</title><rect x="60.7089%" y="469" width="0.0261%" height="15" fill="rgb(221,59,37)" fg:x="206544915524" fg:w="88794860"/><text x="60.9589%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (88,794,860 samples, 0.03%)</title><rect x="60.7089%" y="453" width="0.0261%" height="15" fill="rgb(209,202,51)" fg:x="206544915524" fg:w="88794860"/><text x="60.9589%" y="463.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (88,794,860 samples, 0.03%)</title><rect x="60.7089%" y="437" width="0.0261%" height="15" fill="rgb(228,81,30)" fg:x="206544915524" fg:w="88794860"/><text x="60.9589%" y="447.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::new (36,814,392 samples, 0.01%)</title><rect x="60.7439%" y="549" width="0.0108%" height="15" fill="rgb(227,42,39)" fg:x="206664114080" fg:w="36814392"/><text x="60.9939%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (36,814,392 samples, 0.01%)</title><rect x="60.7439%" y="533" width="0.0108%" height="15" fill="rgb(221,26,2)" fg:x="206664114080" fg:w="36814392"/><text x="60.9939%" y="543.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (71,417,624 samples, 0.02%)</title><rect x="60.7349%" y="565" width="0.0210%" height="15" fill="rgb(254,61,31)" fg:x="206633710384" fg:w="71417624"/><text x="60.9849%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (55,639,061 samples, 0.02%)</title><rect x="60.7574%" y="485" width="0.0164%" height="15" fill="rgb(222,173,38)" fg:x="206710220984" fg:w="55639061"/><text x="61.0074%" y="495.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (55,639,061 samples, 0.02%)</title><rect x="60.7574%" y="469" width="0.0164%" height="15" fill="rgb(218,50,12)" fg:x="206710220984" fg:w="55639061"/><text x="61.0074%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68,055,803 samples, 0.02%)</title><rect x="60.7574%" y="533" width="0.0200%" height="15" fill="rgb(223,88,40)" fg:x="206710220984" fg:w="68055803"/><text x="61.0074%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68,055,803 samples, 0.02%)</title><rect x="60.7574%" y="517" width="0.0200%" height="15" fill="rgb(237,54,19)" fg:x="206710220984" fg:w="68055803"/><text x="61.0074%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (68,055,803 samples, 0.02%)</title><rect x="60.7574%" y="501" width="0.0200%" height="15" fill="rgb(251,129,25)" fg:x="206710220984" fg:w="68055803"/><text x="61.0074%" y="511.50"></text></g><g><title>criterion::analysis::estimates::stats (276,181,321 samples, 0.08%)</title><rect x="60.6984%" y="581" width="0.0812%" height="15" fill="rgb(238,97,19)" fg:x="206509305660" fg:w="276181321"/><text x="60.9484%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::std_dev (80,358,973 samples, 0.02%)</title><rect x="60.7559%" y="565" width="0.0236%" height="15" fill="rgb(240,169,18)" fg:x="206705128008" fg:w="80358973"/><text x="61.0059%" y="575.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var (75,265,997 samples, 0.02%)</title><rect x="60.7574%" y="549" width="0.0221%" height="15" fill="rgb(230,187,49)" fg:x="206710220984" fg:w="75265997"/><text x="61.0074%" y="559.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (199,747,999 samples, 0.06%)</title><rect x="61.5817%" y="533" width="0.0587%" height="15" fill="rgb(209,44,26)" fg:x="209514457848" fg:w="199747999"/><text x="61.8317%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,914,015,129 samples, 1.15%)</title><rect x="61.5808%" y="549" width="1.1504%" height="15" fill="rgb(244,0,6)" fg:x="209511603133" fg:w="3914015129"/><text x="61.8308%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (3,711,412,415 samples, 1.09%)</title><rect x="61.6404%" y="533" width="1.0909%" height="15" fill="rgb(248,18,21)" fg:x="209714205847" fg:w="3711412415"/><text x="61.8904%" y="543.50"></text></g><g><title>criterion::black_box (1,176,929,134 samples, 0.35%)</title><rect x="62.7313%" y="549" width="0.3459%" height="15" fill="rgb(245,180,19)" fg:x="213425618262" fg:w="1176929134"/><text x="62.9813%" y="559.50"></text></g><g><title>core::ptr::read_volatile (1,176,929,134 samples, 0.35%)</title><rect x="62.7313%" y="533" width="0.3459%" height="15" fill="rgb(252,118,36)" fg:x="213425618262" fg:w="1176929134"/><text x="62.9813%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (945,635,950 samples, 0.28%)</title><rect x="67.0816%" y="517" width="0.2779%" height="15" fill="rgb(210,224,19)" fg:x="228226336057" fg:w="945635950"/><text x="67.3316%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (945,635,950 samples, 0.28%)</title><rect x="67.0816%" y="501" width="0.2779%" height="15" fill="rgb(218,30,24)" fg:x="228226336057" fg:w="945635950"/><text x="67.3316%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (567,378,960 samples, 0.17%)</title><rect x="67.1928%" y="485" width="0.1668%" height="15" fill="rgb(219,75,50)" fg:x="228604593047" fg:w="567378960"/><text x="67.4428%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (567,378,960 samples, 0.17%)</title><rect x="67.1928%" y="469" width="0.1668%" height="15" fill="rgb(234,72,50)" fg:x="228604593047" fg:w="567378960"/><text x="67.4428%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (567,378,960 samples, 0.17%)</title><rect x="67.1928%" y="453" width="0.1668%" height="15" fill="rgb(219,100,48)" fg:x="228604593047" fg:w="567378960"/><text x="67.4428%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (567,378,960 samples, 0.17%)</title><rect x="67.1928%" y="437" width="0.1668%" height="15" fill="rgb(253,5,41)" fg:x="228604593047" fg:w="567378960"/><text x="67.4428%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2,055,522,704 samples, 0.60%)</title><rect x="67.0816%" y="533" width="0.6042%" height="15" fill="rgb(247,181,11)" fg:x="228226336057" fg:w="2055522704"/><text x="67.3316%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,109,886,754 samples, 0.33%)</title><rect x="67.3595%" y="517" width="0.3262%" height="15" fill="rgb(222,223,25)" fg:x="229171972007" fg:w="1109886754"/><text x="67.6095%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,109,886,754 samples, 0.33%)</title><rect x="67.3595%" y="501" width="0.3262%" height="15" fill="rgb(214,198,28)" fg:x="229171972007" fg:w="1109886754"/><text x="67.6095%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,628,728,908 samples, 0.77%)</title><rect x="67.6857%" y="533" width="0.7727%" height="15" fill="rgb(230,46,43)" fg:x="230281858761" fg:w="2628728908"/><text x="67.9357%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,628,728,908 samples, 0.77%)</title><rect x="67.6857%" y="517" width="0.7727%" height="15" fill="rgb(233,65,53)" fg:x="230281858761" fg:w="2628728908"/><text x="67.9357%" y="527.50"></text></g><g><title>backend_comparison::bench_contains_operation::{{closure}}::{{closure}} (25,312,103,292 samples, 7.44%)</title><rect x="61.1140%" y="565" width="7.4399%" height="15" fill="rgb(221,121,27)" fg:x="207923315277" fg:w="25312103292"/><text x="61.3640%" y="575.50">backend_co..</text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrie::contains (18,632,871,173 samples, 5.48%)</title><rect x="63.0772%" y="549" width="5.4767%" height="15" fill="rgb(247,70,47)" fg:x="214602547396" fg:w="18632871173"/><text x="63.3272%" y="559.50">libleve..</text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (324,830,900 samples, 0.10%)</title><rect x="68.4584%" y="533" width="0.0955%" height="15" fill="rgb(228,85,35)" fg:x="232910587669" fg:w="324830900"/><text x="68.7084%" y="543.50"></text></g><g><title>backend_comparison::bench_distance_2_matching::{{closure}}::{{closure}} (61,654,845 samples, 0.02%)</title><rect x="68.5598%" y="565" width="0.0181%" height="15" fill="rgb(209,50,18)" fg:x="233255741644" fg:w="61654845"/><text x="68.8098%" y="575.50"></text></g><g><title>backend_comparison::bench_exact_matching::{{closure}}::{{closure}} (48,896,143 samples, 0.01%)</title><rect x="68.5780%" y="565" width="0.0144%" height="15" fill="rgb(250,19,35)" fg:x="233317396489" fg:w="48896143"/><text x="68.8280%" y="575.50"></text></g><g><title>&lt;u64 as core::iter::range::Step&gt;::forward_unchecked (78,384,118 samples, 0.02%)</title><rect x="68.5923%" y="533" width="0.0230%" height="15" fill="rgb(253,107,29)" fg:x="233366292632" fg:w="78384118"/><text x="68.8423%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_add (78,384,118 samples, 0.02%)</title><rect x="68.5923%" y="517" width="0.0230%" height="15" fill="rgb(252,179,29)" fg:x="233366292632" fg:w="78384118"/><text x="68.8423%" y="527.50"></text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (26,678,948,790 samples, 7.84%)</title><rect x="60.7825%" y="581" width="7.8416%" height="15" fill="rgb(238,194,6)" fg:x="206795571575" fg:w="26678948790"/><text x="61.0325%" y="591.50">criterion::..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (108,227,733 samples, 0.03%)</title><rect x="68.5923%" y="565" width="0.0318%" height="15" fill="rgb(238,164,29)" fg:x="233366292632" fg:w="108227733"/><text x="68.8423%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (108,227,733 samples, 0.03%)</title><rect x="68.5923%" y="549" width="0.0318%" height="15" fill="rgb(224,25,9)" fg:x="233366292632" fg:w="108227733"/><text x="68.8423%" y="559.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (37,065,590 samples, 0.01%)</title><rect x="68.6405%" y="149" width="0.0109%" height="15" fill="rgb(244,153,23)" fg:x="233530175924" fg:w="37065590"/><text x="68.8905%" y="159.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (37,065,590 samples, 0.01%)</title><rect x="68.6405%" y="133" width="0.0109%" height="15" fill="rgb(212,203,14)" fg:x="233530175924" fg:w="37065590"/><text x="68.8905%" y="143.50"></text></g><g><title>exp (34,313,491 samples, 0.01%)</title><rect x="68.6413%" y="117" width="0.0101%" height="15" fill="rgb(220,164,20)" fg:x="233532928023" fg:w="34313491"/><text x="68.8913%" y="127.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (42,337,421 samples, 0.01%)</title><rect x="68.6405%" y="165" width="0.0124%" height="15" fill="rgb(222,203,48)" fg:x="233530175924" fg:w="42337421"/><text x="68.8905%" y="175.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="405" width="0.0133%" height="15" fill="rgb(215,159,22)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="415.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="389" width="0.0133%" height="15" fill="rgb(216,183,47)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="373" width="0.0133%" height="15" fill="rgb(229,195,25)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="357" width="0.0133%" height="15" fill="rgb(224,132,51)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="367.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="341" width="0.0133%" height="15" fill="rgb(240,63,7)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="351.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="325" width="0.0133%" height="15" fill="rgb(249,182,41)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="335.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="309" width="0.0133%" height="15" fill="rgb(243,47,26)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="293" width="0.0133%" height="15" fill="rgb(233,48,2)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="277" width="0.0133%" height="15" fill="rgb(244,165,34)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="261" width="0.0133%" height="15" fill="rgb(207,89,7)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="245" width="0.0133%" height="15" fill="rgb(244,117,36)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="255.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="229" width="0.0133%" height="15" fill="rgb(226,144,34)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="239.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="213" width="0.0133%" height="15" fill="rgb(213,23,19)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="197" width="0.0133%" height="15" fill="rgb(217,75,12)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="207.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (45,125,332 samples, 0.01%)</title><rect x="68.6405%" y="181" width="0.0133%" height="15" fill="rgb(224,159,17)" fg:x="233530175924" fg:w="45125332"/><text x="68.8905%" y="191.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (48,768,827 samples, 0.01%)</title><rect x="68.6538%" y="85" width="0.0143%" height="15" fill="rgb(217,118,1)" fg:x="233575301256" fg:w="48768827"/><text x="68.9038%" y="95.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (48,768,827 samples, 0.01%)</title><rect x="68.6538%" y="69" width="0.0143%" height="15" fill="rgb(232,180,48)" fg:x="233575301256" fg:w="48768827"/><text x="68.9038%" y="79.50"></text></g><g><title>exp (48,768,827 samples, 0.01%)</title><rect x="68.6538%" y="53" width="0.0143%" height="15" fill="rgb(230,27,33)" fg:x="233575301256" fg:w="48768827"/><text x="68.9038%" y="63.50"></text></g><g><title>[libm.so.6] (40,912,540 samples, 0.01%)</title><rect x="68.6561%" y="37" width="0.0120%" height="15" fill="rgb(205,31,21)" fg:x="233583157543" fg:w="40912540"/><text x="68.9061%" y="47.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (51,548,547 samples, 0.02%)</title><rect x="68.6538%" y="101" width="0.0152%" height="15" fill="rgb(253,59,4)" fg:x="233575301256" fg:w="51548547"/><text x="68.9038%" y="111.50"></text></g><g><title>criterion::stats::univariate::bootstrap::{{closure}} (130,526,199 samples, 0.04%)</title><rect x="68.6314%" y="581" width="0.0384%" height="15" fill="rgb(224,201,9)" fg:x="233499098715" fg:w="130526199"/><text x="68.8814%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;f64&gt;,alloc::vec::Vec&lt;f64&gt;)&gt; (105,019,516 samples, 0.03%)</title><rect x="68.6389%" y="565" width="0.0309%" height="15" fill="rgb(229,206,30)" fg:x="233524605398" fg:w="105019516"/><text x="68.8889%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (105,019,516 samples, 0.03%)</title><rect x="68.6389%" y="549" width="0.0309%" height="15" fill="rgb(212,67,47)" fg:x="233524605398" fg:w="105019516"/><text x="68.8889%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (105,019,516 samples, 0.03%)</title><rect x="68.6389%" y="533" width="0.0309%" height="15" fill="rgb(211,96,50)" fg:x="233524605398" fg:w="105019516"/><text x="68.8889%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (105,019,516 samples, 0.03%)</title><rect x="68.6389%" y="517" width="0.0309%" height="15" fill="rgb(252,114,18)" fg:x="233524605398" fg:w="105019516"/><text x="68.8889%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (105,019,516 samples, 0.03%)</title><rect x="68.6389%" y="501" width="0.0309%" height="15" fill="rgb(223,58,37)" fg:x="233524605398" fg:w="105019516"/><text x="68.8889%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (105,019,516 samples, 0.03%)</title><rect x="68.6389%" y="485" width="0.0309%" height="15" fill="rgb(237,70,4)" fg:x="233524605398" fg:w="105019516"/><text x="68.8889%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (105,019,516 samples, 0.03%)</title><rect x="68.6389%" y="469" width="0.0309%" height="15" fill="rgb(244,85,46)" fg:x="233524605398" fg:w="105019516"/><text x="68.8889%" y="479.50"></text></g><g><title>__rustc::__rdl_dealloc (105,019,516 samples, 0.03%)</title><rect x="68.6389%" y="453" width="0.0309%" height="15" fill="rgb(223,39,52)" fg:x="233524605398" fg:w="105019516"/><text x="68.8889%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (105,019,516 samples, 0.03%)</title><rect x="68.6389%" y="437" width="0.0309%" height="15" fill="rgb(218,200,14)" fg:x="233524605398" fg:w="105019516"/><text x="68.8889%" y="447.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (99,448,990 samples, 0.03%)</title><rect x="68.6405%" y="421" width="0.0292%" height="15" fill="rgb(208,171,16)" fg:x="233530175924" fg:w="99448990"/><text x="68.8905%" y="431.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="405" width="0.0160%" height="15" fill="rgb(234,200,18)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="415.50"></text></g><g><title>std::panic::catch_unwind (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="389" width="0.0160%" height="15" fill="rgb(228,45,11)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="399.50"></text></g><g><title>std::panicking::catch_unwind (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="373" width="0.0160%" height="15" fill="rgb(237,182,11)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="383.50"></text></g><g><title>std::panicking::catch_unwind::do_call (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="357" width="0.0160%" height="15" fill="rgb(241,175,49)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="367.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="341" width="0.0160%" height="15" fill="rgb(247,38,35)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="351.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="325" width="0.0160%" height="15" fill="rgb(228,39,49)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="309" width="0.0160%" height="15" fill="rgb(226,101,26)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="293" width="0.0160%" height="15" fill="rgb(206,141,19)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="303.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="277" width="0.0160%" height="15" fill="rgb(211,200,13)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="287.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="261" width="0.0160%" height="15" fill="rgb(241,121,6)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="245" width="0.0160%" height="15" fill="rgb(234,221,29)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="229" width="0.0160%" height="15" fill="rgb(229,136,5)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="213" width="0.0160%" height="15" fill="rgb(238,36,11)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="197" width="0.0160%" height="15" fill="rgb(251,55,41)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="181" width="0.0160%" height="15" fill="rgb(242,34,40)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="191.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="165" width="0.0160%" height="15" fill="rgb(215,42,17)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="175.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="149" width="0.0160%" height="15" fill="rgb(207,44,46)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="159.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="133" width="0.0160%" height="15" fill="rgb(211,206,28)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="143.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (54,323,658 samples, 0.02%)</title><rect x="68.6538%" y="117" width="0.0160%" height="15" fill="rgb(237,167,16)" fg:x="233575301256" fg:w="54323658"/><text x="68.9038%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (35,812,803 samples, 0.01%)</title><rect x="68.7570%" y="565" width="0.0105%" height="15" fill="rgb(233,66,6)" fg:x="233926399776" fg:w="35812803"/><text x="69.0070%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (35,812,803 samples, 0.01%)</title><rect x="68.7570%" y="549" width="0.0105%" height="15" fill="rgb(246,123,29)" fg:x="233926399776" fg:w="35812803"/><text x="69.0070%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_add (236,775,488 samples, 0.07%)</title><rect x="68.9497%" y="533" width="0.0696%" height="15" fill="rgb(209,62,40)" fg:x="234582051250" fg:w="236775488"/><text x="69.1997%" y="543.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (308,245,168 samples, 0.09%)</title><rect x="69.0193%" y="533" width="0.0906%" height="15" fill="rgb(218,4,25)" fg:x="234818826738" fg:w="308245168"/><text x="69.2693%" y="543.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (1,610,235,280 samples, 0.47%)</title><rect x="68.6697%" y="581" width="0.4733%" height="15" fill="rgb(253,91,49)" fg:x="233629624914" fg:w="1610235280"/><text x="68.9197%" y="591.50"></text></g><g><title>oorandom::Rand64::rand_range (1,228,401,908 samples, 0.36%)</title><rect x="68.7820%" y="565" width="0.3611%" height="15" fill="rgb(228,155,29)" fg:x="234011458286" fg:w="1228401908"/><text x="69.0320%" y="575.50"></text></g><g><title>oorandom::Rand64::rand_u64 (1,078,669,577 samples, 0.32%)</title><rect x="68.8260%" y="549" width="0.3170%" height="15" fill="rgb(243,57,37)" fg:x="234161190617" fg:w="1078669577"/><text x="69.0760%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (112,788,288 samples, 0.03%)</title><rect x="69.1099%" y="533" width="0.0332%" height="15" fill="rgb(244,167,17)" fg:x="235127071906" fg:w="112788288"/><text x="69.3599%" y="543.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (43,978,235 samples, 0.01%)</title><rect x="69.1430%" y="581" width="0.0129%" height="15" fill="rgb(207,181,38)" fg:x="235239860194" fg:w="43978235"/><text x="69.3930%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (108,813,081 samples, 0.03%)</title><rect x="69.1560%" y="565" width="0.0320%" height="15" fill="rgb(211,8,23)" fg:x="235283838429" fg:w="108813081"/><text x="69.4060%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (108,813,081 samples, 0.03%)</title><rect x="69.1560%" y="549" width="0.0320%" height="15" fill="rgb(235,11,44)" fg:x="235283838429" fg:w="108813081"/><text x="69.4060%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (108,813,081 samples, 0.03%)</title><rect x="69.1560%" y="533" width="0.0320%" height="15" fill="rgb(248,18,52)" fg:x="235283838429" fg:w="108813081"/><text x="69.4060%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (76,341,248 samples, 0.02%)</title><rect x="69.1655%" y="517" width="0.0224%" height="15" fill="rgb(208,4,7)" fg:x="235316310262" fg:w="76341248"/><text x="69.4155%" y="527.50"></text></g><g><title>core::ptr::copy_nonoverlapping (76,341,248 samples, 0.02%)</title><rect x="69.1655%" y="501" width="0.0224%" height="15" fill="rgb(240,17,39)" fg:x="235316310262" fg:w="76341248"/><text x="69.4155%" y="511.50"></text></g><g><title>[libc.so.6] (76,341,248 samples, 0.02%)</title><rect x="69.1655%" y="485" width="0.0224%" height="15" fill="rgb(207,170,3)" fg:x="235316310262" fg:w="76341248"/><text x="69.4155%" y="495.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (114,311,797 samples, 0.03%)</title><rect x="69.1560%" y="581" width="0.0336%" height="15" fill="rgb(236,100,52)" fg:x="235283838429" fg:w="114311797"/><text x="69.4060%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (142,021,188 samples, 0.04%)</title><rect x="69.2157%" y="565" width="0.0417%" height="15" fill="rgb(246,78,51)" fg:x="235487120528" fg:w="142021188"/><text x="69.4657%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (142,021,188 samples, 0.04%)</title><rect x="69.2157%" y="549" width="0.0417%" height="15" fill="rgb(211,17,15)" fg:x="235487120528" fg:w="142021188"/><text x="69.4657%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (142,021,188 samples, 0.04%)</title><rect x="69.2157%" y="533" width="0.0417%" height="15" fill="rgb(209,59,46)" fg:x="235487120528" fg:w="142021188"/><text x="69.4657%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (173,609,012 samples, 0.05%)</title><rect x="69.2576%" y="565" width="0.0510%" height="15" fill="rgb(210,92,25)" fg:x="235629771205" fg:w="173609012"/><text x="69.5076%" y="575.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (173,609,012 samples, 0.05%)</title><rect x="69.2576%" y="549" width="0.0510%" height="15" fill="rgb(238,174,52)" fg:x="235629771205" fg:w="173609012"/><text x="69.5076%" y="559.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (173,609,012 samples, 0.05%)</title><rect x="69.2576%" y="533" width="0.0510%" height="15" fill="rgb(230,73,7)" fg:x="235629771205" fg:w="173609012"/><text x="69.5076%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (50,840,538 samples, 0.01%)</title><rect x="69.3149%" y="565" width="0.0149%" height="15" fill="rgb(243,124,40)" fg:x="235824493586" fg:w="50840538"/><text x="69.5649%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (50,840,538 samples, 0.01%)</title><rect x="69.3149%" y="549" width="0.0149%" height="15" fill="rgb(244,170,11)" fg:x="235824493586" fg:w="50840538"/><text x="69.5649%" y="559.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (115,297,026 samples, 0.03%)</title><rect x="69.3354%" y="565" width="0.0339%" height="15" fill="rgb(207,114,54)" fg:x="235894493791" fg:w="115297026"/><text x="69.5854%" y="575.50"></text></g><g><title>crossbeam_epoch::default::with_handle (115,297,026 samples, 0.03%)</title><rect x="69.3354%" y="549" width="0.0339%" height="15" fill="rgb(205,42,20)" fg:x="235894493791" fg:w="115297026"/><text x="69.5854%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (115,297,026 samples, 0.03%)</title><rect x="69.3354%" y="533" width="0.0339%" height="15" fill="rgb(230,30,28)" fg:x="235894493791" fg:w="115297026"/><text x="69.5854%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (72,562,899 samples, 0.02%)</title><rect x="69.3480%" y="517" width="0.0213%" height="15" fill="rgb(205,73,54)" fg:x="235937227918" fg:w="72562899"/><text x="69.5980%" y="527.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (72,562,899 samples, 0.02%)</title><rect x="69.3480%" y="501" width="0.0213%" height="15" fill="rgb(254,227,23)" fg:x="235937227918" fg:w="72562899"/><text x="69.5980%" y="511.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (760,146,919 samples, 0.22%)</title><rect x="69.1907%" y="581" width="0.2234%" height="15" fill="rgb(228,202,34)" fg:x="235402061915" fg:w="760146919"/><text x="69.4407%" y="591.50"></text></g><g><title>crossbeam_epoch::default::pin (152,418,017 samples, 0.04%)</title><rect x="69.3693%" y="565" width="0.0448%" height="15" fill="rgb(222,225,37)" fg:x="236009790817" fg:w="152418017"/><text x="69.6193%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (34,423,349 samples, 0.01%)</title><rect x="69.4331%" y="549" width="0.0101%" height="15" fill="rgb(221,14,54)" fg:x="236226729016" fg:w="34423349"/><text x="69.6831%" y="559.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (34,423,349 samples, 0.01%)</title><rect x="69.4331%" y="533" width="0.0101%" height="15" fill="rgb(254,102,2)" fg:x="236226729016" fg:w="34423349"/><text x="69.6831%" y="543.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (595,176,010 samples, 0.17%)</title><rect x="69.4511%" y="485" width="0.1749%" height="15" fill="rgb(232,104,17)" fg:x="236288071408" fg:w="595176010"/><text x="69.7011%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (595,176,010 samples, 0.17%)</title><rect x="69.4511%" y="469" width="0.1749%" height="15" fill="rgb(250,220,14)" fg:x="236288071408" fg:w="595176010"/><text x="69.7011%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (595,176,010 samples, 0.17%)</title><rect x="69.4511%" y="453" width="0.1749%" height="15" fill="rgb(241,158,9)" fg:x="236288071408" fg:w="595176010"/><text x="69.7011%" y="463.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (272,983,369 samples, 0.08%)</title><rect x="69.6261%" y="485" width="0.0802%" height="15" fill="rgb(246,9,43)" fg:x="236883247418" fg:w="272983369"/><text x="69.8761%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (272,983,369 samples, 0.08%)</title><rect x="69.6261%" y="469" width="0.0802%" height="15" fill="rgb(206,73,33)" fg:x="236883247418" fg:w="272983369"/><text x="69.8761%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (272,983,369 samples, 0.08%)</title><rect x="69.6261%" y="453" width="0.0802%" height="15" fill="rgb(222,79,8)" fg:x="236883247418" fg:w="272983369"/><text x="69.8761%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (57,766,379 samples, 0.02%)</title><rect x="69.7224%" y="421" width="0.0170%" height="15" fill="rgb(234,8,54)" fg:x="237210922969" fg:w="57766379"/><text x="69.9724%" y="431.50"></text></g><g><title>syscall (57,766,379 samples, 0.02%)</title><rect x="69.7224%" y="405" width="0.0170%" height="15" fill="rgb(209,134,38)" fg:x="237210922969" fg:w="57766379"/><text x="69.9724%" y="415.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1,110,764,999 samples, 0.33%)</title><rect x="69.4141%" y="581" width="0.3265%" height="15" fill="rgb(230,127,29)" fg:x="236162208834" fg:w="1110764999"/><text x="69.6641%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,067,257,386 samples, 0.31%)</title><rect x="69.4269%" y="565" width="0.3137%" height="15" fill="rgb(242,44,41)" fg:x="236205716447" fg:w="1067257386"/><text x="69.6769%" y="575.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1,011,821,468 samples, 0.30%)</title><rect x="69.4432%" y="549" width="0.2974%" height="15" fill="rgb(222,56,43)" fg:x="236261152365" fg:w="1011821468"/><text x="69.6932%" y="559.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1,011,821,468 samples, 0.30%)</title><rect x="69.4432%" y="533" width="0.2974%" height="15" fill="rgb(238,39,47)" fg:x="236261152365" fg:w="1011821468"/><text x="69.6932%" y="543.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1,011,821,468 samples, 0.30%)</title><rect x="69.4432%" y="517" width="0.2974%" height="15" fill="rgb(226,79,43)" fg:x="236261152365" fg:w="1011821468"/><text x="69.6932%" y="527.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1,011,821,468 samples, 0.30%)</title><rect x="69.4432%" y="501" width="0.2974%" height="15" fill="rgb(242,105,53)" fg:x="236261152365" fg:w="1011821468"/><text x="69.6932%" y="511.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (64,074,208 samples, 0.02%)</title><rect x="69.7218%" y="485" width="0.0188%" height="15" fill="rgb(251,132,46)" fg:x="237208899625" fg:w="64074208"/><text x="69.9718%" y="495.50"></text></g><g><title>std::sync::poison::condvar::Condvar::wait (62,050,864 samples, 0.02%)</title><rect x="69.7224%" y="469" width="0.0182%" height="15" fill="rgb(231,77,14)" fg:x="237210922969" fg:w="62050864"/><text x="69.9724%" y="479.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (62,050,864 samples, 0.02%)</title><rect x="69.7224%" y="453" width="0.0182%" height="15" fill="rgb(240,135,9)" fg:x="237210922969" fg:w="62050864"/><text x="69.9724%" y="463.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (62,050,864 samples, 0.02%)</title><rect x="69.7224%" y="437" width="0.0182%" height="15" fill="rgb(248,109,14)" fg:x="237210922969" fg:w="62050864"/><text x="69.9724%" y="447.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (145,203,798 samples, 0.04%)</title><rect x="69.7495%" y="549" width="0.0427%" height="15" fill="rgb(227,146,52)" fg:x="237303345191" fg:w="145203798"/><text x="69.9995%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (145,203,798 samples, 0.04%)</title><rect x="69.7495%" y="533" width="0.0427%" height="15" fill="rgb(232,54,3)" fg:x="237303345191" fg:w="145203798"/><text x="69.9995%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (145,203,798 samples, 0.04%)</title><rect x="69.7495%" y="517" width="0.0427%" height="15" fill="rgb(229,201,43)" fg:x="237303345191" fg:w="145203798"/><text x="69.9995%" y="527.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (160,350,139 samples, 0.05%)</title><rect x="69.7461%" y="565" width="0.0471%" height="15" fill="rgb(252,161,33)" fg:x="237291788040" fg:w="160350139"/><text x="69.9961%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (184,490,400 samples, 0.05%)</title><rect x="69.7442%" y="581" width="0.0542%" height="15" fill="rgb(226,146,40)" fg:x="237285030439" fg:w="184490400"/><text x="69.9942%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42,044,162 samples, 0.01%)</title><rect x="69.8116%" y="277" width="0.0124%" height="15" fill="rgb(219,47,25)" fg:x="237514525690" fg:w="42044162"/><text x="70.0616%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42,044,162 samples, 0.01%)</title><rect x="69.8116%" y="261" width="0.0124%" height="15" fill="rgb(250,135,13)" fg:x="237514525690" fg:w="42044162"/><text x="70.0616%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (42,044,162 samples, 0.01%)</title><rect x="69.8116%" y="245" width="0.0124%" height="15" fill="rgb(219,229,18)" fg:x="237514525690" fg:w="42044162"/><text x="70.0616%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (42,044,162 samples, 0.01%)</title><rect x="69.8116%" y="229" width="0.0124%" height="15" fill="rgb(217,152,27)" fg:x="237514525690" fg:w="42044162"/><text x="70.0616%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42,044,162 samples, 0.01%)</title><rect x="69.8116%" y="213" width="0.0124%" height="15" fill="rgb(225,71,47)" fg:x="237514525690" fg:w="42044162"/><text x="70.0616%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42,044,162 samples, 0.01%)</title><rect x="69.8116%" y="197" width="0.0124%" height="15" fill="rgb(220,139,14)" fg:x="237514525690" fg:w="42044162"/><text x="70.0616%" y="207.50"></text></g><g><title>alloc::alloc::alloc (42,044,162 samples, 0.01%)</title><rect x="69.8116%" y="181" width="0.0124%" height="15" fill="rgb(247,54,32)" fg:x="237514525690" fg:w="42044162"/><text x="70.0616%" y="191.50"></text></g><g><title>__rustc::__rdl_alloc (42,044,162 samples, 0.01%)</title><rect x="69.8116%" y="165" width="0.0124%" height="15" fill="rgb(252,131,39)" fg:x="237514525690" fg:w="42044162"/><text x="70.0616%" y="175.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (42,044,162 samples, 0.01%)</title><rect x="69.8116%" y="149" width="0.0124%" height="15" fill="rgb(210,108,39)" fg:x="237514525690" fg:w="42044162"/><text x="70.0616%" y="159.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (66,413,793 samples, 0.02%)</title><rect x="69.8116%" y="405" width="0.0195%" height="15" fill="rgb(205,23,29)" fg:x="237514525690" fg:w="66413793"/><text x="70.0616%" y="415.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (66,413,793 samples, 0.02%)</title><rect x="69.8116%" y="389" width="0.0195%" height="15" fill="rgb(246,139,46)" fg:x="237514525690" fg:w="66413793"/><text x="70.0616%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (66,413,793 samples, 0.02%)</title><rect x="69.8116%" y="373" width="0.0195%" height="15" fill="rgb(250,81,26)" fg:x="237514525690" fg:w="66413793"/><text x="70.0616%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (66,413,793 samples, 0.02%)</title><rect x="69.8116%" y="357" width="0.0195%" height="15" fill="rgb(214,104,7)" fg:x="237514525690" fg:w="66413793"/><text x="70.0616%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (66,413,793 samples, 0.02%)</title><rect x="69.8116%" y="341" width="0.0195%" height="15" fill="rgb(233,189,8)" fg:x="237514525690" fg:w="66413793"/><text x="70.0616%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (66,413,793 samples, 0.02%)</title><rect x="69.8116%" y="325" width="0.0195%" height="15" fill="rgb(228,141,17)" fg:x="237514525690" fg:w="66413793"/><text x="70.0616%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66,413,793 samples, 0.02%)</title><rect x="69.8116%" y="309" width="0.0195%" height="15" fill="rgb(247,157,1)" fg:x="237514525690" fg:w="66413793"/><text x="70.0616%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (66,413,793 samples, 0.02%)</title><rect x="69.8116%" y="293" width="0.0195%" height="15" fill="rgb(249,225,5)" fg:x="237514525690" fg:w="66413793"/><text x="70.0616%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (134,340,837 samples, 0.04%)</title><rect x="69.8106%" y="565" width="0.0395%" height="15" fill="rgb(242,55,13)" fg:x="237510930490" fg:w="134340837"/><text x="70.0606%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (134,340,837 samples, 0.04%)</title><rect x="69.8106%" y="549" width="0.0395%" height="15" fill="rgb(230,49,50)" fg:x="237510930490" fg:w="134340837"/><text x="70.0606%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (134,340,837 samples, 0.04%)</title><rect x="69.8106%" y="533" width="0.0395%" height="15" fill="rgb(241,111,38)" fg:x="237510930490" fg:w="134340837"/><text x="70.0606%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place{{reify.shim}} (134,340,837 samples, 0.04%)</title><rect x="69.8106%" y="517" width="0.0395%" height="15" fill="rgb(252,155,4)" fg:x="237510930490" fg:w="134340837"/><text x="70.0606%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (134,340,837 samples, 0.04%)</title><rect x="69.8106%" y="501" width="0.0395%" height="15" fill="rgb(212,69,32)" fg:x="237510930490" fg:w="134340837"/><text x="70.0606%" y="511.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (134,340,837 samples, 0.04%)</title><rect x="69.8106%" y="485" width="0.0395%" height="15" fill="rgb(243,107,47)" fg:x="237510930490" fg:w="134340837"/><text x="70.0606%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (134,340,837 samples, 0.04%)</title><rect x="69.8106%" y="469" width="0.0395%" height="15" fill="rgb(247,130,12)" fg:x="237510930490" fg:w="134340837"/><text x="70.0606%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (134,340,837 samples, 0.04%)</title><rect x="69.8106%" y="453" width="0.0395%" height="15" fill="rgb(233,74,16)" fg:x="237510930490" fg:w="134340837"/><text x="70.0606%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (130,745,637 samples, 0.04%)</title><rect x="69.8116%" y="437" width="0.0384%" height="15" fill="rgb(208,58,18)" fg:x="237514525690" fg:w="130745637"/><text x="70.0616%" y="447.50"></text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrie::from_terms::{{closure}} (130,745,637 samples, 0.04%)</title><rect x="69.8116%" y="421" width="0.0384%" height="15" fill="rgb(242,225,1)" fg:x="237514525690" fg:w="130745637"/><text x="70.0616%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (64,331,844 samples, 0.02%)</title><rect x="69.8311%" y="405" width="0.0189%" height="15" fill="rgb(249,39,40)" fg:x="237580939483" fg:w="64331844"/><text x="70.0811%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (64,331,844 samples, 0.02%)</title><rect x="69.8311%" y="389" width="0.0189%" height="15" fill="rgb(207,72,44)" fg:x="237580939483" fg:w="64331844"/><text x="70.0811%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (64,331,844 samples, 0.02%)</title><rect x="69.8311%" y="373" width="0.0189%" height="15" fill="rgb(215,193,12)" fg:x="237580939483" fg:w="64331844"/><text x="70.0811%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64,331,844 samples, 0.02%)</title><rect x="69.8311%" y="357" width="0.0189%" height="15" fill="rgb(248,41,39)" fg:x="237580939483" fg:w="64331844"/><text x="70.0811%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (64,331,844 samples, 0.02%)</title><rect x="69.8311%" y="341" width="0.0189%" height="15" fill="rgb(253,85,4)" fg:x="237580939483" fg:w="64331844"/><text x="70.0811%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (64,331,844 samples, 0.02%)</title><rect x="69.8311%" y="325" width="0.0189%" height="15" fill="rgb(243,70,31)" fg:x="237580939483" fg:w="64331844"/><text x="70.0811%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (64,331,844 samples, 0.02%)</title><rect x="69.8311%" y="309" width="0.0189%" height="15" fill="rgb(253,195,26)" fg:x="237580939483" fg:w="64331844"/><text x="70.0811%" y="319.50"></text></g><g><title>__rustc::__rdl_dealloc (64,331,844 samples, 0.02%)</title><rect x="69.8311%" y="293" width="0.0189%" height="15" fill="rgb(243,42,11)" fg:x="237580939483" fg:w="64331844"/><text x="70.0811%" y="303.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (64,331,844 samples, 0.02%)</title><rect x="69.8311%" y="277" width="0.0189%" height="15" fill="rgb(239,66,17)" fg:x="237580939483" fg:w="64331844"/><text x="70.0811%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (108,761,823 samples, 0.03%)</title><rect x="69.8500%" y="565" width="0.0320%" height="15" fill="rgb(217,132,21)" fg:x="237645271327" fg:w="108761823"/><text x="70.1000%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (108,761,823 samples, 0.03%)</title><rect x="69.8500%" y="549" width="0.0320%" height="15" fill="rgb(252,202,21)" fg:x="237645271327" fg:w="108761823"/><text x="70.1000%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (108,761,823 samples, 0.03%)</title><rect x="69.8500%" y="533" width="0.0320%" height="15" fill="rgb(233,98,36)" fg:x="237645271327" fg:w="108761823"/><text x="70.1000%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108,761,823 samples, 0.03%)</title><rect x="69.8500%" y="517" width="0.0320%" height="15" fill="rgb(216,153,54)" fg:x="237645271327" fg:w="108761823"/><text x="70.1000%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (108,761,823 samples, 0.03%)</title><rect x="69.8500%" y="501" width="0.0320%" height="15" fill="rgb(250,99,7)" fg:x="237645271327" fg:w="108761823"/><text x="70.1000%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (108,761,823 samples, 0.03%)</title><rect x="69.8500%" y="485" width="0.0320%" height="15" fill="rgb(207,56,50)" fg:x="237645271327" fg:w="108761823"/><text x="70.1000%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (108,761,823 samples, 0.03%)</title><rect x="69.8500%" y="469" width="0.0320%" height="15" fill="rgb(244,61,34)" fg:x="237645271327" fg:w="108761823"/><text x="70.1000%" y="479.50"></text></g><g><title>__rustc::__rdl_dealloc (108,761,823 samples, 0.03%)</title><rect x="69.8500%" y="453" width="0.0320%" height="15" fill="rgb(241,50,38)" fg:x="237645271327" fg:w="108761823"/><text x="70.1000%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (108,761,823 samples, 0.03%)</title><rect x="69.8500%" y="437" width="0.0320%" height="15" fill="rgb(212,166,30)" fg:x="237645271327" fg:w="108761823"/><text x="70.1000%" y="447.50"></text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieBuilder::add_transition (61,499,031 samples, 0.02%)</title><rect x="69.8909%" y="549" width="0.0181%" height="15" fill="rgb(249,127,32)" fg:x="237784217005" fg:w="61499031"/><text x="70.1409%" y="559.50"></text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieBuilder::find_free_base (48,588,156 samples, 0.01%)</title><rect x="69.8947%" y="533" width="0.0143%" height="15" fill="rgb(209,103,0)" fg:x="237797127880" fg:w="48588156"/><text x="70.1447%" y="543.50"></text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrie::from_terms (374,219,985 samples, 0.11%)</title><rect x="69.8097%" y="581" width="0.1100%" height="15" fill="rgb(238,209,51)" fg:x="237508074939" fg:w="374219985"/><text x="70.0597%" y="591.50"></text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieBuilder::insert (112,906,176 samples, 0.03%)</title><rect x="69.8865%" y="565" width="0.0332%" height="15" fill="rgb(237,56,23)" fg:x="237769388748" fg:w="112906176"/><text x="70.1365%" y="575.50"></text></g><g><title>liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieBuilder::transition (36,578,888 samples, 0.01%)</title><rect x="69.9090%" y="549" width="0.0108%" height="15" fill="rgb(215,153,46)" fg:x="237845716036" fg:w="36578888"/><text x="70.1590%" y="559.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (51,892,759 samples, 0.02%)</title><rect x="69.9525%" y="565" width="0.0153%" height="15" fill="rgb(224,49,31)" fg:x="237994010780" fg:w="51892759"/><text x="70.2025%" y="575.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (51,892,759 samples, 0.02%)</title><rect x="69.9525%" y="549" width="0.0153%" height="15" fill="rgb(250,18,42)" fg:x="237994010780" fg:w="51892759"/><text x="70.2025%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (51,892,759 samples, 0.02%)</title><rect x="69.9525%" y="533" width="0.0153%" height="15" fill="rgb(215,176,39)" fg:x="237994010780" fg:w="51892759"/><text x="70.2025%" y="543.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (51,892,759 samples, 0.02%)</title><rect x="69.9525%" y="517" width="0.0153%" height="15" fill="rgb(223,77,29)" fg:x="237994010780" fg:w="51892759"/><text x="70.2025%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (51,892,759 samples, 0.02%)</title><rect x="69.9525%" y="501" width="0.0153%" height="15" fill="rgb(234,94,52)" fg:x="237994010780" fg:w="51892759"/><text x="70.2025%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (51,892,759 samples, 0.02%)</title><rect x="69.9525%" y="485" width="0.0153%" height="15" fill="rgb(220,154,50)" fg:x="237994010780" fg:w="51892759"/><text x="70.2025%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (51,892,759 samples, 0.02%)</title><rect x="69.9525%" y="469" width="0.0153%" height="15" fill="rgb(212,11,10)" fg:x="237994010780" fg:w="51892759"/><text x="70.2025%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (51,892,759 samples, 0.02%)</title><rect x="69.9525%" y="453" width="0.0153%" height="15" fill="rgb(205,166,19)" fg:x="237994010780" fg:w="51892759"/><text x="70.2025%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (51,892,759 samples, 0.02%)</title><rect x="69.9525%" y="437" width="0.0153%" height="15" fill="rgb(244,198,16)" fg:x="237994010780" fg:w="51892759"/><text x="70.2025%" y="447.50"></text></g><g><title>core::ptr::copy_nonoverlapping (51,892,759 samples, 0.02%)</title><rect x="69.9525%" y="421" width="0.0153%" height="15" fill="rgb(219,69,12)" fg:x="237994010780" fg:w="51892759"/><text x="70.2025%" y="431.50"></text></g><g><title>&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrie as liblevenshtein::dictionary::Dictionary&gt;::root (94,859,645 samples, 0.03%)</title><rect x="69.9678%" y="565" width="0.0279%" height="15" fill="rgb(245,30,7)" fg:x="238045903539" fg:w="94859645"/><text x="70.2178%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (94,859,645 samples, 0.03%)</title><rect x="69.9678%" y="549" width="0.0279%" height="15" fill="rgb(218,221,48)" fg:x="238045903539" fg:w="94859645"/><text x="70.2178%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (94,859,645 samples, 0.03%)</title><rect x="69.9678%" y="533" width="0.0279%" height="15" fill="rgb(216,66,15)" fg:x="238045903539" fg:w="94859645"/><text x="70.2178%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (94,859,645 samples, 0.03%)</title><rect x="69.9678%" y="517" width="0.0279%" height="15" fill="rgb(226,122,50)" fg:x="238045903539" fg:w="94859645"/><text x="70.2178%" y="527.50"></text></g><g><title>[libc.so.6] (3,896,036,485 samples, 1.15%)</title><rect x="70.0662%" y="373" width="1.1451%" height="15" fill="rgb(239,156,16)" fg:x="238380607271" fg:w="3896036485"/><text x="70.3162%" y="383.50"></text></g><g><title>[libc.so.6] (3,468,070,505 samples, 1.02%)</title><rect x="70.1920%" y="357" width="1.0194%" height="15" fill="rgb(224,27,38)" fg:x="238808573251" fg:w="3468070505"/><text x="70.4420%" y="367.50"></text></g><g><title>[libc.so.6] (669,490,592 samples, 0.20%)</title><rect x="71.0145%" y="341" width="0.1968%" height="15" fill="rgb(224,39,27)" fg:x="241607153164" fg:w="669490592"/><text x="71.2645%" y="351.50"></text></g><g><title>liblevenshtein::transducer::pool::StatePool::new (4,081,964,914 samples, 1.20%)</title><rect x="70.0419%" y="549" width="1.1998%" height="15" fill="rgb(215,92,29)" fg:x="238297933264" fg:w="4081964914"/><text x="70.2919%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,081,964,914 samples, 1.20%)</title><rect x="70.0419%" y="533" width="1.1998%" height="15" fill="rgb(207,159,16)" fg:x="238297933264" fg:w="4081964914"/><text x="70.2919%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,081,964,914 samples, 1.20%)</title><rect x="70.0419%" y="517" width="1.1998%" height="15" fill="rgb(238,163,47)" fg:x="238297933264" fg:w="4081964914"/><text x="70.2919%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,081,964,914 samples, 1.20%)</title><rect x="70.0419%" y="501" width="1.1998%" height="15" fill="rgb(219,91,49)" fg:x="238297933264" fg:w="4081964914"/><text x="70.2919%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,081,964,914 samples, 1.20%)</title><rect x="70.0419%" y="485" width="1.1998%" height="15" fill="rgb(227,167,31)" fg:x="238297933264" fg:w="4081964914"/><text x="70.2919%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,081,964,914 samples, 1.20%)</title><rect x="70.0419%" y="469" width="1.1998%" height="15" fill="rgb(234,80,54)" fg:x="238297933264" fg:w="4081964914"/><text x="70.2919%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,005,192,813 samples, 1.18%)</title><rect x="70.0644%" y="453" width="1.1772%" height="15" fill="rgb(212,114,2)" fg:x="238374705365" fg:w="4005192813"/><text x="70.3144%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,005,192,813 samples, 1.18%)</title><rect x="70.0644%" y="437" width="1.1772%" height="15" fill="rgb(234,50,24)" fg:x="238374705365" fg:w="4005192813"/><text x="70.3144%" y="447.50"></text></g><g><title>alloc::alloc::alloc (4,005,192,813 samples, 1.18%)</title><rect x="70.0644%" y="421" width="1.1772%" height="15" fill="rgb(221,68,8)" fg:x="238374705365" fg:w="4005192813"/><text x="70.3144%" y="431.50"></text></g><g><title>__rustc::__rdl_alloc (4,005,192,813 samples, 1.18%)</title><rect x="70.0644%" y="405" width="1.1772%" height="15" fill="rgb(254,180,31)" fg:x="238374705365" fg:w="4005192813"/><text x="70.3144%" y="415.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4,005,192,813 samples, 1.18%)</title><rect x="70.0644%" y="389" width="1.1772%" height="15" fill="rgb(247,130,50)" fg:x="238374705365" fg:w="4005192813"/><text x="70.3144%" y="399.50"></text></g><g><title>malloc (103,254,422 samples, 0.03%)</title><rect x="71.2113%" y="373" width="0.0303%" height="15" fill="rgb(211,109,4)" fg:x="242276643756" fg:w="103254422"/><text x="71.4613%" y="383.50"></text></g><g><title>liblevenshtein::transducer::Transducer&lt;D&gt;::query (4,537,339,209 samples, 1.33%)</title><rect x="69.9279%" y="581" width="1.3336%" height="15" fill="rgb(238,50,21)" fg:x="237910177675" fg:w="4537339209"/><text x="70.1779%" y="591.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::with_substring_mode (4,306,753,700 samples, 1.27%)</title><rect x="69.9957%" y="565" width="1.2659%" height="15" fill="rgb(225,57,45)" fg:x="238140763184" fg:w="4306753700"/><text x="70.2457%" y="575.50"></text></g><g><title>liblevenshtein::transducer::transition::initial_state (67,618,706 samples, 0.02%)</title><rect x="71.2417%" y="549" width="0.0199%" height="15" fill="rgb(209,196,50)" fg:x="242379898178" fg:w="67618706"/><text x="71.4917%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (98,580,460 samples, 0.03%)</title><rect x="71.3329%" y="549" width="0.0290%" height="15" fill="rgb(242,140,13)" fg:x="242690215918" fg:w="98580460"/><text x="71.5829%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (89,532,433 samples, 0.03%)</title><rect x="71.3355%" y="533" width="0.0263%" height="15" fill="rgb(217,111,7)" fg:x="242699263945" fg:w="89532433"/><text x="71.5855%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (89,532,433 samples, 0.03%)</title><rect x="71.3355%" y="517" width="0.0263%" height="15" fill="rgb(253,193,51)" fg:x="242699263945" fg:w="89532433"/><text x="71.5855%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (89,532,433 samples, 0.03%)</title><rect x="71.3355%" y="501" width="0.0263%" height="15" fill="rgb(252,70,29)" fg:x="242699263945" fg:w="89532433"/><text x="71.5855%" y="511.50"></text></g><g><title>alloc::alloc::alloc (89,532,433 samples, 0.03%)</title><rect x="71.3355%" y="485" width="0.0263%" height="15" fill="rgb(232,127,12)" fg:x="242699263945" fg:w="89532433"/><text x="71.5855%" y="495.50"></text></g><g><title>__rustc::__rdl_alloc (89,532,433 samples, 0.03%)</title><rect x="71.3355%" y="469" width="0.0263%" height="15" fill="rgb(211,180,21)" fg:x="242699263945" fg:w="89532433"/><text x="71.5855%" y="479.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (89,532,433 samples, 0.03%)</title><rect x="71.3355%" y="453" width="0.0263%" height="15" fill="rgb(229,72,13)" fg:x="242699263945" fg:w="89532433"/><text x="71.5855%" y="463.50"></text></g><g><title>malloc (54,139,735 samples, 0.02%)</title><rect x="71.3459%" y="437" width="0.0159%" height="15" fill="rgb(240,211,49)" fg:x="242734656643" fg:w="54139735"/><text x="71.5959%" y="447.50"></text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (113,846,513 samples, 0.03%)</title><rect x="71.4463%" y="389" width="0.0335%" height="15" fill="rgb(219,149,40)" fg:x="243076001653" fg:w="113846513"/><text x="71.6963%" y="399.50"></text></g><g><title>core::num::&lt;impl u8&gt;::unchecked_add (113,846,513 samples, 0.03%)</title><rect x="71.4463%" y="373" width="0.0335%" height="15" fill="rgb(210,127,46)" fg:x="243076001653" fg:w="113846513"/><text x="71.6963%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (165,006,013 samples, 0.05%)</title><rect x="71.4797%" y="389" width="0.0485%" height="15" fill="rgb(220,106,7)" fg:x="243189848166" fg:w="165006013"/><text x="71.7297%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (903,840,369 samples, 0.27%)</title><rect x="71.5282%" y="389" width="0.2657%" height="15" fill="rgb(249,31,22)" fg:x="243354854179" fg:w="903840369"/><text x="71.7782%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (903,840,369 samples, 0.27%)</title><rect x="71.5282%" y="373" width="0.2657%" height="15" fill="rgb(253,1,49)" fg:x="243354854179" fg:w="903840369"/><text x="71.7782%" y="383.50"></text></g><g><title>&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode as liblevenshtein::dictionary::DictionaryNode&gt;::edges::{{closure}} (903,840,369 samples, 0.27%)</title><rect x="71.5282%" y="357" width="0.2657%" height="15" fill="rgb(227,144,33)" fg:x="243354854179" fg:w="903840369"/><text x="71.7782%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (62,080,984 samples, 0.02%)</title><rect x="71.7757%" y="341" width="0.0182%" height="15" fill="rgb(249,163,44)" fg:x="244196613564" fg:w="62080984"/><text x="72.0257%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (59,341,471 samples, 0.02%)</title><rect x="71.7765%" y="325" width="0.0174%" height="15" fill="rgb(234,15,39)" fg:x="244199353077" fg:w="59341471"/><text x="72.0265%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_add (59,341,471 samples, 0.02%)</title><rect x="71.7765%" y="309" width="0.0174%" height="15" fill="rgb(207,66,16)" fg:x="244199353077" fg:w="59341471"/><text x="72.0265%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (1,421,956,832 samples, 0.42%)</title><rect x="71.3768%" y="421" width="0.4179%" height="15" fill="rgb(233,112,24)" fg:x="242839507725" fg:w="1421956832"/><text x="71.6268%" y="431.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (1,421,956,832 samples, 0.42%)</title><rect x="71.3768%" y="405" width="0.4179%" height="15" fill="rgb(230,90,22)" fg:x="242839507725" fg:w="1421956832"/><text x="71.6268%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,437,724,887 samples, 0.42%)</title><rect x="71.3768%" y="453" width="0.4226%" height="15" fill="rgb(229,61,13)" fg:x="242839507725" fg:w="1437724887"/><text x="71.6268%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,437,724,887 samples, 0.42%)</title><rect x="71.3768%" y="437" width="0.4226%" height="15" fill="rgb(225,57,24)" fg:x="242839507725" fg:w="1437724887"/><text x="71.6268%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,538,836,214 samples, 0.45%)</title><rect x="71.3741%" y="485" width="0.4523%" height="15" fill="rgb(208,169,48)" fg:x="242830561015" fg:w="1538836214"/><text x="71.6241%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,538,836,214 samples, 0.45%)</title><rect x="71.3741%" y="469" width="0.4523%" height="15" fill="rgb(244,218,51)" fg:x="242830561015" fg:w="1538836214"/><text x="71.6241%" y="479.50"></text></g><g><title>core::ptr::write (89,433,368 samples, 0.03%)</title><rect x="71.8001%" y="453" width="0.0263%" height="15" fill="rgb(214,148,10)" fg:x="244279963861" fg:w="89433368"/><text x="72.0501%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (47,079,110 samples, 0.01%)</title><rect x="71.8362%" y="421" width="0.0138%" height="15" fill="rgb(225,174,27)" fg:x="244402573471" fg:w="47079110"/><text x="72.0862%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (701,398,057 samples, 0.21%)</title><rect x="71.8264%" y="453" width="0.2062%" height="15" fill="rgb(230,96,26)" fg:x="244369397229" fg:w="701398057"/><text x="72.0764%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (701,398,057 samples, 0.21%)</title><rect x="71.8264%" y="437" width="0.2062%" height="15" fill="rgb(232,10,30)" fg:x="244369397229" fg:w="701398057"/><text x="72.0764%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (621,142,705 samples, 0.18%)</title><rect x="71.8500%" y="421" width="0.1826%" height="15" fill="rgb(222,8,50)" fg:x="244449652581" fg:w="621142705"/><text x="72.1000%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (621,142,705 samples, 0.18%)</title><rect x="71.8500%" y="405" width="0.1826%" height="15" fill="rgb(213,81,27)" fg:x="244449652581" fg:w="621142705"/><text x="72.1000%" y="415.50"></text></g><g><title>&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode as liblevenshtein::dictionary::DictionaryNode&gt;::edges::{{closure}} (621,142,705 samples, 0.18%)</title><rect x="71.8500%" y="389" width="0.1826%" height="15" fill="rgb(245,50,10)" fg:x="244449652581" fg:w="621142705"/><text x="72.1000%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (39,576,051 samples, 0.01%)</title><rect x="72.0210%" y="373" width="0.0116%" height="15" fill="rgb(216,100,18)" fg:x="245031219235" fg:w="39576051"/><text x="72.2710%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (36,555,923 samples, 0.01%)</title><rect x="72.0218%" y="357" width="0.0107%" height="15" fill="rgb(236,147,54)" fg:x="245034239363" fg:w="36555923"/><text x="72.2718%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_add (36,555,923 samples, 0.01%)</title><rect x="72.0218%" y="341" width="0.0107%" height="15" fill="rgb(205,143,26)" fg:x="245034239363" fg:w="36555923"/><text x="72.2718%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (710,465,880 samples, 0.21%)</title><rect x="71.8264%" y="485" width="0.2088%" height="15" fill="rgb(236,26,9)" fg:x="244369397229" fg:w="710465880"/><text x="72.0764%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (710,465,880 samples, 0.21%)</title><rect x="71.8264%" y="469" width="0.2088%" height="15" fill="rgb(221,165,53)" fg:x="244369397229" fg:w="710465880"/><text x="72.0764%" y="479.50"></text></g><g><title>&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode as liblevenshtein::dictionary::DictionaryNode&gt;::edges (2,624,974,609 samples, 0.77%)</title><rect x="71.3267%" y="565" width="0.7715%" height="15" fill="rgb(214,110,17)" fg:x="242669155734" fg:w="2624974609"/><text x="71.5767%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,505,333,965 samples, 0.74%)</title><rect x="71.3619%" y="549" width="0.7364%" height="15" fill="rgb(237,197,12)" fg:x="242788796378" fg:w="2505333965"/><text x="71.6119%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,505,333,965 samples, 0.74%)</title><rect x="71.3619%" y="533" width="0.7364%" height="15" fill="rgb(205,84,17)" fg:x="242788796378" fg:w="2505333965"/><text x="71.6119%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,505,333,965 samples, 0.74%)</title><rect x="71.3619%" y="517" width="0.7364%" height="15" fill="rgb(237,18,45)" fg:x="242788796378" fg:w="2505333965"/><text x="71.6119%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,505,333,965 samples, 0.74%)</title><rect x="71.3619%" y="501" width="0.7364%" height="15" fill="rgb(221,87,14)" fg:x="242788796378" fg:w="2505333965"/><text x="71.6119%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (214,267,234 samples, 0.06%)</title><rect x="72.0353%" y="485" width="0.0630%" height="15" fill="rgb(238,186,15)" fg:x="245079863109" fg:w="214267234"/><text x="72.2853%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (214,267,234 samples, 0.06%)</title><rect x="72.0353%" y="469" width="0.0630%" height="15" fill="rgb(208,115,11)" fg:x="245079863109" fg:w="214267234"/><text x="72.2853%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (214,267,234 samples, 0.06%)</title><rect x="72.0353%" y="453" width="0.0630%" height="15" fill="rgb(254,175,0)" fg:x="245079863109" fg:w="214267234"/><text x="72.2853%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (214,267,234 samples, 0.06%)</title><rect x="72.0353%" y="437" width="0.0630%" height="15" fill="rgb(227,24,42)" fg:x="245079863109" fg:w="214267234"/><text x="72.2853%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (214,267,234 samples, 0.06%)</title><rect x="72.0353%" y="421" width="0.0630%" height="15" fill="rgb(223,211,37)" fg:x="245079863109" fg:w="214267234"/><text x="72.2853%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (214,267,234 samples, 0.06%)</title><rect x="72.0353%" y="405" width="0.0630%" height="15" fill="rgb(235,49,27)" fg:x="245079863109" fg:w="214267234"/><text x="72.2853%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (214,267,234 samples, 0.06%)</title><rect x="72.0353%" y="389" width="0.0630%" height="15" fill="rgb(254,97,51)" fg:x="245079863109" fg:w="214267234"/><text x="72.2853%" y="399.50"></text></g><g><title>alloc::alloc::alloc (214,267,234 samples, 0.06%)</title><rect x="72.0353%" y="373" width="0.0630%" height="15" fill="rgb(249,51,40)" fg:x="245079863109" fg:w="214267234"/><text x="72.2853%" y="383.50"></text></g><g><title>__rustc::__rdl_alloc (214,267,234 samples, 0.06%)</title><rect x="72.0353%" y="357" width="0.0630%" height="15" fill="rgb(210,128,45)" fg:x="245079863109" fg:w="214267234"/><text x="72.2853%" y="367.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (214,267,234 samples, 0.06%)</title><rect x="72.0353%" y="341" width="0.0630%" height="15" fill="rgb(224,137,50)" fg:x="245079863109" fg:w="214267234"/><text x="72.2853%" y="351.50"></text></g><g><title>malloc (83,264,242 samples, 0.02%)</title><rect x="72.0738%" y="325" width="0.0245%" height="15" fill="rgb(242,15,9)" fg:x="245210866101" fg:w="83264242"/><text x="72.3238%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (64,533,327 samples, 0.02%)</title><rect x="72.0982%" y="565" width="0.0190%" height="15" fill="rgb(233,187,41)" fg:x="245294130343" fg:w="64533327"/><text x="72.3482%" y="575.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (183,886,243 samples, 0.05%)</title><rect x="72.1172%" y="565" width="0.0540%" height="15" fill="rgb(227,2,29)" fg:x="245358663670" fg:w="183886243"/><text x="72.3672%" y="575.50"></text></g><g><title>[libc.so.6] (56,139,457 samples, 0.02%)</title><rect x="72.1757%" y="389" width="0.0165%" height="15" fill="rgb(222,70,3)" fg:x="245557589374" fg:w="56139457"/><text x="72.4257%" y="399.50"></text></g><g><title>[libc.so.6] (40,938,170 samples, 0.01%)</title><rect x="72.1801%" y="373" width="0.0120%" height="15" fill="rgb(213,11,42)" fg:x="245572790661" fg:w="40938170"/><text x="72.4301%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (65,070,977 samples, 0.02%)</title><rect x="72.1748%" y="533" width="0.0191%" height="15" fill="rgb(225,150,9)" fg:x="245554489496" fg:w="65070977"/><text x="72.4248%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (65,070,977 samples, 0.02%)</title><rect x="72.1748%" y="517" width="0.0191%" height="15" fill="rgb(230,162,45)" fg:x="245554489496" fg:w="65070977"/><text x="72.4248%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (65,070,977 samples, 0.02%)</title><rect x="72.1748%" y="501" width="0.0191%" height="15" fill="rgb(222,14,52)" fg:x="245554489496" fg:w="65070977"/><text x="72.4248%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (65,070,977 samples, 0.02%)</title><rect x="72.1748%" y="485" width="0.0191%" height="15" fill="rgb(254,198,14)" fg:x="245554489496" fg:w="65070977"/><text x="72.4248%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65,070,977 samples, 0.02%)</title><rect x="72.1748%" y="469" width="0.0191%" height="15" fill="rgb(220,217,30)" fg:x="245554489496" fg:w="65070977"/><text x="72.4248%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65,070,977 samples, 0.02%)</title><rect x="72.1748%" y="453" width="0.0191%" height="15" fill="rgb(215,146,41)" fg:x="245554489496" fg:w="65070977"/><text x="72.4248%" y="463.50"></text></g><g><title>alloc::alloc::alloc (65,070,977 samples, 0.02%)</title><rect x="72.1748%" y="437" width="0.0191%" height="15" fill="rgb(217,27,36)" fg:x="245554489496" fg:w="65070977"/><text x="72.4248%" y="447.50"></text></g><g><title>__rustc::__rdl_alloc (65,070,977 samples, 0.02%)</title><rect x="72.1748%" y="421" width="0.0191%" height="15" fill="rgb(219,218,39)" fg:x="245554489496" fg:w="65070977"/><text x="72.4248%" y="431.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (65,070,977 samples, 0.02%)</title><rect x="72.1748%" y="405" width="0.0191%" height="15" fill="rgb(219,4,42)" fg:x="245554489496" fg:w="65070977"/><text x="72.4248%" y="415.50"></text></g><g><title>[libc.so.6] (52,678,984 samples, 0.02%)</title><rect x="72.1986%" y="421" width="0.0155%" height="15" fill="rgb(249,119,36)" fg:x="245635413823" fg:w="52678984"/><text x="72.4486%" y="431.50"></text></g><g><title>[libc.so.6] (47,021,107 samples, 0.01%)</title><rect x="72.2002%" y="405" width="0.0138%" height="15" fill="rgb(209,23,33)" fg:x="245641071700" fg:w="47021107"/><text x="72.4502%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (149,140,646 samples, 0.04%)</title><rect x="72.1748%" y="565" width="0.0438%" height="15" fill="rgb(211,10,0)" fg:x="245554489496" fg:w="149140646"/><text x="72.4248%" y="575.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::queue_children::{{closure}} (149,140,646 samples, 0.04%)</title><rect x="72.1748%" y="549" width="0.0438%" height="15" fill="rgb(208,99,37)" fg:x="245554489496" fg:w="149140646"/><text x="72.4248%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (84,069,669 samples, 0.02%)</title><rect x="72.1939%" y="533" width="0.0247%" height="15" fill="rgb(213,132,31)" fg:x="245619560473" fg:w="84069669"/><text x="72.4439%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (84,069,669 samples, 0.02%)</title><rect x="72.1939%" y="517" width="0.0247%" height="15" fill="rgb(243,129,40)" fg:x="245619560473" fg:w="84069669"/><text x="72.4439%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (84,069,669 samples, 0.02%)</title><rect x="72.1939%" y="501" width="0.0247%" height="15" fill="rgb(210,66,33)" fg:x="245619560473" fg:w="84069669"/><text x="72.4439%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (84,069,669 samples, 0.02%)</title><rect x="72.1939%" y="485" width="0.0247%" height="15" fill="rgb(209,189,4)" fg:x="245619560473" fg:w="84069669"/><text x="72.4439%" y="495.50"></text></g><g><title>alloc::alloc::alloc (84,069,669 samples, 0.02%)</title><rect x="72.1939%" y="469" width="0.0247%" height="15" fill="rgb(214,107,37)" fg:x="245619560473" fg:w="84069669"/><text x="72.4439%" y="479.50"></text></g><g><title>__rustc::__rdl_alloc (84,069,669 samples, 0.02%)</title><rect x="72.1939%" y="453" width="0.0247%" height="15" fill="rgb(245,88,54)" fg:x="245619560473" fg:w="84069669"/><text x="72.4439%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (84,069,669 samples, 0.02%)</title><rect x="72.1939%" y="437" width="0.0247%" height="15" fill="rgb(205,146,20)" fg:x="245619560473" fg:w="84069669"/><text x="72.4439%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83,751,074 samples, 0.02%)</title><rect x="72.2204%" y="549" width="0.0246%" height="15" fill="rgb(220,161,25)" fg:x="245709648809" fg:w="83751074"/><text x="72.4704%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (77,749,989 samples, 0.02%)</title><rect x="72.2221%" y="533" width="0.0229%" height="15" fill="rgb(215,152,15)" fg:x="245715649894" fg:w="77749989"/><text x="72.4721%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (77,749,989 samples, 0.02%)</title><rect x="72.2221%" y="517" width="0.0229%" height="15" fill="rgb(233,192,44)" fg:x="245715649894" fg:w="77749989"/><text x="72.4721%" y="527.50"></text></g><g><title>__rustc::__rdl_dealloc (77,749,989 samples, 0.02%)</title><rect x="72.2221%" y="501" width="0.0229%" height="15" fill="rgb(240,170,46)" fg:x="245715649894" fg:w="77749989"/><text x="72.4721%" y="511.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (77,749,989 samples, 0.02%)</title><rect x="72.2221%" y="485" width="0.0229%" height="15" fill="rgb(207,104,33)" fg:x="245715649894" fg:w="77749989"/><text x="72.4721%" y="495.50"></text></g><g><title>[libc.so.6] (84,044,916 samples, 0.02%)</title><rect x="72.2450%" y="549" width="0.0247%" height="15" fill="rgb(219,21,39)" fg:x="245793399883" fg:w="84044916"/><text x="72.4950%" y="559.50"></text></g><g><title>[libc.so.6] (72,289,166 samples, 0.02%)</title><rect x="72.2484%" y="533" width="0.0212%" height="15" fill="rgb(214,133,29)" fg:x="245805155633" fg:w="72289166"/><text x="72.4984%" y="543.50"></text></g><g><title>[libc.so.6] (54,202,422 samples, 0.02%)</title><rect x="72.2538%" y="517" width="0.0159%" height="15" fill="rgb(226,93,6)" fg:x="245823242377" fg:w="54202422"/><text x="72.5038%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = (u8,liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode)&gt;&gt; (220,889,874 samples, 0.06%)</title><rect x="72.2186%" y="565" width="0.0649%" height="15" fill="rgb(252,222,34)" fg:x="245703630142" fg:w="220889874"/><text x="72.4686%" y="575.50"></text></g><g><title>cfree (47,075,217 samples, 0.01%)</title><rect x="72.2697%" y="549" width="0.0138%" height="15" fill="rgb(252,92,48)" fg:x="245877444799" fg:w="47075217"/><text x="72.5197%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;bool&gt;&gt;&gt; (80,958,834 samples, 0.02%)</title><rect x="72.2835%" y="549" width="0.0238%" height="15" fill="rgb(245,223,24)" fg:x="245924520016" fg:w="80958834"/><text x="72.5335%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (80,958,834 samples, 0.02%)</title><rect x="72.2835%" y="533" width="0.0238%" height="15" fill="rgb(205,176,3)" fg:x="245924520016" fg:w="80958834"/><text x="72.5335%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (80,958,834 samples, 0.02%)</title><rect x="72.2835%" y="517" width="0.0238%" height="15" fill="rgb(235,151,15)" fg:x="245924520016" fg:w="80958834"/><text x="72.5335%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (80,958,834 samples, 0.02%)</title><rect x="72.2835%" y="501" width="0.0238%" height="15" fill="rgb(237,209,11)" fg:x="245924520016" fg:w="80958834"/><text x="72.5335%" y="511.50"></text></g><g><title>liblevenshtein::transducer::query::QueryIterator&lt;N&gt;::queue_children (3,602,429,220 samples, 1.06%)</title><rect x="71.2615%" y="581" width="1.0588%" height="15" fill="rgb(243,227,24)" fg:x="242447516884" fg:w="3602429220"/><text x="71.5115%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;liblevenshtein::dictionary::double_array_trie::DoubleArrayTrieNode&gt; (125,426,088 samples, 0.04%)</title><rect x="72.2835%" y="565" width="0.0369%" height="15" fill="rgb(239,193,16)" fg:x="245924520016" fg:w="125426088"/><text x="72.5335%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;i32&gt;&gt;&gt; (44,467,254 samples, 0.01%)</title><rect x="72.3073%" y="549" width="0.0131%" height="15" fill="rgb(231,27,9)" fg:x="246005478850" fg:w="44467254"/><text x="72.5573%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44,467,254 samples, 0.01%)</title><rect x="72.3073%" y="533" width="0.0131%" height="15" fill="rgb(219,169,10)" fg:x="246005478850" fg:w="44467254"/><text x="72.5573%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (44,467,254 samples, 0.01%)</title><rect x="72.3073%" y="517" width="0.0131%" height="15" fill="rgb(244,229,43)" fg:x="246005478850" fg:w="44467254"/><text x="72.5573%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (44,467,254 samples, 0.01%)</title><rect x="72.3073%" y="501" width="0.0131%" height="15" fill="rgb(254,38,20)" fg:x="246005478850" fg:w="44467254"/><text x="72.5573%" y="511.50"></text></g><g><title>&lt;&amp;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (378,932,351 samples, 0.11%)</title><rect x="72.4588%" y="565" width="0.1114%" height="15" fill="rgb(250,47,30)" fg:x="246520725322" fg:w="378932351"/><text x="72.7088%" y="575.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (204,718,697 samples, 0.06%)</title><rect x="72.5100%" y="549" width="0.0602%" height="15" fill="rgb(224,124,36)" fg:x="246694938976" fg:w="204718697"/><text x="72.7600%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (204,718,697 samples, 0.06%)</title><rect x="72.5100%" y="533" width="0.0602%" height="15" fill="rgb(246,68,51)" fg:x="246694938976" fg:w="204718697"/><text x="72.7600%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (204,718,697 samples, 0.06%)</title><rect x="72.5100%" y="517" width="0.0602%" height="15" fill="rgb(253,43,49)" fg:x="246694938976" fg:w="204718697"/><text x="72.7600%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (415,112,922 samples, 0.12%)</title><rect x="72.5701%" y="565" width="0.1220%" height="15" fill="rgb(219,54,36)" fg:x="246899657673" fg:w="415112922"/><text x="72.8201%" y="575.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (131,500,556 samples, 0.04%)</title><rect x="72.6535%" y="549" width="0.0387%" height="15" fill="rgb(227,133,34)" fg:x="247183270039" fg:w="131500556"/><text x="72.9035%" y="559.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (78,070,115 samples, 0.02%)</title><rect x="72.6922%" y="565" width="0.0229%" height="15" fill="rgb(247,227,15)" fg:x="247314770595" fg:w="78070115"/><text x="72.9422%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (78,070,115 samples, 0.02%)</title><rect x="72.6922%" y="549" width="0.0229%" height="15" fill="rgb(229,96,14)" fg:x="247314770595" fg:w="78070115"/><text x="72.9422%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (78,070,115 samples, 0.02%)</title><rect x="72.6922%" y="533" width="0.0229%" height="15" fill="rgb(220,79,17)" fg:x="247314770595" fg:w="78070115"/><text x="72.9422%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (35,836,440 samples, 0.01%)</title><rect x="72.7573%" y="533" width="0.0105%" height="15" fill="rgb(205,131,53)" fg:x="247536427150" fg:w="35836440"/><text x="73.0073%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search::{{closure}} (118,484,028 samples, 0.03%)</title><rect x="72.7678%" y="533" width="0.0348%" height="15" fill="rgb(209,50,29)" fg:x="247572263590" fg:w="118484028"/><text x="73.0178%" y="543.50"></text></g><g><title>&lt;liblevenshtein::transducer::position::Position as core::cmp::Ord&gt;::cmp (118,484,028 samples, 0.03%)</title><rect x="72.7678%" y="517" width="0.0348%" height="15" fill="rgb(245,86,46)" fg:x="247572263590" fg:w="118484028"/><text x="73.0178%" y="527.50"></text></g><g><title>liblevenshtein::transducer::position::Position::compare (118,484,028 samples, 0.03%)</title><rect x="72.7678%" y="501" width="0.0348%" height="15" fill="rgb(235,66,46)" fg:x="247572263590" fg:w="118484028"/><text x="73.0178%" y="511.50"></text></g><g><title>core::cmp::Ordering::then_with (65,169,419 samples, 0.02%)</title><rect x="72.7835%" y="485" width="0.0192%" height="15" fill="rgb(232,148,31)" fg:x="247625578199" fg:w="65169419"/><text x="73.0335%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (342,426,429 samples, 0.10%)</title><rect x="72.7151%" y="565" width="0.1006%" height="15" fill="rgb(217,149,8)" fg:x="247392840710" fg:w="342426429"/><text x="72.9651%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (342,426,429 samples, 0.10%)</title><rect x="72.7151%" y="549" width="0.1006%" height="15" fill="rgb(209,183,11)" fg:x="247392840710" fg:w="342426429"/><text x="72.9651%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (44,519,521 samples, 0.01%)</title><rect x="72.8027%" y="533" width="0.0131%" height="15" fill="rgb(208,55,20)" fg:x="247690747618" fg:w="44519521"/><text x="73.0527%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (44,519,521 samples, 0.01%)</title><rect x="72.8027%" y="517" width="0.0131%" height="15" fill="rgb(218,39,14)" fg:x="247690747618" fg:w="44519521"/><text x="73.0527%" y="527.50"></text></g><g><title>liblevenshtein::transducer::position::Position::subsumes (241,434,726 samples, 0.07%)</title><rect x="72.8158%" y="565" width="0.0710%" height="15" fill="rgb(216,169,33)" fg:x="247735267139" fg:w="241434726"/><text x="73.0658%" y="575.50"></text></g><g><title>core::ptr::copy (63,475,762 samples, 0.02%)</title><rect x="72.9268%" y="549" width="0.0187%" height="15" fill="rgb(233,80,24)" fg:x="248113170954" fg:w="63475762"/><text x="73.1768%" y="559.50"></text></g><g><title>core::ptr::write (135,606,931 samples, 0.04%)</title><rect x="72.9489%" y="549" width="0.0399%" height="15" fill="rgb(213,179,31)" fg:x="248188232013" fg:w="135606931"/><text x="73.1989%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::insert (552,819,416 samples, 0.16%)</title><rect x="72.8867%" y="565" width="0.1625%" height="15" fill="rgb(209,19,5)" fg:x="247976701865" fg:w="552819416"/><text x="73.1367%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (205,682,337 samples, 0.06%)</title><rect x="72.9887%" y="549" width="0.0605%" height="15" fill="rgb(219,18,35)" fg:x="248323838944" fg:w="205682337"/><text x="73.2387%" y="559.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (110,372,052 samples, 0.03%)</title><rect x="73.1032%" y="533" width="0.0324%" height="15" fill="rgb(209,169,16)" fg:x="248713382498" fg:w="110372052"/><text x="73.3532%" y="543.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (163,929,046 samples, 0.05%)</title><rect x="73.1032%" y="549" width="0.0482%" height="15" fill="rgb(245,90,51)" fg:x="248713382498" fg:w="163929046"/><text x="73.3532%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (53,556,994 samples, 0.02%)</title><rect x="73.1357%" y="533" width="0.0157%" height="15" fill="rgb(220,99,45)" fg:x="248823754550" fg:w="53556994"/><text x="73.3857%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (53,556,994 samples, 0.02%)</title><rect x="73.1357%" y="517" width="0.0157%" height="15" fill="rgb(249,89,25)" fg:x="248823754550" fg:w="53556994"/><text x="73.3857%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (53,989,015 samples, 0.02%)</title><rect x="73.1514%" y="549" width="0.0159%" height="15" fill="rgb(239,193,0)" fg:x="248877311544" fg:w="53989015"/><text x="73.4014%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (53,989,015 samples, 0.02%)</title><rect x="73.1514%" y="533" width="0.0159%" height="15" fill="rgb(231,126,1)" fg:x="248877311544" fg:w="53989015"/><text x="73.4014%" y="543.50"></text></g><g><title>liblevenshtein::transducer::state::State::insert::{{closure}} (145,386,138 samples, 0.04%)</title><rect x="73.1673%" y="549" width="0.0427%" height="15" fill="rgb(243,166,3)" fg:x="248931300559" fg:w="145386138"/><text x="73.4173%" y="559.50"></text></g><g><title>liblevenshtein::transducer::position::Position::subsumes (145,386,138 samples, 0.04%)</title><rect x="73.1673%" y="533" width="0.0427%" height="15" fill="rgb(223,22,34)" fg:x="248931300559" fg:w="145386138"/><text x="73.4173%" y="543.50"></text></g><g><title>liblevenshtein::transducer::state::State::insert (3,247,481,685 samples, 0.95%)</title><rect x="72.3204%" y="581" width="0.9545%" height="15" fill="rgb(251,52,51)" fg:x="246049946104" fg:w="3247481685"/><text x="72.5704%" y="591.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::retain (767,906,508 samples, 0.23%)</title><rect x="73.0492%" y="565" width="0.2257%" height="15" fill="rgb(221,165,28)" fg:x="248529521281" fg:w="767906508"/><text x="73.2992%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::truncate (220,741,092 samples, 0.06%)</title><rect x="73.2100%" y="549" width="0.0649%" height="15" fill="rgb(218,121,47)" fg:x="249076686697" fg:w="220741092"/><text x="73.4600%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (214,824,434 samples, 0.06%)</title><rect x="73.2118%" y="533" width="0.0631%" height="15" fill="rgb(209,120,9)" fg:x="249082603355" fg:w="214824434"/><text x="73.4618%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (70,703,672 samples, 0.02%)</title><rect x="73.2541%" y="517" width="0.0208%" height="15" fill="rgb(236,68,12)" fg:x="249226724117" fg:w="70703672"/><text x="73.5041%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (152,419,855 samples, 0.04%)</title><rect x="73.8032%" y="565" width="0.0448%" height="15" fill="rgb(225,194,26)" fg:x="251094853192" fg:w="152419855"/><text x="74.0532%" y="575.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (149,345,105 samples, 0.04%)</title><rect x="73.8041%" y="549" width="0.0439%" height="15" fill="rgb(231,84,39)" fg:x="251097927942" fg:w="149345105"/><text x="74.0541%" y="559.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (556,601,643 samples, 0.16%)</title><rect x="73.8480%" y="565" width="0.1636%" height="15" fill="rgb(210,11,45)" fg:x="251247273047" fg:w="556601643"/><text x="74.0980%" y="575.50"></text></g><g><title>core::ptr::read (267,589,463 samples, 0.08%)</title><rect x="73.9330%" y="549" width="0.0787%" height="15" fill="rgb(224,54,52)" fg:x="251536285227" fg:w="267589463"/><text x="74.1830%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (60,263,475 samples, 0.02%)</title><rect x="74.0116%" y="549" width="0.0177%" height="15" fill="rgb(238,102,14)" fg:x="251803874690" fg:w="60263475"/><text x="74.2616%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (60,263,475 samples, 0.02%)</title><rect x="74.0116%" y="533" width="0.0177%" height="15" fill="rgb(243,160,52)" fg:x="251803874690" fg:w="60263475"/><text x="74.2616%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (54,090,988 samples, 0.02%)</title><rect x="74.0134%" y="517" width="0.0159%" height="15" fill="rgb(216,114,19)" fg:x="251810047177" fg:w="54090988"/><text x="74.2634%" y="527.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (377,513,851 samples, 0.11%)</title><rect x="74.0116%" y="565" width="0.1110%" height="15" fill="rgb(244,166,37)" fg:x="251803874690" fg:w="377513851"/><text x="74.2616%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::set_len (317,250,376 samples, 0.09%)</title><rect x="74.0293%" y="549" width="0.0932%" height="15" fill="rgb(246,29,44)" fg:x="251864138165" fg:w="317250376"/><text x="74.2793%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::IntoIter&lt;[liblevenshtein::transducer::position::Position: 4]&gt;&gt; (63,652,911 samples, 0.02%)</title><rect x="74.1226%" y="565" width="0.0187%" height="15" fill="rgb(215,56,53)" fg:x="252181388541" fg:w="63652911"/><text x="74.3726%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[liblevenshtein::transducer::position::Position: 4]&gt;&gt; (63,652,911 samples, 0.02%)</title><rect x="74.1226%" y="549" width="0.0187%" height="15" fill="rgb(217,60,2)" fg:x="252181388541" fg:w="63652911"/><text x="74.3726%" y="559.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (63,652,911 samples, 0.02%)</title><rect x="74.1226%" y="533" width="0.0187%" height="15" fill="rgb(207,26,24)" fg:x="252181388541" fg:w="63652911"/><text x="74.3726%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (387,596,483 samples, 0.11%)</title><rect x="74.2065%" y="549" width="0.1139%" height="15" fill="rgb(252,210,15)" fg:x="252466840031" fg:w="387596483"/><text x="74.4565%" y="559.50"></text></g><g><title>core::ptr::read (211,676,157 samples, 0.06%)</title><rect x="74.2582%" y="533" width="0.0622%" height="15" fill="rgb(253,209,26)" fg:x="252642760357" fg:w="211676157"/><text x="74.5082%" y="543.50"></text></g><g><title>liblevenshtein::transducer::pool::StatePool::acquire (718,091,691 samples, 0.21%)</title><rect x="74.1413%" y="565" width="0.2111%" height="15" fill="rgb(238,170,14)" fg:x="252245041452" fg:w="718091691"/><text x="74.3913%" y="575.50"></text></g><g><title>liblevenshtein::transducer::state::State::clear (108,696,629 samples, 0.03%)</title><rect x="74.3204%" y="549" width="0.0319%" height="15" fill="rgb(216,178,15)" fg:x="252854436514" fg:w="108696629"/><text x="74.5704%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::clear (108,696,629 samples, 0.03%)</title><rect x="74.3204%" y="533" width="0.0319%" height="15" fill="rgb(250,197,2)" fg:x="252854436514" fg:w="108696629"/><text x="74.5704%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::truncate (108,696,629 samples, 0.03%)</title><rect x="74.3204%" y="517" width="0.0319%" height="15" fill="rgb(212,70,42)" fg:x="252854436514" fg:w="108696629"/><text x="74.5704%" y="527.50"></text></g><g><title>liblevenshtein::transducer::pool::StatePool::release (447,965,593 samples, 0.13%)</title><rect x="74.3524%" y="565" width="0.1317%" height="15" fill="rgb(227,213,9)" fg:x="252963133143" fg:w="447965593"/><text x="74.6024%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (400,248,240 samples, 0.12%)</title><rect x="74.3664%" y="549" width="0.1176%" height="15" fill="rgb(245,99,25)" fg:x="253010850496" fg:w="400248240"/><text x="74.6164%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (400,248,240 samples, 0.12%)</title><rect x="74.3664%" y="533" width="0.1176%" height="15" fill="rgb(250,82,29)" fg:x="253010850496" fg:w="400248240"/><text x="74.6164%" y="543.50"></text></g><g><title>core::ptr::write (364,313,219 samples, 0.11%)</title><rect x="74.3769%" y="517" width="0.1071%" height="15" fill="rgb(241,226,54)" fg:x="253046785517" fg:w="364313219"/><text x="74.6269%" y="527.50"></text></g><g><title>liblevenshtein::transducer::transition::characteristic_vector (206,772,354 samples, 0.06%)</title><rect x="74.4904%" y="565" width="0.0608%" height="15" fill="rgb(221,99,41)" fg:x="253432721233" fg:w="206772354"/><text x="74.7404%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (94,852,892 samples, 0.03%)</title><rect x="74.6087%" y="533" width="0.0279%" height="15" fill="rgb(213,90,21)" fg:x="253835434895" fg:w="94852892"/><text x="74.8587%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (59,048,156 samples, 0.02%)</title><rect x="74.6193%" y="517" width="0.0174%" height="15" fill="rgb(205,208,24)" fg:x="253871239631" fg:w="59048156"/><text x="74.8693%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::clear (69,055,544 samples, 0.02%)</title><rect x="74.6366%" y="533" width="0.0203%" height="15" fill="rgb(246,31,12)" fg:x="253930287787" fg:w="69055544"/><text x="74.8866%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::truncate (69,055,544 samples, 0.02%)</title><rect x="74.6366%" y="517" width="0.0203%" height="15" fill="rgb(213,154,6)" fg:x="253930287787" fg:w="69055544"/><text x="74.8866%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (62,720,014 samples, 0.02%)</title><rect x="74.6385%" y="501" width="0.0184%" height="15" fill="rgb(222,163,29)" fg:x="253936623317" fg:w="62720014"/><text x="74.8885%" y="511.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (98,445,278 samples, 0.03%)</title><rect x="74.6569%" y="533" width="0.0289%" height="15" fill="rgb(227,201,8)" fg:x="253999343331" fg:w="98445278"/><text x="74.9069%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (98,445,278 samples, 0.03%)</title><rect x="74.6569%" y="517" width="0.0289%" height="15" fill="rgb(233,9,32)" fg:x="253999343331" fg:w="98445278"/><text x="74.9069%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (92,308,619 samples, 0.03%)</title><rect x="74.6587%" y="501" width="0.0271%" height="15" fill="rgb(217,54,24)" fg:x="254005479990" fg:w="92308619"/><text x="74.9087%" y="511.50"></text></g><g><title>core::ptr::write (321,078,678 samples, 0.09%)</title><rect x="74.7854%" y="517" width="0.0944%" height="15" fill="rgb(235,192,0)" fg:x="254436424859" fg:w="321078678"/><text x="75.0354%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (1,046,383,459 samples, 0.31%)</title><rect x="74.6859%" y="533" width="0.3076%" height="15" fill="rgb(235,45,9)" fg:x="254097788609" fg:w="1046383459"/><text x="74.9359%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (386,668,531 samples, 0.11%)</title><rect x="74.8798%" y="517" width="0.1137%" height="15" fill="rgb(246,42,40)" fg:x="254757503537" fg:w="386668531"/><text x="75.1298%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (169,613,773 samples, 0.05%)</title><rect x="74.9436%" y="501" width="0.0499%" height="15" fill="rgb(248,111,24)" fg:x="254974558295" fg:w="169613773"/><text x="75.1936%" y="511.50"></text></g><g><title>liblevenshtein::transducer::state::State::copy_from (1,738,283,406 samples, 0.51%)</title><rect x="74.5512%" y="549" width="0.5109%" height="15" fill="rgb(249,65,22)" fg:x="253639493587" fg:w="1738283406"/><text x="74.8012%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (233,604,925 samples, 0.07%)</title><rect x="74.9934%" y="533" width="0.0687%" height="15" fill="rgb(238,111,51)" fg:x="255144172068" fg:w="233604925"/><text x="75.2434%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (233,604,925 samples, 0.07%)</title><rect x="74.9934%" y="517" width="0.0687%" height="15" fill="rgb(250,118,22)" fg:x="255144172068" fg:w="233604925"/><text x="75.2434%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (83,590,964 samples, 0.02%)</title><rect x="75.0375%" y="501" width="0.0246%" height="15" fill="rgb(234,84,26)" fg:x="255294186029" fg:w="83590964"/><text x="75.2875%" y="511.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (63,340,924 samples, 0.02%)</title><rect x="75.0435%" y="485" width="0.0186%" height="15" fill="rgb(243,172,12)" fg:x="255314436069" fg:w="63340924"/><text x="75.2935%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (151,077,171 samples, 0.04%)</title><rect x="75.3520%" y="533" width="0.0444%" height="15" fill="rgb(236,150,49)" fg:x="256364290831" fg:w="151077171"/><text x="75.6020%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (36,583,801 samples, 0.01%)</title><rect x="75.3857%" y="517" width="0.0108%" height="15" fill="rgb(225,197,26)" fg:x="256478784201" fg:w="36583801"/><text x="75.6357%" y="527.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (152,516,431 samples, 0.04%)</title><rect x="75.3964%" y="533" width="0.0448%" height="15" fill="rgb(214,17,42)" fg:x="256515368002" fg:w="152516431"/><text x="75.6464%" y="543.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (152,516,431 samples, 0.04%)</title><rect x="75.3964%" y="517" width="0.0448%" height="15" fill="rgb(224,165,40)" fg:x="256515368002" fg:w="152516431"/><text x="75.6464%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (152,516,431 samples, 0.04%)</title><rect x="75.3964%" y="501" width="0.0448%" height="15" fill="rgb(246,100,4)" fg:x="256515368002" fg:w="152516431"/><text x="75.6464%" y="511.50"></text></g><g><title>liblevenshtein::transducer::state::State::len (119,068,115 samples, 0.03%)</title><rect x="75.4437%" y="533" width="0.0350%" height="15" fill="rgb(222,103,0)" fg:x="256676175619" fg:w="119068115"/><text x="75.6937%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (119,068,115 samples, 0.03%)</title><rect x="75.4437%" y="517" width="0.0350%" height="15" fill="rgb(227,189,26)" fg:x="256676175619" fg:w="119068115"/><text x="75.6937%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (119,068,115 samples, 0.03%)</title><rect x="75.4437%" y="501" width="0.0350%" height="15" fill="rgb(214,202,17)" fg:x="256676175619" fg:w="119068115"/><text x="75.6937%" y="511.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (112,987,943 samples, 0.03%)</title><rect x="75.4455%" y="485" width="0.0332%" height="15" fill="rgb(229,111,3)" fg:x="256682255791" fg:w="112987943"/><text x="75.6955%" y="495.50"></text></g><g><title>liblevenshtein::transducer::state::State::positions (290,155,319 samples, 0.09%)</title><rect x="75.4787%" y="533" width="0.0853%" height="15" fill="rgb(229,172,15)" fg:x="256795243734" fg:w="290155319"/><text x="75.7287%" y="543.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (290,155,319 samples, 0.09%)</title><rect x="75.4787%" y="517" width="0.0853%" height="15" fill="rgb(230,224,35)" fg:x="256795243734" fg:w="290155319"/><text x="75.7287%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (290,155,319 samples, 0.09%)</title><rect x="75.4787%" y="501" width="0.0853%" height="15" fill="rgb(251,141,6)" fg:x="256795243734" fg:w="290155319"/><text x="75.7287%" y="511.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (44,768,515 samples, 0.01%)</title><rect x="75.5508%" y="485" width="0.0132%" height="15" fill="rgb(225,208,6)" fg:x="257040630538" fg:w="44768515"/><text x="75.8008%" y="495.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (382,868,487 samples, 0.11%)</title><rect x="75.5640%" y="533" width="0.1125%" height="15" fill="rgb(246,181,16)" fg:x="257085399053" fg:w="382868487"/><text x="75.8140%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (382,868,487 samples, 0.11%)</title><rect x="75.5640%" y="517" width="0.1125%" height="15" fill="rgb(227,129,36)" fg:x="257085399053" fg:w="382868487"/><text x="75.8140%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (125,036,820 samples, 0.04%)</title><rect x="75.6398%" y="501" width="0.0368%" height="15" fill="rgb(248,117,24)" fg:x="257343230720" fg:w="125036820"/><text x="75.8898%" y="511.50"></text></g><g><title>core::ptr::write (399,647,378 samples, 0.12%)</title><rect x="75.7393%" y="517" width="0.1175%" height="15" fill="rgb(214,185,35)" fg:x="257681752384" fg:w="399647378"/><text x="75.9893%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (1,105,114,784 samples, 0.32%)</title><rect x="75.6765%" y="533" width="0.3248%" height="15" fill="rgb(236,150,34)" fg:x="257468267540" fg:w="1105114784"/><text x="75.9265%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (491,982,562 samples, 0.14%)</title><rect x="75.8567%" y="517" width="0.1446%" height="15" fill="rgb(243,228,27)" fg:x="258081399762" fg:w="491982562"/><text x="76.1067%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (179,207,267 samples, 0.05%)</title><rect x="75.9487%" y="501" width="0.0527%" height="15" fill="rgb(245,77,44)" fg:x="258394175057" fg:w="179207267"/><text x="76.1987%" y="511.50"></text></g><g><title>liblevenshtein::transducer::transition::epsilon_closure_into (4,975,790,322 samples, 1.46%)</title><rect x="74.5512%" y="565" width="1.4625%" height="15" fill="rgb(235,214,42)" fg:x="253639493587" fg:w="4975790322"/><text x="74.8012%" y="575.50"></text></g><g><title>liblevenshtein::transducer::transition::epsilon_closure_mut (3,237,506,916 samples, 0.95%)</title><rect x="75.0621%" y="549" width="0.9516%" height="15" fill="rgb(221,74,3)" fg:x="255377776993" fg:w="3237506916"/><text x="75.3121%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::with_capacity (41,901,585 samples, 0.01%)</title><rect x="76.0014%" y="533" width="0.0123%" height="15" fill="rgb(206,121,29)" fg:x="258573382324" fg:w="41901585"/><text x="76.2514%" y="543.50"></text></g><g><title>liblevenshtein::transducer::transition::transition_state_pooled (10,120,490,012 samples, 2.97%)</title><rect x="73.2749%" y="581" width="2.9747%" height="15" fill="rgb(249,131,53)" fg:x="249297427789" fg:w="10120490012"/><text x="73.5249%" y="591.50">lib..</text></g><g><title>liblevenshtein::transducer::transition::transition_position (802,633,892 samples, 0.24%)</title><rect x="76.0137%" y="565" width="0.2359%" height="15" fill="rgb(236,170,29)" fg:x="258615283909" fg:w="802633892"/><text x="76.2637%" y="575.50"></text></g><g><title>liblevenshtein::transducer::transition::transition_standard (410,514,934 samples, 0.12%)</title><rect x="76.1289%" y="549" width="0.1207%" height="15" fill="rgb(247,96,15)" fg:x="259007402867" fg:w="410514934"/><text x="76.3789%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (103,804,519 samples, 0.03%)</title><rect x="76.2191%" y="533" width="0.0305%" height="15" fill="rgb(211,210,7)" fg:x="259314113282" fg:w="103804519"/><text x="76.4691%" y="543.50"></text></g><g><title>core::ptr::write (103,804,519 samples, 0.03%)</title><rect x="76.2191%" y="517" width="0.0305%" height="15" fill="rgb(240,88,50)" fg:x="259314113282" fg:w="103804519"/><text x="76.4691%" y="527.50"></text></g><g><title>malloc (35,367,095 samples, 0.01%)</title><rect x="76.2496%" y="581" width="0.0104%" height="15" fill="rgb(209,229,26)" fg:x="259417917801" fg:w="35367095"/><text x="76.4996%" y="591.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (47,143,966 samples, 0.01%)</title><rect x="76.2728%" y="549" width="0.0139%" height="15" fill="rgb(210,68,23)" fg:x="259496903159" fg:w="47143966"/><text x="76.5228%" y="559.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::new (47,143,966 samples, 0.01%)</title><rect x="76.2728%" y="533" width="0.0139%" height="15" fill="rgb(229,180,13)" fg:x="259496903159" fg:w="47143966"/><text x="76.5228%" y="543.50"></text></g><g><title>&lt;rayon::iter::map_with::MapInitConsumer&lt;C,INIT,F&gt; as rayon::iter::plumbing::Consumer&lt;T&gt;&gt;::into_folder (54,092,559 samples, 0.02%)</title><rect x="76.2722%" y="565" width="0.0159%" height="15" fill="rgb(236,53,44)" fg:x="259494733755" fg:w="54092559"/><text x="76.5222%" y="575.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (144,382,705 samples, 0.04%)</title><rect x="76.3044%" y="373" width="0.0424%" height="15" fill="rgb(244,214,29)" fg:x="259604481901" fg:w="144382705"/><text x="76.5544%" y="383.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (1,419,092,849 samples, 0.42%)</title><rect x="76.3469%" y="373" width="0.4171%" height="15" fill="rgb(220,75,29)" fg:x="259748864606" fg:w="1419092849"/><text x="76.5969%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (1,419,092,849 samples, 0.42%)</title><rect x="76.3469%" y="357" width="0.4171%" height="15" fill="rgb(214,183,37)" fg:x="259748864606" fg:w="1419092849"/><text x="76.5969%" y="367.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (2,539,057,744 samples, 0.75%)</title><rect x="76.3044%" y="389" width="0.7463%" height="15" fill="rgb(239,117,29)" fg:x="259604481901" fg:w="2539057744"/><text x="76.5544%" y="399.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (975,582,190 samples, 0.29%)</title><rect x="76.7640%" y="373" width="0.2867%" height="15" fill="rgb(237,171,35)" fg:x="261167957455" fg:w="975582190"/><text x="77.0140%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (975,582,190 samples, 0.29%)</title><rect x="76.7640%" y="357" width="0.2867%" height="15" fill="rgb(229,178,53)" fg:x="261167957455" fg:w="975582190"/><text x="77.0140%" y="367.50"></text></g><g><title>core::f64::math::sqrt (975,582,190 samples, 0.29%)</title><rect x="76.7640%" y="341" width="0.2867%" height="15" fill="rgb(210,102,19)" fg:x="261167957455" fg:w="975582190"/><text x="77.0140%" y="351.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2,542,109,507 samples, 0.75%)</title><rect x="76.3043%" y="549" width="0.7472%" height="15" fill="rgb(235,127,22)" fg:x="259603980397" fg:w="2542109507"/><text x="76.5543%" y="559.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (2,542,109,507 samples, 0.75%)</title><rect x="76.3043%" y="533" width="0.7472%" height="15" fill="rgb(244,31,31)" fg:x="259603980397" fg:w="2542109507"/><text x="76.5543%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,542,109,507 samples, 0.75%)</title><rect x="76.3043%" y="517" width="0.7472%" height="15" fill="rgb(231,43,21)" fg:x="259603980397" fg:w="2542109507"/><text x="76.5543%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,542,109,507 samples, 0.75%)</title><rect x="76.3043%" y="501" width="0.7472%" height="15" fill="rgb(217,131,35)" fg:x="259603980397" fg:w="2542109507"/><text x="76.5543%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,542,109,507 samples, 0.75%)</title><rect x="76.3043%" y="485" width="0.7472%" height="15" fill="rgb(221,149,4)" fg:x="259603980397" fg:w="2542109507"/><text x="76.5543%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,541,608,003 samples, 0.75%)</title><rect x="76.3044%" y="469" width="0.7470%" height="15" fill="rgb(232,170,28)" fg:x="259604481901" fg:w="2541608003"/><text x="76.5544%" y="479.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (2,541,608,003 samples, 0.75%)</title><rect x="76.3044%" y="453" width="0.7470%" height="15" fill="rgb(238,56,10)" fg:x="259604481901" fg:w="2541608003"/><text x="76.5544%" y="463.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (2,541,608,003 samples, 0.75%)</title><rect x="76.3044%" y="437" width="0.7470%" height="15" fill="rgb(235,196,14)" fg:x="259604481901" fg:w="2541608003"/><text x="76.5544%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,541,608,003 samples, 0.75%)</title><rect x="76.3044%" y="421" width="0.7470%" height="15" fill="rgb(216,45,48)" fg:x="259604481901" fg:w="2541608003"/><text x="76.5544%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (2,541,608,003 samples, 0.75%)</title><rect x="76.3044%" y="405" width="0.7470%" height="15" fill="rgb(238,213,17)" fg:x="259604481901" fg:w="2541608003"/><text x="76.5544%" y="415.50"></text></g><g><title>criterion::analysis::regression::{{closure}} (86,773,464 samples, 0.03%)</title><rect x="77.0547%" y="389" width="0.0255%" height="15" fill="rgb(212,13,2)" fg:x="262156961475" fg:w="86773464"/><text x="77.3047%" y="399.50"></text></g><g><title>criterion::stats::bivariate::regression::Slope&lt;A&gt;::fit (86,773,464 samples, 0.03%)</title><rect x="77.0547%" y="373" width="0.0255%" height="15" fill="rgb(240,114,20)" fg:x="262156961475" fg:w="86773464"/><text x="77.3047%" y="383.50"></text></g><g><title>criterion::stats::dot (86,773,464 samples, 0.03%)</title><rect x="77.0547%" y="357" width="0.0255%" height="15" fill="rgb(228,41,40)" fg:x="262156961475" fg:w="86773464"/><text x="77.3047%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (86,773,464 samples, 0.03%)</title><rect x="77.0547%" y="341" width="0.0255%" height="15" fill="rgb(244,132,35)" fg:x="262156961475" fg:w="86773464"/><text x="77.3047%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (86,773,464 samples, 0.03%)</title><rect x="77.0547%" y="325" width="0.0255%" height="15" fill="rgb(253,189,4)" fg:x="262156961475" fg:w="86773464"/><text x="77.3047%" y="335.50"></text></g><g><title>criterion::stats::dot::{{closure}} (85,206,118 samples, 0.03%)</title><rect x="77.0551%" y="309" width="0.0250%" height="15" fill="rgb(224,37,19)" fg:x="262158528821" fg:w="85206118"/><text x="77.3051%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (85,206,118 samples, 0.03%)</title><rect x="77.0551%" y="293" width="0.0250%" height="15" fill="rgb(235,223,18)" fg:x="262158528821" fg:w="85206118"/><text x="77.3051%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (56,151,906 samples, 0.02%)</title><rect x="77.1019%" y="373" width="0.0165%" height="15" fill="rgb(235,163,25)" fg:x="262317699729" fg:w="56151906"/><text x="77.3519%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (56,151,906 samples, 0.02%)</title><rect x="77.1019%" y="357" width="0.0165%" height="15" fill="rgb(217,145,28)" fg:x="262317699729" fg:w="56151906"/><text x="77.3519%" y="367.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (68,188,558 samples, 0.02%)</title><rect x="77.1457%" y="341" width="0.0200%" height="15" fill="rgb(223,223,32)" fg:x="262466648799" fg:w="68188558"/><text x="77.3957%" y="351.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (384,554,961 samples, 0.11%)</title><rect x="77.0547%" y="405" width="0.1130%" height="15" fill="rgb(227,189,39)" fg:x="262156961475" fg:w="384554961"/><text x="77.3047%" y="415.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (297,781,497 samples, 0.09%)</title><rect x="77.0802%" y="389" width="0.0875%" height="15" fill="rgb(248,10,22)" fg:x="262243734939" fg:w="297781497"/><text x="77.3302%" y="399.50"></text></g><g><title>oorandom::Rand64::rand_range (151,319,536 samples, 0.04%)</title><rect x="77.1232%" y="373" width="0.0445%" height="15" fill="rgb(248,46,39)" fg:x="262390196900" fg:w="151319536"/><text x="77.3732%" y="383.50"></text></g><g><title>oorandom::Rand64::rand_u64 (146,695,051 samples, 0.04%)</title><rect x="77.1246%" y="357" width="0.0431%" height="15" fill="rgb(248,113,48)" fg:x="262394821385" fg:w="146695051"/><text x="77.3746%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (98,761,821 samples, 0.03%)</title><rect x="77.1768%" y="293" width="0.0290%" height="15" fill="rgb(245,16,25)" fg:x="262572419988" fg:w="98761821"/><text x="77.4268%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (98,761,821 samples, 0.03%)</title><rect x="77.1768%" y="277" width="0.0290%" height="15" fill="rgb(249,152,16)" fg:x="262572419988" fg:w="98761821"/><text x="77.4268%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (124,066,409 samples, 0.04%)</title><rect x="77.1768%" y="309" width="0.0365%" height="15" fill="rgb(250,16,1)" fg:x="262572419988" fg:w="124066409"/><text x="77.4268%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129,763,258 samples, 0.04%)</title><rect x="77.1759%" y="341" width="0.0381%" height="15" fill="rgb(249,138,3)" fg:x="262569538675" fg:w="129763258"/><text x="77.4259%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129,763,258 samples, 0.04%)</title><rect x="77.1759%" y="325" width="0.0381%" height="15" fill="rgb(227,71,41)" fg:x="262569538675" fg:w="129763258"/><text x="77.4259%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (550,758,454 samples, 0.16%)</title><rect x="77.0547%" y="453" width="0.1619%" height="15" fill="rgb(209,184,23)" fg:x="262156961475" fg:w="550758454"/><text x="77.3047%" y="463.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (550,758,454 samples, 0.16%)</title><rect x="77.0547%" y="437" width="0.1619%" height="15" fill="rgb(223,215,31)" fg:x="262156961475" fg:w="550758454"/><text x="77.3047%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (550,758,454 samples, 0.16%)</title><rect x="77.0547%" y="421" width="0.1619%" height="15" fill="rgb(210,146,28)" fg:x="262156961475" fg:w="550758454"/><text x="77.3047%" y="431.50"></text></g><g><title>criterion::stats::univariate::mixed::bootstrap::{{closure}} (166,203,493 samples, 0.05%)</title><rect x="77.1677%" y="405" width="0.0489%" height="15" fill="rgb(209,183,41)" fg:x="262541516436" fg:w="166203493"/><text x="77.4177%" y="415.50"></text></g><g><title>criterion::analysis::compare::t_test::{{closure}} (166,203,493 samples, 0.05%)</title><rect x="77.1677%" y="389" width="0.0489%" height="15" fill="rgb(209,224,45)" fg:x="262541516436" fg:w="166203493"/><text x="77.4177%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::t (166,203,493 samples, 0.05%)</title><rect x="77.1677%" y="373" width="0.0489%" height="15" fill="rgb(224,209,51)" fg:x="262541516436" fg:w="166203493"/><text x="77.4177%" y="383.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var (138,181,254 samples, 0.04%)</title><rect x="77.1759%" y="357" width="0.0406%" height="15" fill="rgb(223,17,39)" fg:x="262569538675" fg:w="138181254"/><text x="77.4259%" y="367.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (551,947,666 samples, 0.16%)</title><rect x="77.0547%" y="533" width="0.1622%" height="15" fill="rgb(234,204,37)" fg:x="262156961475" fg:w="551947666"/><text x="77.3047%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (551,947,666 samples, 0.16%)</title><rect x="77.0547%" y="517" width="0.1622%" height="15" fill="rgb(236,120,5)" fg:x="262156961475" fg:w="551947666"/><text x="77.3047%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (551,947,666 samples, 0.16%)</title><rect x="77.0547%" y="501" width="0.1622%" height="15" fill="rgb(248,97,27)" fg:x="262156961475" fg:w="551947666"/><text x="77.3047%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (551,947,666 samples, 0.16%)</title><rect x="77.0547%" y="485" width="0.1622%" height="15" fill="rgb(240,66,17)" fg:x="262156961475" fg:w="551947666"/><text x="77.3047%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (551,947,666 samples, 0.16%)</title><rect x="77.0547%" y="469" width="0.1622%" height="15" fill="rgb(210,79,3)" fg:x="262156961475" fg:w="551947666"/><text x="77.3047%" y="479.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3,124,732,126 samples, 0.92%)</title><rect x="76.2992%" y="565" width="0.9184%" height="15" fill="rgb(214,176,27)" fg:x="259586892854" fg:w="3124732126"/><text x="76.5492%" y="575.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (565,535,076 samples, 0.17%)</title><rect x="77.0515%" y="549" width="0.1662%" height="15" fill="rgb(235,185,3)" fg:x="262146089904" fg:w="565535076"/><text x="77.3015%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,278,168,192 samples, 0.96%)</title><rect x="76.2652%" y="581" width="0.9635%" height="15" fill="rgb(227,24,12)" fg:x="259470956499" fg:w="3278168192"/><text x="76.5152%" y="591.50"></text></g><g><title>rayon_core::join::join_context (35,021,128 samples, 0.01%)</title><rect x="77.2184%" y="565" width="0.0103%" height="15" fill="rgb(252,169,48)" fg:x="262714103563" fg:w="35021128"/><text x="77.4684%" y="575.50"></text></g><g><title>rayon_core::registry::in_worker (35,021,128 samples, 0.01%)</title><rect x="77.2184%" y="549" width="0.0103%" height="15" fill="rgb(212,65,1)" fg:x="262714103563" fg:w="35021128"/><text x="77.4684%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (59,884,739 samples, 0.02%)</title><rect x="77.2986%" y="565" width="0.0176%" height="15" fill="rgb(242,39,24)" fg:x="262986942284" fg:w="59884739"/><text x="77.5486%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (59,884,739 samples, 0.02%)</title><rect x="77.2986%" y="549" width="0.0176%" height="15" fill="rgb(249,32,23)" fg:x="262986942284" fg:w="59884739"/><text x="77.5486%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (35,899,417 samples, 0.01%)</title><rect x="77.3057%" y="533" width="0.0106%" height="15" fill="rgb(251,195,23)" fg:x="263010927606" fg:w="35899417"/><text x="77.5557%" y="543.50"></text></g><g><title>rayon::slice::sort::insertion_sort_shift_left (553,531,395 samples, 0.16%)</title><rect x="77.2323%" y="581" width="0.1627%" height="15" fill="rgb(236,174,8)" fg:x="262761474687" fg:w="553531395"/><text x="77.4823%" y="591.50"></text></g><g><title>rayon::slice::sort::insert_tail (268,179,059 samples, 0.08%)</title><rect x="77.3162%" y="565" width="0.0788%" height="15" fill="rgb(220,197,8)" fg:x="263046827023" fg:w="268179059"/><text x="77.5662%" y="575.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (35,774,137 samples, 0.01%)</title><rect x="77.3845%" y="549" width="0.0105%" height="15" fill="rgb(240,108,37)" fg:x="263279231945" fg:w="35774137"/><text x="77.6345%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (35,774,137 samples, 0.01%)</title><rect x="77.3845%" y="533" width="0.0105%" height="15" fill="rgb(232,176,24)" fg:x="263279231945" fg:w="35774137"/><text x="77.6345%" y="543.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (36,363,562 samples, 0.01%)</title><rect x="77.5731%" y="517" width="0.0107%" height="15" fill="rgb(243,35,29)" fg:x="263920724579" fg:w="36363562"/><text x="77.8231%" y="527.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (36,363,562 samples, 0.01%)</title><rect x="77.5731%" y="501" width="0.0107%" height="15" fill="rgb(210,37,18)" fg:x="263920724579" fg:w="36363562"/><text x="77.8231%" y="511.50"></text></g><g><title>rayon::slice::sort::choose_pivot (154,192,298 samples, 0.05%)</title><rect x="77.5403%" y="565" width="0.0453%" height="15" fill="rgb(224,184,40)" fg:x="263809126937" fg:w="154192298"/><text x="77.7903%" y="575.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (133,140,336 samples, 0.04%)</title><rect x="77.5465%" y="549" width="0.0391%" height="15" fill="rgb(236,39,29)" fg:x="263830178899" fg:w="133140336"/><text x="77.7965%" y="559.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (128,002,513 samples, 0.04%)</title><rect x="77.5480%" y="533" width="0.0376%" height="15" fill="rgb(232,48,39)" fg:x="263835316722" fg:w="128002513"/><text x="77.7980%" y="543.50"></text></g><g><title>core::ptr::read (63,437,259 samples, 0.02%)</title><rect x="77.6817%" y="549" width="0.0186%" height="15" fill="rgb(236,34,42)" fg:x="264290170355" fg:w="63437259"/><text x="77.9317%" y="559.50"></text></g><g><title>core::ptr::copy (61,091,248 samples, 0.02%)</title><rect x="77.7206%" y="517" width="0.0180%" height="15" fill="rgb(243,106,37)" fg:x="264422577722" fg:w="61091248"/><text x="77.9706%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (115,516,912 samples, 0.03%)</title><rect x="77.7096%" y="549" width="0.0340%" height="15" fill="rgb(218,96,6)" fg:x="264385337863" fg:w="115516912"/><text x="77.9596%" y="559.50"></text></g><g><title>core::ptr::swap (78,277,053 samples, 0.02%)</title><rect x="77.7206%" y="533" width="0.0230%" height="15" fill="rgb(235,130,12)" fg:x="264422577722" fg:w="78277053"/><text x="77.9706%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (65,836,415 samples, 0.02%)</title><rect x="77.7654%" y="517" width="0.0194%" height="15" fill="rgb(231,95,0)" fg:x="264575074755" fg:w="65836415"/><text x="78.0154%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (157,870,872 samples, 0.05%)</title><rect x="77.7436%" y="549" width="0.0464%" height="15" fill="rgb(228,12,23)" fg:x="264500854775" fg:w="157870872"/><text x="77.9936%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (157,870,872 samples, 0.05%)</title><rect x="77.7436%" y="533" width="0.0464%" height="15" fill="rgb(216,12,1)" fg:x="264500854775" fg:w="157870872"/><text x="77.9936%" y="543.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (245,168,060 samples, 0.07%)</title><rect x="77.7900%" y="549" width="0.0721%" height="15" fill="rgb(219,59,3)" fg:x="264658725647" fg:w="245168060"/><text x="78.0400%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (245,168,060 samples, 0.07%)</title><rect x="77.7900%" y="533" width="0.0721%" height="15" fill="rgb(215,208,46)" fg:x="264658725647" fg:w="245168060"/><text x="78.0400%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (180,414,530 samples, 0.05%)</title><rect x="78.0395%" y="533" width="0.0530%" height="15" fill="rgb(254,224,29)" fg:x="265507770375" fg:w="180414530"/><text x="78.2895%" y="543.50"></text></g><g><title>core::ptr::copy (110,427,921 samples, 0.03%)</title><rect x="78.0994%" y="517" width="0.0325%" height="15" fill="rgb(232,14,29)" fg:x="265711372291" fg:w="110427921"/><text x="78.3494%" y="527.50"></text></g><g><title>core::ptr::swap (219,960,030 samples, 0.06%)</title><rect x="78.0994%" y="533" width="0.0647%" height="15" fill="rgb(208,45,52)" fg:x="265711372291" fg:w="219960030"/><text x="78.3494%" y="543.50"></text></g><g><title>core::ptr::copy_nonoverlapping (109,532,109 samples, 0.03%)</title><rect x="78.1318%" y="517" width="0.0322%" height="15" fill="rgb(234,191,28)" fg:x="265821800212" fg:w="109532109"/><text x="78.3818%" y="527.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (129,036,986 samples, 0.04%)</title><rect x="78.1640%" y="533" width="0.0379%" height="15" fill="rgb(244,67,43)" fg:x="265931332321" fg:w="129036986"/><text x="78.4140%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (129,036,986 samples, 0.04%)</title><rect x="78.1640%" y="517" width="0.0379%" height="15" fill="rgb(236,189,24)" fg:x="265931332321" fg:w="129036986"/><text x="78.4140%" y="527.50"></text></g><g><title>rayon::slice::sort::partition (2,118,194,899 samples, 0.62%)</title><rect x="77.5863%" y="565" width="0.6226%" height="15" fill="rgb(239,214,33)" fg:x="263965774764" fg:w="2118194899"/><text x="77.8363%" y="575.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks (1,180,075,956 samples, 0.35%)</title><rect x="77.8621%" y="549" width="0.3469%" height="15" fill="rgb(226,176,41)" fg:x="264903893707" fg:w="1180075956"/><text x="78.1121%" y="559.50"></text></g><g><title>rayon::slice::sort::recurse (62,964,282 samples, 0.02%)</title><rect x="78.2128%" y="565" width="0.0185%" height="15" fill="rgb(248,47,8)" fg:x="266097180858" fg:w="62964282"/><text x="78.4628%" y="575.50"></text></g><g><title>rayon::slice::sort::recurse (2,855,303,638 samples, 0.84%)</title><rect x="77.4023%" y="581" width="0.8392%" height="15" fill="rgb(218,81,44)" fg:x="263339770303" fg:w="2855303638"/><text x="77.6523%" y="591.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (34,928,801 samples, 0.01%)</title><rect x="78.2313%" y="565" width="0.0103%" height="15" fill="rgb(213,98,6)" fg:x="266160145140" fg:w="34928801"/><text x="78.4813%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (45,240,595 samples, 0.01%)</title><rect x="78.2537%" y="517" width="0.0133%" height="15" fill="rgb(222,85,22)" fg:x="266236425836" fg:w="45240595"/><text x="78.5037%" y="527.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (45,240,595 samples, 0.01%)</title><rect x="78.2537%" y="501" width="0.0133%" height="15" fill="rgb(239,46,39)" fg:x="266236425836" fg:w="45240595"/><text x="78.5037%" y="511.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (65,171,854 samples, 0.02%)</title><rect x="78.2692%" y="309" width="0.0192%" height="15" fill="rgb(237,12,29)" fg:x="266289132898" fg:w="65171854"/><text x="78.5192%" y="319.50"></text></g><g><title>[unknown] (68,393,938 samples, 0.02%)</title><rect x="78.4924%" y="277" width="0.0201%" height="15" fill="rgb(214,77,8)" fg:x="267048602599" fg:w="68393938"/><text x="78.7424%" y="287.50"></text></g><g><title>[libm.so.6] (68,393,938 samples, 0.02%)</title><rect x="78.4924%" y="261" width="0.0201%" height="15" fill="rgb(217,168,37)" fg:x="267048602599" fg:w="68393938"/><text x="78.7424%" y="271.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (16,582,474,656 samples, 4.87%)</title><rect x="78.2884%" y="309" width="4.8740%" height="15" fill="rgb(221,217,23)" fg:x="266354304752" fg:w="16582474656"/><text x="78.5384%" y="319.50">&lt;f64 a..</text></g><g><title>std::f64::&lt;impl f64&gt;::exp (16,582,474,656 samples, 4.87%)</title><rect x="78.2884%" y="293" width="4.8740%" height="15" fill="rgb(243,229,36)" fg:x="266354304752" fg:w="16582474656"/><text x="78.5384%" y="303.50">std::f..</text></g><g><title>exp (15,819,782,871 samples, 4.65%)</title><rect x="78.5125%" y="277" width="4.6498%" height="15" fill="rgb(251,163,40)" fg:x="267116996537" fg:w="15819782871"/><text x="78.7625%" y="287.50">exp</text></g><g><title>[libm.so.6] (11,026,991,575 samples, 3.24%)</title><rect x="79.9213%" y="261" width="3.2411%" height="15" fill="rgb(237,222,12)" fg:x="271909787833" fg:w="11026991575"/><text x="80.1713%" y="271.50">[li..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (1,403,022,520 samples, 0.41%)</title><rect x="83.1631%" y="309" width="0.4124%" height="15" fill="rgb(248,132,6)" fg:x="282939355917" fg:w="1403022520"/><text x="83.4131%" y="319.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (1,403,022,520 samples, 0.41%)</title><rect x="83.1631%" y="293" width="0.4124%" height="15" fill="rgb(227,167,50)" fg:x="282939355917" fg:w="1403022520"/><text x="83.4131%" y="303.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (18,545,860,665 samples, 5.45%)</title><rect x="78.2692%" y="325" width="5.4511%" height="15" fill="rgb(242,84,37)" fg:x="266289132898" fg:w="18545860665"/><text x="78.5192%" y="335.50">&lt;criter..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (492,615,126 samples, 0.14%)</title><rect x="83.5755%" y="309" width="0.1448%" height="15" fill="rgb(212,4,50)" fg:x="284342378437" fg:w="492615126"/><text x="83.8255%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (492,615,126 samples, 0.14%)</title><rect x="83.5755%" y="293" width="0.1448%" height="15" fill="rgb(230,228,32)" fg:x="284342378437" fg:w="492615126"/><text x="83.8255%" y="303.50"></text></g><g><title>core::f64::math::sqrt (492,615,126 samples, 0.14%)</title><rect x="83.5755%" y="277" width="0.1448%" height="15" fill="rgb(248,217,23)" fg:x="284342378437" fg:w="492615126"/><text x="83.8255%" y="287.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1,414,027,794 samples, 0.42%)</title><rect x="83.7203%" y="325" width="0.4156%" height="15" fill="rgb(238,197,32)" fg:x="284834993563" fg:w="1414027794"/><text x="83.9703%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (193,224,981 samples, 0.06%)</title><rect x="84.1359%" y="325" width="0.0568%" height="15" fill="rgb(236,106,1)" fg:x="286249021357" fg:w="193224981"/><text x="84.3859%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,158,529,897 samples, 5.93%)</title><rect x="78.2684%" y="453" width="5.9251%" height="15" fill="rgb(219,228,13)" fg:x="266286507482" fg:w="20158529897"/><text x="78.5184%" y="463.50">&lt;core::i..</text></g><g><title>core::option::Option&lt;T&gt;::map (20,158,529,897 samples, 5.93%)</title><rect x="78.2684%" y="437" width="5.9251%" height="15" fill="rgb(238,30,35)" fg:x="266286507482" fg:w="20158529897"/><text x="78.5184%" y="447.50">core::op..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (20,158,529,897 samples, 5.93%)</title><rect x="78.2684%" y="421" width="5.9251%" height="15" fill="rgb(236,70,23)" fg:x="266286507482" fg:w="20158529897"/><text x="78.5184%" y="431.50">core::op..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (20,158,529,897 samples, 5.93%)</title><rect x="78.2684%" y="405" width="5.9251%" height="15" fill="rgb(249,104,48)" fg:x="266286507482" fg:w="20158529897"/><text x="78.5184%" y="415.50">core::op..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (20,158,529,897 samples, 5.93%)</title><rect x="78.2684%" y="389" width="5.9251%" height="15" fill="rgb(254,117,50)" fg:x="266286507482" fg:w="20158529897"/><text x="78.5184%" y="399.50">criterio..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (20,158,529,897 samples, 5.93%)</title><rect x="78.2684%" y="373" width="5.9251%" height="15" fill="rgb(223,152,4)" fg:x="266286507482" fg:w="20158529897"/><text x="78.5184%" y="383.50">criterio..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20,158,529,897 samples, 5.93%)</title><rect x="78.2684%" y="357" width="5.9251%" height="15" fill="rgb(245,6,2)" fg:x="266286507482" fg:w="20158529897"/><text x="78.5184%" y="367.50">&lt;core::s..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (20,155,904,481 samples, 5.92%)</title><rect x="78.2692%" y="341" width="5.9243%" height="15" fill="rgb(249,150,24)" fg:x="266289132898" fg:w="20155904481"/><text x="78.5192%" y="351.50">criterio..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (20,166,180,254 samples, 5.93%)</title><rect x="78.2670%" y="517" width="5.9274%" height="15" fill="rgb(228,185,42)" fg:x="266281666431" fg:w="20166180254"/><text x="78.5170%" y="527.50">rayon::i..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (20,161,339,203 samples, 5.93%)</title><rect x="78.2684%" y="501" width="5.9259%" height="15" fill="rgb(226,39,33)" fg:x="266286507482" fg:w="20161339203"/><text x="78.5184%" y="511.50">rayon::i..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (20,161,339,203 samples, 5.93%)</title><rect x="78.2684%" y="485" width="5.9259%" height="15" fill="rgb(221,166,19)" fg:x="266286507482" fg:w="20161339203"/><text x="78.5184%" y="495.50">&lt;rayon::..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (20,161,339,203 samples, 5.93%)</title><rect x="78.2684%" y="469" width="5.9259%" height="15" fill="rgb(209,109,2)" fg:x="266286507482" fg:w="20161339203"/><text x="78.5184%" y="479.50">rayon::i..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (20,223,632,939 samples, 5.94%)</title><rect x="78.2518%" y="565" width="5.9442%" height="15" fill="rgb(252,216,26)" fg:x="266229772335" fg:w="20223632939"/><text x="78.5018%" y="575.50">rayon_co..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (20,217,480,942 samples, 5.94%)</title><rect x="78.2536%" y="549" width="5.9424%" height="15" fill="rgb(227,173,36)" fg:x="266235924332" fg:w="20217480942"/><text x="78.5036%" y="559.50">rayon_co..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (20,217,480,942 samples, 5.94%)</title><rect x="78.2536%" y="533" width="5.9424%" height="15" fill="rgb(209,90,7)" fg:x="266235924332" fg:w="20217480942"/><text x="78.5036%" y="543.50">rayon::i..</text></g><g><title>rayon_core::registry::WorkerThread::push (99,028,538 samples, 0.03%)</title><rect x="84.1962%" y="565" width="0.0291%" height="15" fill="rgb(250,194,11)" fg:x="286454052471" fg:w="99028538"/><text x="84.4462%" y="575.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (93,103,078 samples, 0.03%)</title><rect x="84.1979%" y="549" width="0.0274%" height="15" fill="rgb(220,72,50)" fg:x="286459977931" fg:w="93103078"/><text x="84.4479%" y="559.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (93,103,078 samples, 0.03%)</title><rect x="84.1979%" y="533" width="0.0274%" height="15" fill="rgb(222,106,48)" fg:x="286459977931" fg:w="93103078"/><text x="84.4479%" y="543.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (93,103,078 samples, 0.03%)</title><rect x="84.1979%" y="517" width="0.0274%" height="15" fill="rgb(216,220,45)" fg:x="286459977931" fg:w="93103078"/><text x="84.4479%" y="527.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::load (93,103,078 samples, 0.03%)</title><rect x="84.1979%" y="501" width="0.0274%" height="15" fill="rgb(234,112,18)" fg:x="286459977931" fg:w="93103078"/><text x="84.4479%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (93,103,078 samples, 0.03%)</title><rect x="84.1979%" y="485" width="0.0274%" height="15" fill="rgb(206,179,9)" fg:x="286459977931" fg:w="93103078"/><text x="84.4479%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (93,103,078 samples, 0.03%)</title><rect x="84.1979%" y="469" width="0.0274%" height="15" fill="rgb(215,115,40)" fg:x="286459977931" fg:w="93103078"/><text x="84.4479%" y="479.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (46,482,470 samples, 0.01%)</title><rect x="84.2362%" y="165" width="0.0137%" height="15" fill="rgb(222,69,34)" fg:x="286590266668" fg:w="46482470"/><text x="84.4862%" y="175.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (46,482,470 samples, 0.01%)</title><rect x="84.2362%" y="149" width="0.0137%" height="15" fill="rgb(209,161,10)" fg:x="286590266668" fg:w="46482470"/><text x="84.4862%" y="159.50"></text></g><g><title>exp (44,987,571 samples, 0.01%)</title><rect x="84.2367%" y="133" width="0.0132%" height="15" fill="rgb(217,6,38)" fg:x="286591761567" fg:w="44987571"/><text x="84.4867%" y="143.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (60,561,048 samples, 0.02%)</title><rect x="84.2362%" y="181" width="0.0178%" height="15" fill="rgb(229,229,48)" fg:x="286590266668" fg:w="60561048"/><text x="84.4862%" y="191.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="421" width="0.0186%" height="15" fill="rgb(225,21,28)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="431.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="405" width="0.0186%" height="15" fill="rgb(206,33,13)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="389" width="0.0186%" height="15" fill="rgb(242,178,17)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="373" width="0.0186%" height="15" fill="rgb(220,162,5)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="383.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="357" width="0.0186%" height="15" fill="rgb(210,33,43)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="367.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="341" width="0.0186%" height="15" fill="rgb(216,116,54)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="351.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="325" width="0.0186%" height="15" fill="rgb(249,92,24)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="309" width="0.0186%" height="15" fill="rgb(231,189,14)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="293" width="0.0186%" height="15" fill="rgb(230,8,41)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="277" width="0.0186%" height="15" fill="rgb(249,7,27)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="261" width="0.0186%" height="15" fill="rgb(232,86,5)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="271.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="245" width="0.0186%" height="15" fill="rgb(224,175,18)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="255.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="229" width="0.0186%" height="15" fill="rgb(220,129,12)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="213" width="0.0186%" height="15" fill="rgb(210,19,36)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="223.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (63,320,034 samples, 0.02%)</title><rect x="84.2362%" y="197" width="0.0186%" height="15" fill="rgb(219,96,14)" fg:x="286590266668" fg:w="63320034"/><text x="84.4862%" y="207.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (52,928,347 samples, 0.02%)</title><rect x="84.2548%" y="117" width="0.0156%" height="15" fill="rgb(249,106,1)" fg:x="286653586702" fg:w="52928347"/><text x="84.5048%" y="127.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (52,928,347 samples, 0.02%)</title><rect x="84.2548%" y="101" width="0.0156%" height="15" fill="rgb(249,155,20)" fg:x="286653586702" fg:w="52928347"/><text x="84.5048%" y="111.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (52,928,347 samples, 0.02%)</title><rect x="84.2548%" y="85" width="0.0156%" height="15" fill="rgb(244,168,9)" fg:x="286653586702" fg:w="52928347"/><text x="84.5048%" y="95.50"></text></g><g><title>exp (52,928,347 samples, 0.02%)</title><rect x="84.2548%" y="69" width="0.0156%" height="15" fill="rgb(216,23,50)" fg:x="286653586702" fg:w="52928347"/><text x="84.5048%" y="79.50"></text></g><g><title>[libm.so.6] (40,815,010 samples, 0.01%)</title><rect x="84.2584%" y="53" width="0.0120%" height="15" fill="rgb(224,219,20)" fg:x="286665700039" fg:w="40815010"/><text x="84.5084%" y="63.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (118,723,583 samples, 0.03%)</title><rect x="84.2362%" y="453" width="0.0349%" height="15" fill="rgb(222,156,15)" fg:x="286590266668" fg:w="118723583"/><text x="84.4862%" y="463.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (118,723,583 samples, 0.03%)</title><rect x="84.2362%" y="437" width="0.0349%" height="15" fill="rgb(231,97,17)" fg:x="286590266668" fg:w="118723583"/><text x="84.4862%" y="447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="421" width="0.0163%" height="15" fill="rgb(218,70,48)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="431.50"></text></g><g><title>std::panic::catch_unwind (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="405" width="0.0163%" height="15" fill="rgb(212,196,52)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="415.50"></text></g><g><title>std::panicking::catch_unwind (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="389" width="0.0163%" height="15" fill="rgb(243,203,18)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="399.50"></text></g><g><title>std::panicking::catch_unwind::do_call (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="373" width="0.0163%" height="15" fill="rgb(252,125,41)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="357" width="0.0163%" height="15" fill="rgb(223,180,33)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="367.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="341" width="0.0163%" height="15" fill="rgb(254,159,46)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="325" width="0.0163%" height="15" fill="rgb(254,38,10)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="309" width="0.0163%" height="15" fill="rgb(208,217,32)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="319.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="293" width="0.0163%" height="15" fill="rgb(221,120,13)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="303.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="277" width="0.0163%" height="15" fill="rgb(246,54,52)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="287.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="261" width="0.0163%" height="15" fill="rgb(242,34,25)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="245" width="0.0163%" height="15" fill="rgb(247,209,9)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="229" width="0.0163%" height="15" fill="rgb(228,71,26)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="239.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="213" width="0.0163%" height="15" fill="rgb(222,145,49)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="197" width="0.0163%" height="15" fill="rgb(218,121,17)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="207.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="181" width="0.0163%" height="15" fill="rgb(244,50,7)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="191.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="165" width="0.0163%" height="15" fill="rgb(246,229,37)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="149" width="0.0163%" height="15" fill="rgb(225,18,5)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="159.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (55,403,549 samples, 0.02%)</title><rect x="84.2548%" y="133" width="0.0163%" height="15" fill="rgb(213,204,8)" fg:x="286653586702" fg:w="55403549"/><text x="84.5048%" y="143.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (68,481,865 samples, 0.02%)</title><rect x="84.2750%" y="245" width="0.0201%" height="15" fill="rgb(238,103,6)" fg:x="286722207576" fg:w="68481865"/><text x="84.5250%" y="255.50"></text></g><g><title>[unknown] (88,339,934 samples, 0.03%)</title><rect x="84.5746%" y="213" width="0.0260%" height="15" fill="rgb(222,25,35)" fg:x="287741390833" fg:w="88339934"/><text x="84.8246%" y="223.50"></text></g><g><title>[libm.so.6] (88,339,934 samples, 0.03%)</title><rect x="84.5746%" y="197" width="0.0260%" height="15" fill="rgb(213,203,35)" fg:x="287741390833" fg:w="88339934"/><text x="84.8246%" y="207.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (23,140,281,500 samples, 6.80%)</title><rect x="84.2951%" y="245" width="6.8015%" height="15" fill="rgb(221,79,53)" fg:x="286790689441" fg:w="23140281500"/><text x="84.5451%" y="255.50">&lt;f64 as n..</text></g><g><title>std::f64::&lt;impl f64&gt;::exp (23,140,281,500 samples, 6.80%)</title><rect x="84.2951%" y="229" width="6.8015%" height="15" fill="rgb(243,200,35)" fg:x="286790689441" fg:w="23140281500"/><text x="84.5451%" y="239.50">std::f64:..</text></g><g><title>exp (22,101,240,174 samples, 6.50%)</title><rect x="84.6005%" y="213" width="6.4961%" height="15" fill="rgb(248,60,25)" fg:x="287829730767" fg:w="22101240174"/><text x="84.8505%" y="223.50">exp</text></g><g><title>[libm.so.6] (15,317,757,531 samples, 4.50%)</title><rect x="86.5944%" y="197" width="4.5023%" height="15" fill="rgb(227,53,46)" fg:x="294613213410" fg:w="15317757531"/><text x="86.8444%" y="207.50">[libm..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (1,948,734,903 samples, 0.57%)</title><rect x="91.0968%" y="245" width="0.5728%" height="15" fill="rgb(216,120,32)" fg:x="309931472445" fg:w="1948734903"/><text x="91.3468%" y="255.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (1,948,734,903 samples, 0.57%)</title><rect x="91.0968%" y="229" width="0.5728%" height="15" fill="rgb(220,134,1)" fg:x="309931472445" fg:w="1948734903"/><text x="91.3468%" y="239.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (25,933,846,712 samples, 7.62%)</title><rect x="84.2750%" y="261" width="7.6226%" height="15" fill="rgb(237,168,5)" fg:x="286722207576" fg:w="25933846712"/><text x="84.5250%" y="271.50">&lt;criterion..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (775,846,940 samples, 0.23%)</title><rect x="91.6696%" y="245" width="0.2280%" height="15" fill="rgb(231,100,33)" fg:x="311880207348" fg:w="775846940"/><text x="91.9196%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (775,846,940 samples, 0.23%)</title><rect x="91.6696%" y="229" width="0.2280%" height="15" fill="rgb(236,177,47)" fg:x="311880207348" fg:w="775846940"/><text x="91.9196%" y="239.50"></text></g><g><title>core::f64::math::sqrt (775,846,940 samples, 0.23%)</title><rect x="91.6696%" y="213" width="0.2280%" height="15" fill="rgb(235,7,49)" fg:x="311880207348" fg:w="775846940"/><text x="91.9196%" y="223.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1,889,014,934 samples, 0.56%)</title><rect x="91.8976%" y="261" width="0.5552%" height="15" fill="rgb(232,119,22)" fg:x="312656054288" fg:w="1889014934"/><text x="92.1476%" y="271.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (218,487,348 samples, 0.06%)</title><rect x="92.4529%" y="261" width="0.0642%" height="15" fill="rgb(254,73,53)" fg:x="314545069222" fg:w="218487348"/><text x="92.7029%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (28,060,126,227 samples, 8.25%)</title><rect x="84.2711%" y="437" width="8.2476%" height="15" fill="rgb(251,35,20)" fg:x="286708990251" fg:w="28060126227"/><text x="84.5211%" y="447.50">rayon::iter..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (28,060,126,227 samples, 8.25%)</title><rect x="84.2711%" y="421" width="8.2476%" height="15" fill="rgb(241,119,20)" fg:x="286708990251" fg:w="28060126227"/><text x="84.5211%" y="431.50">&lt;rayon::ite..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (28,060,126,227 samples, 8.25%)</title><rect x="84.2711%" y="405" width="8.2476%" height="15" fill="rgb(207,102,14)" fg:x="286708990251" fg:w="28060126227"/><text x="84.5211%" y="415.50">rayon::iter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (28,060,126,227 samples, 8.25%)</title><rect x="84.2711%" y="389" width="8.2476%" height="15" fill="rgb(248,201,50)" fg:x="286708990251" fg:w="28060126227"/><text x="84.5211%" y="399.50">&lt;core::iter..</text></g><g><title>core::option::Option&lt;T&gt;::map (28,060,126,227 samples, 8.25%)</title><rect x="84.2711%" y="373" width="8.2476%" height="15" fill="rgb(222,185,44)" fg:x="286708990251" fg:w="28060126227"/><text x="84.5211%" y="383.50">core::optio..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (28,060,126,227 samples, 8.25%)</title><rect x="84.2711%" y="357" width="8.2476%" height="15" fill="rgb(218,107,18)" fg:x="286708990251" fg:w="28060126227"/><text x="84.5211%" y="367.50">core::ops::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (28,060,126,227 samples, 8.25%)</title><rect x="84.2711%" y="341" width="8.2476%" height="15" fill="rgb(237,177,39)" fg:x="286708990251" fg:w="28060126227"/><text x="84.5211%" y="351.50">core::ops::..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (28,060,126,227 samples, 8.25%)</title><rect x="84.2711%" y="325" width="8.2476%" height="15" fill="rgb(246,69,6)" fg:x="286708990251" fg:w="28060126227"/><text x="84.5211%" y="335.50">criterion::..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (28,060,126,227 samples, 8.25%)</title><rect x="84.2711%" y="309" width="8.2476%" height="15" fill="rgb(234,208,37)" fg:x="286708990251" fg:w="28060126227"/><text x="84.5211%" y="319.50">criterion::..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28,060,126,227 samples, 8.25%)</title><rect x="84.2711%" y="293" width="8.2476%" height="15" fill="rgb(225,4,6)" fg:x="286708990251" fg:w="28060126227"/><text x="84.5211%" y="303.50">&lt;core::slic..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (28,046,908,902 samples, 8.24%)</title><rect x="84.2750%" y="277" width="8.2437%" height="15" fill="rgb(233,45,0)" fg:x="286722207576" fg:w="28046908902"/><text x="84.5250%" y="287.50">criterion::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (28,060,627,731 samples, 8.25%)</title><rect x="84.2711%" y="453" width="8.2477%" height="15" fill="rgb(226,136,5)" fg:x="286708990251" fg:w="28060627731"/><text x="84.5211%" y="463.50">rayon::iter..</text></g><g><title>rayon_core::join::join_context::{{closure}} (48,577,324,996 samples, 14.28%)</title><rect x="78.2416%" y="581" width="14.2781%" height="15" fill="rgb(211,91,47)" fg:x="266195073941" fg:w="48577324996"/><text x="78.4916%" y="591.50">rayon_core::join::join..</text></g><g><title>rayon_core::unwind::halt_unwinding (28,187,886,815 samples, 8.29%)</title><rect x="84.2345%" y="565" width="8.2851%" height="15" fill="rgb(242,88,51)" fg:x="286584512122" fg:w="28187886815"/><text x="84.4845%" y="575.50">rayon_core::..</text></g><g><title>std::panic::catch_unwind (28,187,886,815 samples, 8.29%)</title><rect x="84.2345%" y="549" width="8.2851%" height="15" fill="rgb(230,91,28)" fg:x="286584512122" fg:w="28187886815"/><text x="84.4845%" y="559.50">std::panic::..</text></g><g><title>std::panicking::catch_unwind (28,187,886,815 samples, 8.29%)</title><rect x="84.2345%" y="533" width="8.2851%" height="15" fill="rgb(254,186,29)" fg:x="286584512122" fg:w="28187886815"/><text x="84.4845%" y="543.50">std::panicki..</text></g><g><title>std::panicking::catch_unwind::do_call (28,185,381,072 samples, 8.28%)</title><rect x="84.2353%" y="517" width="8.2844%" height="15" fill="rgb(238,6,4)" fg:x="286587017865" fg:w="28185381072"/><text x="84.4853%" y="527.50">std::panicki..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28,185,381,072 samples, 8.28%)</title><rect x="84.2353%" y="501" width="8.2844%" height="15" fill="rgb(221,151,16)" fg:x="286587017865" fg:w="28185381072"/><text x="84.4853%" y="511.50">&lt;core::panic..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (28,185,381,072 samples, 8.28%)</title><rect x="84.2353%" y="485" width="8.2844%" height="15" fill="rgb(251,143,52)" fg:x="286587017865" fg:w="28185381072"/><text x="84.4853%" y="495.50">rayon_core::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (28,185,381,072 samples, 8.28%)</title><rect x="84.2353%" y="469" width="8.2844%" height="15" fill="rgb(206,90,15)" fg:x="286587017865" fg:w="28185381072"/><text x="84.4853%" y="479.50">rayon::iter:..</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (296,111,555 samples, 0.09%)</title><rect x="92.5395%" y="517" width="0.0870%" height="15" fill="rgb(218,35,8)" fg:x="314839741660" fg:w="296111555"/><text x="92.7895%" y="527.50"></text></g><g><title>std::thread::yield_now (296,111,555 samples, 0.09%)</title><rect x="92.5395%" y="501" width="0.0870%" height="15" fill="rgb(239,215,6)" fg:x="314839741660" fg:w="296111555"/><text x="92.7895%" y="511.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (296,111,555 samples, 0.09%)</title><rect x="92.5395%" y="485" width="0.0870%" height="15" fill="rgb(245,116,39)" fg:x="314839741660" fg:w="296111555"/><text x="92.7895%" y="495.50"></text></g><g><title>__sched_yield (296,111,555 samples, 0.09%)</title><rect x="92.5395%" y="469" width="0.0870%" height="15" fill="rgb(242,65,28)" fg:x="314839741660" fg:w="296111555"/><text x="92.7895%" y="479.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (353,864,455 samples, 0.10%)</title><rect x="92.5251%" y="565" width="0.1040%" height="15" fill="rgb(252,132,53)" fg:x="314790685168" fg:w="353864455"/><text x="92.7751%" y="575.50"></text></g><g><title>crossbeam_epoch::default::pin (353,864,455 samples, 0.10%)</title><rect x="92.5251%" y="549" width="0.1040%" height="15" fill="rgb(224,159,50)" fg:x="314790685168" fg:w="353864455"/><text x="92.7751%" y="559.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (308,289,805 samples, 0.09%)</title><rect x="92.5385%" y="533" width="0.0906%" height="15" fill="rgb(224,93,4)" fg:x="314836259818" fg:w="308289805"/><text x="92.7885%" y="543.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (36,356,874 samples, 0.01%)</title><rect x="92.6398%" y="229" width="0.0107%" height="15" fill="rgb(208,81,34)" fg:x="315181079303" fg:w="36356874"/><text x="92.8898%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (36,356,874 samples, 0.01%)</title><rect x="92.6398%" y="213" width="0.0107%" height="15" fill="rgb(233,92,54)" fg:x="315181079303" fg:w="36356874"/><text x="92.8898%" y="223.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (39,136,638 samples, 0.01%)</title><rect x="92.6398%" y="245" width="0.0115%" height="15" fill="rgb(237,21,14)" fg:x="315181079303" fg:w="39136638"/><text x="92.8898%" y="255.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (446,073,654 samples, 0.13%)</title><rect x="92.5210%" y="581" width="0.1311%" height="15" fill="rgb(249,128,51)" fg:x="314776776351" fg:w="446073654"/><text x="92.7710%" y="591.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (64,008,824 samples, 0.02%)</title><rect x="92.6333%" y="565" width="0.0188%" height="15" fill="rgb(223,129,24)" fg:x="315158841181" fg:w="64008824"/><text x="92.8833%" y="575.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="549" width="0.0123%" height="15" fill="rgb(231,168,25)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="559.50"></text></g><g><title>std::panic::catch_unwind (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="533" width="0.0123%" height="15" fill="rgb(224,39,20)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="543.50"></text></g><g><title>std::panicking::catch_unwind (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="517" width="0.0123%" height="15" fill="rgb(225,152,53)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="527.50"></text></g><g><title>std::panicking::catch_unwind::do_call (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="501" width="0.0123%" height="15" fill="rgb(252,17,24)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="485" width="0.0123%" height="15" fill="rgb(250,114,30)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="495.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="469" width="0.0123%" height="15" fill="rgb(229,5,4)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="453" width="0.0123%" height="15" fill="rgb(225,176,49)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="437" width="0.0123%" height="15" fill="rgb(224,221,49)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="421" width="0.0123%" height="15" fill="rgb(253,169,27)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="431.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="405" width="0.0123%" height="15" fill="rgb(211,206,16)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="415.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="389" width="0.0123%" height="15" fill="rgb(244,87,35)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="373" width="0.0123%" height="15" fill="rgb(246,28,10)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="357" width="0.0123%" height="15" fill="rgb(229,12,44)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="341" width="0.0123%" height="15" fill="rgb(210,145,37)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="325" width="0.0123%" height="15" fill="rgb(227,112,52)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="335.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="309" width="0.0123%" height="15" fill="rgb(238,155,34)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="293" width="0.0123%" height="15" fill="rgb(239,226,36)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="277" width="0.0123%" height="15" fill="rgb(230,16,23)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="287.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (41,770,702 samples, 0.01%)</title><rect x="92.6398%" y="261" width="0.0123%" height="15" fill="rgb(236,171,36)" fg:x="315181079303" fg:w="41770702"/><text x="92.8898%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (83,822,598 samples, 0.02%)</title><rect x="92.6549%" y="565" width="0.0246%" height="15" fill="rgb(221,22,14)" fg:x="315232360888" fg:w="83822598"/><text x="92.9049%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (83,822,598 samples, 0.02%)</title><rect x="92.6549%" y="549" width="0.0246%" height="15" fill="rgb(242,43,11)" fg:x="315232360888" fg:w="83822598"/><text x="92.9049%" y="559.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::{{closure}} (83,822,598 samples, 0.02%)</title><rect x="92.6549%" y="533" width="0.0246%" height="15" fill="rgb(232,69,23)" fg:x="315232360888" fg:w="83822598"/><text x="92.9049%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (71,918,346 samples, 0.02%)</title><rect x="92.6584%" y="517" width="0.0211%" height="15" fill="rgb(216,180,54)" fg:x="315244265140" fg:w="71918346"/><text x="92.9084%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (71,918,346 samples, 0.02%)</title><rect x="92.6584%" y="501" width="0.0211%" height="15" fill="rgb(216,5,24)" fg:x="315244265140" fg:w="71918346"/><text x="92.9084%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (71,918,346 samples, 0.02%)</title><rect x="92.6584%" y="485" width="0.0211%" height="15" fill="rgb(225,89,9)" fg:x="315244265140" fg:w="71918346"/><text x="92.9084%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (71,918,346 samples, 0.02%)</title><rect x="92.6584%" y="469" width="0.0211%" height="15" fill="rgb(243,75,33)" fg:x="315244265140" fg:w="71918346"/><text x="92.9084%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (71,918,346 samples, 0.02%)</title><rect x="92.6584%" y="453" width="0.0211%" height="15" fill="rgb(247,141,45)" fg:x="315244265140" fg:w="71918346"/><text x="92.9084%" y="463.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (71,918,346 samples, 0.02%)</title><rect x="92.6584%" y="437" width="0.0211%" height="15" fill="rgb(232,177,36)" fg:x="315244265140" fg:w="71918346"/><text x="92.9084%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (71,918,346 samples, 0.02%)</title><rect x="92.6584%" y="421" width="0.0211%" height="15" fill="rgb(219,125,36)" fg:x="315244265140" fg:w="71918346"/><text x="92.9084%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (71,918,346 samples, 0.02%)</title><rect x="92.6584%" y="405" width="0.0211%" height="15" fill="rgb(227,94,9)" fg:x="315244265140" fg:w="71918346"/><text x="92.9084%" y="415.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (1,288,768,132 samples, 0.38%)</title><rect x="92.6795%" y="565" width="0.3788%" height="15" fill="rgb(240,34,52)" fg:x="315316183486" fg:w="1288768132"/><text x="92.9295%" y="575.50"></text></g><g><title>std::thread::yield_now (1,276,143,564 samples, 0.38%)</title><rect x="92.6832%" y="549" width="0.3751%" height="15" fill="rgb(216,45,12)" fg:x="315328808054" fg:w="1276143564"/><text x="92.9332%" y="559.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (1,276,143,564 samples, 0.38%)</title><rect x="92.6832%" y="533" width="0.3751%" height="15" fill="rgb(246,21,19)" fg:x="315328808054" fg:w="1276143564"/><text x="92.9332%" y="543.50"></text></g><g><title>__sched_yield (1,273,329,248 samples, 0.37%)</title><rect x="92.6841%" y="517" width="0.3743%" height="15" fill="rgb(213,98,42)" fg:x="315331622370" fg:w="1273329248"/><text x="92.9341%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,408,551,060 samples, 0.41%)</title><rect x="92.6521%" y="581" width="0.4140%" height="15" fill="rgb(250,136,47)" fg:x="315222850005" fg:w="1408551060"/><text x="92.9021%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (41,836,269 samples, 0.01%)</title><rect x="93.0689%" y="565" width="0.0123%" height="15" fill="rgb(251,124,27)" fg:x="316640995437" fg:w="41836269"/><text x="93.3189%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (41,836,269 samples, 0.01%)</title><rect x="93.0689%" y="549" width="0.0123%" height="15" fill="rgb(229,180,14)" fg:x="316640995437" fg:w="41836269"/><text x="93.3189%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (41,836,269 samples, 0.01%)</title><rect x="93.0689%" y="533" width="0.0123%" height="15" fill="rgb(245,216,25)" fg:x="316640995437" fg:w="41836269"/><text x="93.3189%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;bool&gt;&gt; (176,572,053 samples, 0.05%)</title><rect x="93.0812%" y="565" width="0.0519%" height="15" fill="rgb(251,43,5)" fg:x="316682831706" fg:w="176572053"/><text x="93.3312%" y="575.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (176,572,053 samples, 0.05%)</title><rect x="93.0812%" y="549" width="0.0519%" height="15" fill="rgb(250,128,24)" fg:x="316682831706" fg:w="176572053"/><text x="93.3312%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (173,815,946 samples, 0.05%)</title><rect x="93.0820%" y="533" width="0.0511%" height="15" fill="rgb(217,117,27)" fg:x="316685587813" fg:w="173815946"/><text x="93.3320%" y="543.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (147,443,948 samples, 0.04%)</title><rect x="93.0898%" y="517" width="0.0433%" height="15" fill="rgb(245,147,4)" fg:x="316711959811" fg:w="147443948"/><text x="93.3398%" y="527.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (147,443,948 samples, 0.04%)</title><rect x="93.0898%" y="501" width="0.0433%" height="15" fill="rgb(242,201,35)" fg:x="316711959811" fg:w="147443948"/><text x="93.3398%" y="511.50"></text></g><g><title>syscall (144,666,228 samples, 0.04%)</title><rect x="93.0906%" y="485" width="0.0425%" height="15" fill="rgb(218,181,1)" fg:x="316714737531" fg:w="144666228"/><text x="93.3406%" y="495.50"></text></g><g><title>std::sync::poison::condvar::Condvar::notify_one (133,918,713 samples, 0.04%)</title><rect x="93.1337%" y="565" width="0.0394%" height="15" fill="rgb(222,6,29)" fg:x="316861272679" fg:w="133918713"/><text x="93.3837%" y="575.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::notify_one (133,918,713 samples, 0.04%)</title><rect x="93.1337%" y="549" width="0.0394%" height="15" fill="rgb(208,186,3)" fg:x="316861272679" fg:w="133918713"/><text x="93.3837%" y="559.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (133,918,713 samples, 0.04%)</title><rect x="93.1337%" y="533" width="0.0394%" height="15" fill="rgb(216,36,26)" fg:x="316861272679" fg:w="133918713"/><text x="93.3837%" y="543.50"></text></g><g><title>syscall (104,690,453 samples, 0.03%)</title><rect x="93.1422%" y="517" width="0.0308%" height="15" fill="rgb(248,201,23)" fg:x="316890500939" fg:w="104690453"/><text x="93.3922%" y="527.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (435,924,683 samples, 0.13%)</title><rect x="93.0688%" y="581" width="0.1281%" height="15" fill="rgb(251,170,31)" fg:x="316640475452" fg:w="435924683"/><text x="93.3188%" y="591.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (81,208,743 samples, 0.02%)</title><rect x="93.1730%" y="565" width="0.0239%" height="15" fill="rgb(207,110,25)" fg:x="316995191392" fg:w="81208743"/><text x="93.4230%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (78,127,578 samples, 0.02%)</title><rect x="93.1739%" y="549" width="0.0230%" height="15" fill="rgb(250,54,15)" fg:x="316998272557" fg:w="78127578"/><text x="93.4239%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (74,846,164 samples, 0.02%)</title><rect x="93.1749%" y="533" width="0.0220%" height="15" fill="rgb(227,68,33)" fg:x="317001553971" fg:w="74846164"/><text x="93.4249%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (74,846,164 samples, 0.02%)</title><rect x="93.1749%" y="517" width="0.0220%" height="15" fill="rgb(238,34,41)" fg:x="317001553971" fg:w="74846164"/><text x="93.4249%" y="527.50"></text></g><g><title>realloc (73,318,118 samples, 0.02%)</title><rect x="93.1969%" y="581" width="0.0216%" height="15" fill="rgb(220,11,15)" fg:x="317076400135" fg:w="73318118"/><text x="93.4469%" y="591.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (37,761,474 samples, 0.01%)</title><rect x="93.2073%" y="565" width="0.0111%" height="15" fill="rgb(246,111,35)" fg:x="317111956779" fg:w="37761474"/><text x="93.4573%" y="575.50"></text></g><g><title>backend_compari (317,171,314,056 samples, 93.22%)</title><rect x="0.0000%" y="597" width="93.2248%" height="15" fill="rgb(209,88,53)" fg:x="0" fg:w="317171314056"/><text x="0.2500%" y="607.50">backend_compari</text></g><g><title>[unknown] (64,818,861 samples, 0.02%)</title><rect x="93.2624%" y="581" width="0.0191%" height="15" fill="rgb(231,185,47)" fg:x="317299126374" fg:w="64818861"/><text x="93.5124%" y="591.50"></text></g><g><title>cargo (269,956,226 samples, 0.08%)</title><rect x="93.2248%" y="597" width="0.0793%" height="15" fill="rgb(233,154,1)" fg:x="317171314056" fg:w="269956226"/><text x="93.4748%" y="607.50"></text></g><g><title>[gnuplot] (35,798,747 samples, 0.01%)</title><rect x="93.3413%" y="389" width="0.0105%" height="15" fill="rgb(225,15,46)" fg:x="317567879052" fg:w="35798747"/><text x="93.5913%" y="399.50"></text></g><g><title>[gnuplot] (71,917,870 samples, 0.02%)</title><rect x="93.3389%" y="405" width="0.0211%" height="15" fill="rgb(211,135,41)" fg:x="317559612591" fg:w="71917870"/><text x="93.5889%" y="415.50"></text></g><g><title>[libc.so.6] (232,950,887 samples, 0.07%)</title><rect x="93.3731%" y="357" width="0.0685%" height="15" fill="rgb(208,54,0)" fg:x="317675813901" fg:w="232950887"/><text x="93.6231%" y="367.50"></text></g><g><title>[libc.so.6] (213,574,627 samples, 0.06%)</title><rect x="93.3788%" y="341" width="0.0628%" height="15" fill="rgb(244,136,14)" fg:x="317695190161" fg:w="213574627"/><text x="93.6288%" y="351.50"></text></g><g><title>[libc.so.6] (158,658,710 samples, 0.05%)</title><rect x="93.3949%" y="325" width="0.0466%" height="15" fill="rgb(241,56,14)" fg:x="317750106078" fg:w="158658710"/><text x="93.6449%" y="335.50"></text></g><g><title>[libc.so.6] (79,908,278 samples, 0.02%)</title><rect x="93.4181%" y="309" width="0.0235%" height="15" fill="rgb(205,80,24)" fg:x="317828856510" fg:w="79908278"/><text x="93.6681%" y="319.50"></text></g><g><title>__fprintf_chk (269,020,325 samples, 0.08%)</title><rect x="93.3633%" y="405" width="0.0791%" height="15" fill="rgb(220,57,4)" fg:x="317642513073" fg:w="269020325"/><text x="93.6133%" y="415.50"></text></g><g><title>[libc.so.6] (269,020,325 samples, 0.08%)</title><rect x="93.3633%" y="389" width="0.0791%" height="15" fill="rgb(226,193,50)" fg:x="317642513073" fg:w="269020325"/><text x="93.6133%" y="399.50"></text></g><g><title>[libc.so.6] (266,241,255 samples, 0.08%)</title><rect x="93.3641%" y="373" width="0.0783%" height="15" fill="rgb(231,168,22)" fg:x="317645292143" fg:w="266241255"/><text x="93.6141%" y="383.50"></text></g><g><title>[gnuplot] (372,384,911 samples, 0.11%)</title><rect x="93.3355%" y="421" width="0.1095%" height="15" fill="rgb(254,215,14)" fg:x="317547865516" fg:w="372384911"/><text x="93.5855%" y="431.50"></text></g><g><title>__fprintf_chk (89,642,420 samples, 0.03%)</title><rect x="93.4457%" y="421" width="0.0263%" height="15" fill="rgb(211,115,16)" fg:x="317923034803" fg:w="89642420"/><text x="93.6957%" y="431.50"></text></g><g><title>[libc.so.6] (89,642,420 samples, 0.03%)</title><rect x="93.4457%" y="405" width="0.0263%" height="15" fill="rgb(236,210,16)" fg:x="317923034803" fg:w="89642420"/><text x="93.6957%" y="415.50"></text></g><g><title>[libc.so.6] (86,879,473 samples, 0.03%)</title><rect x="93.4465%" y="389" width="0.0255%" height="15" fill="rgb(221,94,12)" fg:x="317925797750" fg:w="86879473"/><text x="93.6965%" y="399.50"></text></g><g><title>[libc.so.6] (72,773,200 samples, 0.02%)</title><rect x="93.4507%" y="373" width="0.0214%" height="15" fill="rgb(235,218,49)" fg:x="317939904023" fg:w="72773200"/><text x="93.7007%" y="383.50"></text></g><g><title>[libc.so.6] (64,541,150 samples, 0.02%)</title><rect x="93.4531%" y="357" width="0.0190%" height="15" fill="rgb(217,114,14)" fg:x="317948136073" fg:w="64541150"/><text x="93.7031%" y="367.50"></text></g><g><title>[gnuplot] (484,115,747 samples, 0.14%)</title><rect x="93.3306%" y="437" width="0.1423%" height="15" fill="rgb(216,145,22)" fg:x="317531301404" fg:w="484115747"/><text x="93.5806%" y="447.50"></text></g><g><title>[libc.so.6] (391,111,170 samples, 0.11%)</title><rect x="93.4770%" y="421" width="0.1150%" height="15" fill="rgb(217,112,39)" fg:x="318029309008" fg:w="391111170"/><text x="93.7270%" y="431.50"></text></g><g><title>read (388,230,846 samples, 0.11%)</title><rect x="93.4778%" y="405" width="0.1141%" height="15" fill="rgb(225,85,32)" fg:x="318032189332" fg:w="388230846"/><text x="93.7278%" y="415.50"></text></g><g><title>[libc.so.6] (388,230,846 samples, 0.11%)</title><rect x="93.4778%" y="389" width="0.1141%" height="15" fill="rgb(245,209,47)" fg:x="318032189332" fg:w="388230846"/><text x="93.7278%" y="399.50"></text></g><g><title>[libc.so.6] (385,458,393 samples, 0.11%)</title><rect x="93.4786%" y="373" width="0.1133%" height="15" fill="rgb(218,220,15)" fg:x="318034961785" fg:w="385458393"/><text x="93.7286%" y="383.50"></text></g><g><title>__fread_chk (405,035,338 samples, 0.12%)</title><rect x="93.4737%" y="437" width="0.1191%" height="15" fill="rgb(222,202,31)" fg:x="318018155153" fg:w="405035338"/><text x="93.7237%" y="447.50"></text></g><g><title>[gnuplot] (931,732,324 samples, 0.27%)</title><rect x="93.3230%" y="453" width="0.2739%" height="15" fill="rgb(243,203,4)" fg:x="317505515192" fg:w="931732324"/><text x="93.5730%" y="463.50"></text></g><g><title>[gnuplot] (965,192,967 samples, 0.28%)</title><rect x="93.3173%" y="469" width="0.2837%" height="15" fill="rgb(237,92,17)" fg:x="317485935078" fg:w="965192967"/><text x="93.5673%" y="479.50"></text></g><g><title>[gnuplot] (1,007,157,607 samples, 0.30%)</title><rect x="93.3156%" y="485" width="0.2960%" height="15" fill="rgb(231,119,7)" fg:x="317480109994" fg:w="1007157607"/><text x="93.5656%" y="495.50"></text></g><g><title>_IO_default_uflow (92,153,381 samples, 0.03%)</title><rect x="93.6116%" y="485" width="0.0271%" height="15" fill="rgb(237,82,41)" fg:x="318487267601" fg:w="92153381"/><text x="93.8616%" y="495.50"></text></g><g><title>_IO_file_underflow (92,153,381 samples, 0.03%)</title><rect x="93.6116%" y="469" width="0.0271%" height="15" fill="rgb(226,81,48)" fg:x="318487267601" fg:w="92153381"/><text x="93.8616%" y="479.50"></text></g><g><title>read (83,840,930 samples, 0.02%)</title><rect x="93.6140%" y="453" width="0.0246%" height="15" fill="rgb(234,70,51)" fg:x="318495580052" fg:w="83840930"/><text x="93.8640%" y="463.50"></text></g><g><title>[libc.so.6] (83,840,930 samples, 0.02%)</title><rect x="93.6140%" y="437" width="0.0246%" height="15" fill="rgb(251,86,4)" fg:x="318495580052" fg:w="83840930"/><text x="93.8640%" y="447.50"></text></g><g><title>[libc.so.6] (83,840,930 samples, 0.02%)</title><rect x="93.6140%" y="421" width="0.0246%" height="15" fill="rgb(244,144,28)" fg:x="318495580052" fg:w="83840930"/><text x="93.8640%" y="431.50"></text></g><g><title>_IO_file_underflow (109,526,967 samples, 0.03%)</title><rect x="93.6387%" y="437" width="0.0322%" height="15" fill="rgb(232,161,39)" fg:x="318579420982" fg:w="109526967"/><text x="93.8887%" y="447.50"></text></g><g><title>read (101,246,116 samples, 0.03%)</title><rect x="93.6411%" y="421" width="0.0298%" height="15" fill="rgb(247,34,51)" fg:x="318587701833" fg:w="101246116"/><text x="93.8911%" y="431.50"></text></g><g><title>[libc.so.6] (98,487,421 samples, 0.03%)</title><rect x="93.6419%" y="405" width="0.0289%" height="15" fill="rgb(225,132,2)" fg:x="318590460528" fg:w="98487421"/><text x="93.8919%" y="415.50"></text></g><g><title>[libc.so.6] (95,717,912 samples, 0.03%)</title><rect x="93.6427%" y="389" width="0.0281%" height="15" fill="rgb(209,159,44)" fg:x="318593230037" fg:w="95717912"/><text x="93.8927%" y="399.50"></text></g><g><title>_IO_default_uflow (112,304,085 samples, 0.03%)</title><rect x="93.6387%" y="453" width="0.0330%" height="15" fill="rgb(251,214,1)" fg:x="318579420982" fg:w="112304085"/><text x="93.8887%" y="463.50"></text></g><g><title>_IO_fgets (115,312,678 samples, 0.03%)</title><rect x="93.6387%" y="485" width="0.0339%" height="15" fill="rgb(247,84,47)" fg:x="318579420982" fg:w="115312678"/><text x="93.8887%" y="495.50"></text></g><g><title>_IO_getline_info (115,312,678 samples, 0.03%)</title><rect x="93.6387%" y="469" width="0.0339%" height="15" fill="rgb(240,111,43)" fg:x="318579420982" fg:w="115312678"/><text x="93.8887%" y="479.50"></text></g><g><title>[gnuplot] (1,220,498,761 samples, 0.36%)</title><rect x="93.3147%" y="501" width="0.3587%" height="15" fill="rgb(215,214,35)" fg:x="317477340270" fg:w="1220498761"/><text x="93.5647%" y="511.50"></text></g><g><title>[gnuplot] (1,256,122,467 samples, 0.37%)</title><rect x="93.3123%" y="517" width="0.3692%" height="15" fill="rgb(248,207,23)" fg:x="317469204316" fg:w="1256122467"/><text x="93.5623%" y="527.50"></text></g><g><title>[gnuplot] (1,275,997,949 samples, 0.38%)</title><rect x="93.3106%" y="533" width="0.3750%" height="15" fill="rgb(214,186,4)" fg:x="317463296533" fg:w="1275997949"/><text x="93.5606%" y="543.50"></text></g><g><title>[libwx_gtk3u_core-3.2.so.0.4.1] (51,112,972 samples, 0.02%)</title><rect x="93.7210%" y="437" width="0.0150%" height="15" fill="rgb(220,133,22)" fg:x="318859496513" fg:w="51112972"/><text x="93.9710%" y="447.50"></text></g><g><title>[libwx_gtk3u_core-3.2.so.0.4.1] (100,781,743 samples, 0.03%)</title><rect x="93.7193%" y="469" width="0.0296%" height="15" fill="rgb(239,134,19)" fg:x="318853896075" fg:w="100781743"/><text x="93.9693%" y="479.50"></text></g><g><title>__cxa_finalize (100,781,743 samples, 0.03%)</title><rect x="93.7193%" y="453" width="0.0296%" height="15" fill="rgb(250,140,9)" fg:x="318853896075" fg:w="100781743"/><text x="93.9693%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (214,556,130 samples, 0.06%)</title><rect x="93.6877%" y="485" width="0.0631%" height="15" fill="rgb(225,59,14)" fg:x="318746172184" fg:w="214556130"/><text x="93.9377%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (221,096,476 samples, 0.06%)</title><rect x="93.6874%" y="501" width="0.0650%" height="15" fill="rgb(214,152,51)" fg:x="318745216859" fg:w="221096476"/><text x="93.9374%" y="511.50"></text></g><g><title>[gnuplot] (1,574,881,242 samples, 0.46%)</title><rect x="93.3041%" y="581" width="0.4629%" height="15" fill="rgb(251,227,43)" fg:x="317441270282" fg:w="1574881242"/><text x="93.5541%" y="591.50"></text></g><g><title>__libc_start_main (1,569,199,148 samples, 0.46%)</title><rect x="93.3058%" y="565" width="0.4612%" height="15" fill="rgb(241,96,17)" fg:x="317446952376" fg:w="1569199148"/><text x="93.5558%" y="575.50"></text></g><g><title>[libc.so.6] (1,552,854,991 samples, 0.46%)</title><rect x="93.3106%" y="549" width="0.4564%" height="15" fill="rgb(234,198,43)" fg:x="317463296533" fg:w="1552854991"/><text x="93.5606%" y="559.50"></text></g><g><title>exit (276,857,042 samples, 0.08%)</title><rect x="93.6857%" y="533" width="0.0814%" height="15" fill="rgb(220,108,29)" fg:x="318739294482" fg:w="276857042"/><text x="93.9357%" y="543.50"></text></g><g><title>[libc.so.6] (276,857,042 samples, 0.08%)</title><rect x="93.6857%" y="517" width="0.0814%" height="15" fill="rgb(226,163,33)" fg:x="318739294482" fg:w="276857042"/><text x="93.9357%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (14,178,326,412 samples, 4.17%)</title><rect x="94.4973%" y="485" width="4.1674%" height="15" fill="rgb(205,194,45)" fg:x="321500759760" fg:w="14178326412"/><text x="94.7473%" y="495.50">[ld-l..</text></g><g><title>[ld-linux-x86-64.so.2] (13,042,969,573 samples, 3.83%)</title><rect x="94.8310%" y="469" width="3.8337%" height="15" fill="rgb(206,143,44)" fg:x="322636116599" fg:w="13042969573"/><text x="95.0810%" y="479.50">[ld-..</text></g><g><title>[ld-linux-x86-64.so.2] (1,152,809,777 samples, 0.34%)</title><rect x="98.3259%" y="453" width="0.3388%" height="15" fill="rgb(236,136,36)" fg:x="334526276395" fg:w="1152809777"/><text x="98.5759%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (523,518,204 samples, 0.15%)</title><rect x="98.5108%" y="437" width="0.1539%" height="15" fill="rgb(249,172,42)" fg:x="335155567968" fg:w="523518204"/><text x="98.7608%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (16,629,639,310 samples, 4.89%)</title><rect x="93.7876%" y="501" width="4.8879%" height="15" fill="rgb(216,139,23)" fg:x="319086177805" fg:w="16629639310"/><text x="94.0376%" y="511.50">[ld-li..</text></g><g><title>[ld-linux-x86-64.so.2] (41,005,700 samples, 0.01%)</title><rect x="99.5309%" y="405" width="0.0121%" height="15" fill="rgb(207,166,20)" fg:x="338626007234" fg:w="41005700"/><text x="99.7809%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (19,595,833,492 samples, 5.76%)</title><rect x="93.7839%" y="517" width="5.7597%" height="15" fill="rgb(210,209,22)" fg:x="319073523469" fg:w="19595833492"/><text x="94.0339%" y="527.50">[ld-lin..</text></g><g><title>_dl_catch_exception (2,953,539,846 samples, 0.87%)</title><rect x="98.6755%" y="501" width="0.8681%" height="15" fill="rgb(232,118,20)" fg:x="335715817115" fg:w="2953539846"/><text x="98.9255%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,951,661,771 samples, 0.87%)</title><rect x="98.6760%" y="485" width="0.8676%" height="15" fill="rgb(238,113,42)" fg:x="335717695190" fg:w="2951661771"/><text x="98.9260%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,948,961,544 samples, 0.87%)</title><rect x="98.6768%" y="469" width="0.8668%" height="15" fill="rgb(231,42,5)" fg:x="335720395417" fg:w="2948961544"/><text x="98.9268%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,941,590,166 samples, 0.86%)</title><rect x="98.6790%" y="453" width="0.8646%" height="15" fill="rgb(243,166,24)" fg:x="335727766795" fg:w="2941590166"/><text x="98.9290%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,414,051,091 samples, 0.71%)</title><rect x="98.8341%" y="437" width="0.7096%" height="15" fill="rgb(237,226,12)" fg:x="336255305870" fg:w="2414051091"/><text x="99.0841%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (362,973,626 samples, 0.11%)</title><rect x="99.4369%" y="421" width="0.1067%" height="15" fill="rgb(229,133,24)" fg:x="338306383335" fg:w="362973626"/><text x="99.6869%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (19,611,578,026 samples, 5.76%)</title><rect x="93.7809%" y="533" width="5.7643%" height="15" fill="rgb(238,33,43)" fg:x="319063299453" fg:w="19611578026"/><text x="94.0309%" y="543.50">[ld-lin..</text></g><g><title>[libQt6Gui.so.6.10.0] (50,155,849 samples, 0.01%)</title><rect x="99.5543%" y="533" width="0.0147%" height="15" fill="rgb(227,59,38)" fg:x="338705577147" fg:w="50155849"/><text x="99.8043%" y="543.50"></text></g><g><title>dlsym (50,520,793 samples, 0.01%)</title><rect x="99.5731%" y="485" width="0.0148%" height="15" fill="rgb(230,97,0)" fg:x="338769752017" fg:w="50520793"/><text x="99.8231%" y="495.50"></text></g><g><title>[libc.so.6] (50,520,793 samples, 0.01%)</title><rect x="99.5731%" y="469" width="0.0148%" height="15" fill="rgb(250,173,50)" fg:x="338769752017" fg:w="50520793"/><text x="99.8231%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (50,520,793 samples, 0.01%)</title><rect x="99.5731%" y="453" width="0.0148%" height="15" fill="rgb(240,15,50)" fg:x="338769752017" fg:w="50520793"/><text x="99.8231%" y="463.50"></text></g><g><title>_dl_catch_exception (50,520,793 samples, 0.01%)</title><rect x="99.5731%" y="437" width="0.0148%" height="15" fill="rgb(221,93,22)" fg:x="338769752017" fg:w="50520793"/><text x="99.8231%" y="447.50"></text></g><g><title>[libc.so.6] (47,765,336 samples, 0.01%)</title><rect x="99.5739%" y="421" width="0.0140%" height="15" fill="rgb(245,180,53)" fg:x="338772507474" fg:w="47765336"/><text x="99.8239%" y="431.50"></text></g><g><title>[libc.so.6] (47,765,336 samples, 0.01%)</title><rect x="99.5739%" y="405" width="0.0140%" height="15" fill="rgb(231,88,51)" fg:x="338772507474" fg:w="47765336"/><text x="99.8239%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (42,234,635 samples, 0.01%)</title><rect x="99.5756%" y="389" width="0.0124%" height="15" fill="rgb(240,58,21)" fg:x="338778038175" fg:w="42234635"/><text x="99.8256%" y="399.50"></text></g><g><title>[libSDL2-2.0.so.0.3200.56] (56,057,118 samples, 0.02%)</title><rect x="99.5723%" y="501" width="0.0165%" height="15" fill="rgb(237,21,10)" fg:x="338766992574" fg:w="56057118"/><text x="99.8223%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (39,318,889 samples, 0.01%)</title><rect x="99.6123%" y="293" width="0.0116%" height="15" fill="rgb(218,43,11)" fg:x="338903033261" fg:w="39318889"/><text x="99.8623%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (66,915,431 samples, 0.02%)</title><rect x="99.6049%" y="309" width="0.0197%" height="15" fill="rgb(218,221,29)" fg:x="338878031496" fg:w="66915431"/><text x="99.8549%" y="319.50"></text></g><g><title>dlopen (121,848,214 samples, 0.04%)</title><rect x="99.5904%" y="501" width="0.0358%" height="15" fill="rgb(214,118,42)" fg:x="338828598604" fg:w="121848214"/><text x="99.8404%" y="511.50"></text></g><g><title>[libc.so.6] (121,848,214 samples, 0.04%)</title><rect x="99.5904%" y="485" width="0.0358%" height="15" fill="rgb(251,200,26)" fg:x="338828598604" fg:w="121848214"/><text x="99.8404%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (121,848,214 samples, 0.04%)</title><rect x="99.5904%" y="469" width="0.0358%" height="15" fill="rgb(237,101,39)" fg:x="338828598604" fg:w="121848214"/><text x="99.8404%" y="479.50"></text></g><g><title>_dl_catch_exception (121,848,214 samples, 0.04%)</title><rect x="99.5904%" y="453" width="0.0358%" height="15" fill="rgb(251,117,11)" fg:x="338828598604" fg:w="121848214"/><text x="99.8404%" y="463.50"></text></g><g><title>[libc.so.6] (121,848,214 samples, 0.04%)</title><rect x="99.5904%" y="437" width="0.0358%" height="15" fill="rgb(216,223,23)" fg:x="338828598604" fg:w="121848214"/><text x="99.8404%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (121,848,214 samples, 0.04%)</title><rect x="99.5904%" y="421" width="0.0358%" height="15" fill="rgb(251,54,12)" fg:x="338828598604" fg:w="121848214"/><text x="99.8404%" y="431.50"></text></g><g><title>_dl_catch_exception (116,271,386 samples, 0.03%)</title><rect x="99.5921%" y="405" width="0.0342%" height="15" fill="rgb(254,176,54)" fg:x="338834175432" fg:w="116271386"/><text x="99.8421%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (116,271,386 samples, 0.03%)</title><rect x="99.5921%" y="389" width="0.0342%" height="15" fill="rgb(210,32,8)" fg:x="338834175432" fg:w="116271386"/><text x="99.8421%" y="399.50"></text></g><g><title>_dl_catch_exception (116,271,386 samples, 0.03%)</title><rect x="99.5921%" y="373" width="0.0342%" height="15" fill="rgb(235,52,38)" fg:x="338834175432" fg:w="116271386"/><text x="99.8421%" y="383.50"></text></g><g><title>[ld-linux-x86-64.so.2] (116,271,386 samples, 0.03%)</title><rect x="99.5921%" y="357" width="0.0342%" height="15" fill="rgb(231,4,44)" fg:x="338834175432" fg:w="116271386"/><text x="99.8421%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (113,528,896 samples, 0.03%)</title><rect x="99.5929%" y="341" width="0.0334%" height="15" fill="rgb(249,2,32)" fg:x="338836917922" fg:w="113528896"/><text x="99.8429%" y="351.50"></text></g><g><title>[ld-linux-x86-64.so.2] (110,769,564 samples, 0.03%)</title><rect x="99.5937%" y="325" width="0.0326%" height="15" fill="rgb(224,65,26)" fg:x="338839677254" fg:w="110769564"/><text x="99.8437%" y="335.50"></text></g><g><title>[libSDL2-2.0.so.0.3200.56] (200,506,893 samples, 0.06%)</title><rect x="99.5699%" y="533" width="0.0589%" height="15" fill="rgb(250,73,40)" fg:x="338758712002" fg:w="200506893"/><text x="99.8199%" y="543.50"></text></g><g><title>[libSDL2-2.0.so.0.3200.56] (200,506,893 samples, 0.06%)</title><rect x="99.5699%" y="517" width="0.0589%" height="15" fill="rgb(253,177,16)" fg:x="338758712002" fg:w="200506893"/><text x="99.8199%" y="527.50"></text></g><g><title>[libheif.so.1.20.2] (686,219,584 samples, 0.20%)</title><rect x="99.6443%" y="533" width="0.2017%" height="15" fill="rgb(217,32,34)" fg:x="339011752946" fg:w="686219584"/><text x="99.8943%" y="543.50"></text></g><g><title>[libheif.so.1.20.2] (686,219,584 samples, 0.20%)</title><rect x="99.6443%" y="517" width="0.2017%" height="15" fill="rgb(212,7,10)" fg:x="339011752946" fg:w="686219584"/><text x="99.8943%" y="527.50"></text></g><g><title>de265_init (672,437,385 samples, 0.20%)</title><rect x="99.6483%" y="501" width="0.1976%" height="15" fill="rgb(245,89,8)" fg:x="339025535145" fg:w="672437385"/><text x="99.8983%" y="511.50"></text></g><g><title>init_scan_orders (647,295,544 samples, 0.19%)</title><rect x="99.6557%" y="485" width="0.1903%" height="15" fill="rgb(237,16,53)" fg:x="339050676986" fg:w="647295544"/><text x="99.9057%" y="495.50"></text></g><g><title>iconv_open (42,357,641 samples, 0.01%)</title><rect x="99.8557%" y="453" width="0.0124%" height="15" fill="rgb(250,204,30)" fg:x="339731119526" fg:w="42357641"/><text x="100.1057%" y="463.50"></text></g><g><title>__gconv_open (39,638,521 samples, 0.01%)</title><rect x="99.8565%" y="437" width="0.0117%" height="15" fill="rgb(208,77,27)" fg:x="339733838646" fg:w="39638521"/><text x="100.1065%" y="447.50"></text></g><g><title>[libc.so.6] (39,638,521 samples, 0.01%)</title><rect x="99.8565%" y="421" width="0.0117%" height="15" fill="rgb(250,204,28)" fg:x="339733838646" fg:w="39638521"/><text x="100.1065%" y="431.50"></text></g><g><title>[libc.so.6] (39,638,521 samples, 0.01%)</title><rect x="99.8565%" y="405" width="0.0117%" height="15" fill="rgb(244,63,21)" fg:x="339733838646" fg:w="39638521"/><text x="100.1065%" y="415.50"></text></g><g><title>[libc.so.6] (39,638,521 samples, 0.01%)</title><rect x="99.8565%" y="389" width="0.0117%" height="15" fill="rgb(236,85,44)" fg:x="339733838646" fg:w="39638521"/><text x="100.1065%" y="399.50"></text></g><g><title>[libc.so.6] (34,050,903 samples, 0.01%)</title><rect x="99.8581%" y="373" width="0.0100%" height="15" fill="rgb(215,98,4)" fg:x="339739426264" fg:w="34050903"/><text x="100.1081%" y="383.50"></text></g><g><title>[libc.so.6] (34,050,903 samples, 0.01%)</title><rect x="99.8581%" y="357" width="0.0100%" height="15" fill="rgb(235,38,11)" fg:x="339739426264" fg:w="34050903"/><text x="100.1081%" y="367.50"></text></g><g><title>[libc.so.6] (34,050,903 samples, 0.01%)</title><rect x="99.8581%" y="341" width="0.0100%" height="15" fill="rgb(254,186,25)" fg:x="339739426264" fg:w="34050903"/><text x="100.1081%" y="351.50"></text></g><g><title>[ld-linux-x86-64.so.2] (34,050,903 samples, 0.01%)</title><rect x="99.8581%" y="325" width="0.0100%" height="15" fill="rgb(225,55,31)" fg:x="339739426264" fg:w="34050903"/><text x="100.1081%" y="335.50"></text></g><g><title>_dl_catch_exception (34,050,903 samples, 0.01%)</title><rect x="99.8581%" y="309" width="0.0100%" height="15" fill="rgb(211,15,21)" fg:x="339739426264" fg:w="34050903"/><text x="100.1081%" y="319.50"></text></g><g><title>[libc.so.6] (34,050,903 samples, 0.01%)</title><rect x="99.8581%" y="293" width="0.0100%" height="15" fill="rgb(215,187,41)" fg:x="339739426264" fg:w="34050903"/><text x="100.1081%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (34,050,903 samples, 0.01%)</title><rect x="99.8581%" y="277" width="0.0100%" height="15" fill="rgb(248,69,32)" fg:x="339739426264" fg:w="34050903"/><text x="100.1081%" y="287.50"></text></g><g><title>wxCSConv::DoCreate (58,832,120 samples, 0.02%)</title><rect x="99.8541%" y="485" width="0.0173%" height="15" fill="rgb(252,102,52)" fg:x="339725659261" fg:w="58832120"/><text x="100.1041%" y="495.50"></text></g><g><title>[libwx_baseu-3.2.so.0.4.1] (58,832,120 samples, 0.02%)</title><rect x="99.8541%" y="469" width="0.0173%" height="15" fill="rgb(253,140,32)" fg:x="339725659261" fg:w="58832120"/><text x="100.1041%" y="479.50"></text></g><g><title>wxGet_wxConvLocalPtr (72,739,312 samples, 0.02%)</title><rect x="99.8541%" y="517" width="0.0214%" height="15" fill="rgb(216,56,42)" fg:x="339725659261" fg:w="72739312"/><text x="100.1041%" y="527.50"></text></g><g><title>wxCSConv::wxCSConv (72,739,312 samples, 0.02%)</title><rect x="99.8541%" y="501" width="0.0214%" height="15" fill="rgb(216,184,14)" fg:x="339725659261" fg:w="72739312"/><text x="100.1041%" y="511.50"></text></g><g><title>[libwx_baseu-3.2.so.0.4.1] (105,938,467 samples, 0.03%)</title><rect x="99.8476%" y="533" width="0.0311%" height="15" fill="rgb(237,187,27)" fg:x="339703529948" fg:w="105938467"/><text x="100.0976%" y="543.50"></text></g><g><title>[libwx_gtk3u_core-3.2.so.0.4.1] (75,790,463 samples, 0.02%)</title><rect x="99.8828%" y="517" width="0.0223%" height="15" fill="rgb(219,65,3)" fg:x="339823218676" fg:w="75790463"/><text x="100.1328%" y="527.50"></text></g><g><title>[libwx_gtk3u_core-3.2.so.0.4.1] (117,109,611 samples, 0.03%)</title><rect x="99.8787%" y="533" width="0.0344%" height="15" fill="rgb(245,83,25)" fg:x="339809468415" fg:w="117109611"/><text x="100.1287%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (20,937,032,779 samples, 6.15%)</title><rect x="93.7798%" y="549" width="6.1539%" height="15" fill="rgb(214,205,45)" fg:x="319059714602" fg:w="20937032779"/><text x="94.0298%" y="559.50">[ld-linu..</text></g><g><title>[ld-linux-x86-64.so.2] (21,155,039,441 samples, 6.22%)</title><rect x="93.7670%" y="581" width="6.2180%" height="15" fill="rgb(241,20,18)" fg:x="319016151524" fg:w="21155039441"/><text x="94.0170%" y="591.50">[ld-linu..</text></g><g><title>[ld-linux-x86-64.so.2] (21,111,476,363 samples, 6.21%)</title><rect x="93.7798%" y="565" width="6.2052%" height="15" fill="rgb(232,163,23)" fg:x="319059714602" fg:w="21111476363"/><text x="94.0298%" y="575.50">[ld-linu..</text></g><g><title>all (340,222,084,929 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(214,5,46)" fg:x="0" fg:w="340222084929"/><text x="0.2500%" y="623.50"></text></g><g><title>gnuplot (22,780,814,647 samples, 6.70%)</title><rect x="93.3041%" y="597" width="6.6959%" height="15" fill="rgb(229,78,17)" fg:x="317441270282" fg:w="22780814647"/><text x="93.5541%" y="607.50">gnuplot</text></g></svg></svg>