   Compiling liblevenshtein v0.1.0 (/home/dylon/Workspace/f1r3fly.io/liblevenshtein-rust)
warning: variable does not need to be mutable
  --> benches/dawg_benchmarks.rs:71:21
   |
71 |                 let mut dawg = DynamicDawg::default();
   |                     ----^^^^
   |                     |
   |                     help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> benches/dawg_benchmarks.rs:160:21
    |
160 |                 let mut dawg_clone = dawg.clone();
    |                     ----^^^^^^^^^^
    |                     |
    |                     help: remove this `mut`

warning: variable does not need to be mutable
   --> benches/dawg_benchmarks.rs:152:13
    |
152 |         let mut dawg = DynamicDawg::default();
    |             ----^^^^
    |             |
    |             help: remove this `mut`

warning: `liblevenshtein` (bench "dawg_benchmarks") generated 3 warnings (run `cargo fix --bench "dawg_benchmarks"` to apply 3 suggestions)
    Finished `bench` profile [optimized + debuginfo] target(s) in 42.36s
     Running benches/dawg_benchmarks.rs (target/release/deps/dawg_benchmarks-6005c94a1d9b6dc5)
Benchmarking dawg_contains/100
Benchmarking dawg_contains/100: Warming up for 3.0000 s
Benchmarking dawg_contains/100: Collecting 100 samples in estimated 5.0063 s (1.6M iterations)
Benchmarking dawg_contains/100: Analyzing
dawg_contains/100       time:   [3.1052 µs 3.1266 µs 3.1497 µs]
                        thrpt:  [31.749 Melem/s 31.983 Melem/s 32.204 Melem/s]
                 change:
                        time:   [-66.606% -66.303% -65.973%] (p = 0.00 < 0.05)
                        thrpt:  [+193.88% +196.76% +199.46%]
                        Performance has improved.
Found 6 outliers among 100 measurements (6.00%)
  4 (4.00%) high mild
  2 (2.00%) high severe
Benchmarking dawg_contains/500
Benchmarking dawg_contains/500: Warming up for 3.0000 s
Benchmarking dawg_contains/500: Collecting 100 samples in estimated 5.0151 s (1.6M iterations)
Benchmarking dawg_contains/500: Analyzing
dawg_contains/500       time:   [3.1841 µs 3.2213 µs 3.2563 µs]
                        thrpt:  [30.710 Melem/s 31.043 Melem/s 31.406 Melem/s]
                 change:
                        time:   [-66.778% -66.437% -66.081%] (p = 0.00 < 0.05)
                        thrpt:  [+194.82% +197.95% +201.01%]
                        Performance has improved.
Benchmarking dawg_contains/1000
Benchmarking dawg_contains/1000: Warming up for 3.0000 s
Benchmarking dawg_contains/1000: Collecting 100 samples in estimated 5.0028 s (1.3M iterations)
Benchmarking dawg_contains/1000: Analyzing
dawg_contains/1000      time:   [3.8221 µs 3.8371 µs 3.8513 µs]
                        thrpt:  [25.965 Melem/s 26.062 Melem/s 26.164 Melem/s]
                 change:
                        time:   [-60.522% -60.132% -59.727%] (p = 0.00 < 0.05)
                        thrpt:  [+148.30% +150.83% +153.31%]
                        Performance has improved.
Found 14 outliers among 100 measurements (14.00%)
  3 (3.00%) low severe
  5 (5.00%) low mild
  5 (5.00%) high mild
  1 (1.00%) high severe
Benchmarking dawg_contains/5000
Benchmarking dawg_contains/5000: Warming up for 3.0000 s
Benchmarking dawg_contains/5000: Collecting 100 samples in estimated 5.0128 s (1.3M iterations)
Benchmarking dawg_contains/5000: Analyzing
dawg_contains/5000      time:   [3.8336 µs 3.8550 µs 3.8782 µs]
                        thrpt:  [25.785 Melem/s 25.940 Melem/s 26.085 Melem/s]
                 change:
                        time:   [-60.641% -60.246% -59.881%] (p = 0.00 < 0.05)
                        thrpt:  [+149.26% +151.55% +154.07%]
                        Performance has improved.
Found 6 outliers among 100 measurements (6.00%)
  3 (3.00%) low mild
  3 (3.00%) high mild

